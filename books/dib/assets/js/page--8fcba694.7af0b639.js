(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{484:function(t,s,a){"use strict";a.r(s);var e=a(1),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("接触过 Babel 插件编写的话，可能有个感受，官方文档提供的介绍太少了，社区中关于如何写插件介绍的比较多，但对其中用到的工具的介绍却比较少。")]),t._v(" "),a("p",[t._v("为什么需要插件呢？")]),t._v(" "),a("p",[t._v("babel-parser 主要有两个功能：")]),t._v(" "),a("ol",[a("li",[t._v("识别各种语法，且默认情况下，并不开启所有语法的识别支持，这是出于性能考虑")]),t._v(" "),a("li",[t._v("解析源码字符串为抽象语法树，并不负责对源码的转译")])]),t._v(" "),a("p",[t._v("在Babel的整体设计中，对于部分语法支持的开关、对抽象语法树的读取和修改等操作，均用插件配合完成。有些插件可以作为语法开关，有些插件可以解析修改抽象语法树以实现转译功能。")]),t._v(" "),a("p",[t._v("那么，本章就来攻克下 Babel 插件编写这一环吧。")]),t._v(" "),a("p",[t._v("编写插件的过程，实际上是对 AST 节点的遍历和操作。需要了解如何遍历节点、如何操作节点。")]),t._v(" "),a("h2",{attrs:{id:"_5-1-遍历节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-遍历节点"}},[t._v("#")]),t._v(" 5.1 遍历节点")]),t._v(" "),a("p",[t._v("Babel 通过 babel-traverse 遍历 AST 节点，并在遍历的过程中，接收开发者传入的处理逻辑对 AST 节点进行增删改查。")]),t._v(" "),a("h3",{attrs:{id:"_5-1-1-babel-traverse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-1-babel-traverse"}},[t._v("#")]),t._v(" 5.1.1 babel-traverse")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("基本功能")]),t._v(" "),a("p",[t._v("babel-traverse 维护了 Babel 的节点状态，通过它，可以遍历 AST 节点，插件开发者可以在遍历过程中对节点进行替换、删除、添加等操作。")]),t._v(" "),a("p",[t._v("比如：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" parser "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@babel/parser'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" traverse "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@babel/traverse'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" generator "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@babel/generator'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" code "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("function square(n) {\n    return n * n;\n}")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ast "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("traverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("enter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Identifier'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("code")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" newCode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("generator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newCode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("p",[a("code",[t._v("traverse")]),t._v(" 接收一些参数，并处理后，AST 发生了变动。")]),t._v(" "),a("p",[t._v("上述代码执行后，打印 "),a("code",[t._v("newCode")]),t._v(" 结果是：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("square")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("参数")]),t._v(" "),a("p",[t._v("babel-traverse 对外暴露的方法 "),a("code",[t._v("traverse")]),t._v(" 定义在 "),a("code",[t._v("packages/babel-traverse/src/index.ts")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("traverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    parent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    opts"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" TraverseOptions "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    scope"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    state"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    parentPath"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodePath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("各参数含义如下：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("parent")]),t._v(": 要遍历的节点对象")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("opts")]),t._v(": 遍历配置项")]),t._v(" "),a("p",[t._v("参数 "),a("code",[t._v("opts")]),t._v(" 的类型描述 "),a("code",[t._v("TraverseOptions")]),t._v(" 内容如下：")]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TraverseOptions"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    scope"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    noScope"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    denylist"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Visitor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("也就是说，"),a("code",[t._v("opts")]),t._v(" 的值可以是：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" noScope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" denyList "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("也可以是一个 Visitor（访问者），下节将详细介绍 Visitor。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("state")]),t._v(": TODO")]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("parentPath")]),t._v(": TODO")]),t._v(" "),a("p",[t._v("TODO")])])])])]),t._v(" "),a("h3",{attrs:{id:"_5-1-2-visitor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-2-visitor"}},[t._v("#")]),t._v(" 5.1.2 Visitor")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("访问者模式")]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[t._v("Visitor 对象")]),t._v(" "),a("p",[t._v("babel-traverse 接收一个 Visitor 对象，开发者通过该对象可以拦截 babel-traverse 对某个节点的访问时刻，并做处理。")]),t._v(" "),a("p",[t._v("Visitor 对象有哪些格式呢？babel-traverse 中定义的 Visitor 类型如下：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" type Visitor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" VisitNodeObject"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Type "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" VisitNode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Extract"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Type "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("K")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" keyof t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Aliases"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" VisitNode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Aliases"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("K")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" keyof VirtualTypeAliases"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" VisitNode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" VirtualTypeAliases"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" VisitNode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" type VisitNode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" VisitNodeFunction"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" VisitNodeObject"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" type VisitNodeFunction"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodePath"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("state")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VisitNodeObject")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    enter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" VisitNodeFunction"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    exit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" VisitNodeFunction"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br")])]),a("p",[t._v("可以看到，Visitor 可以有多种写法：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("enter/exit 式写法")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("enter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("比如，")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("babelTraverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("enter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("遍历ast上的每个时，"),a("code",[t._v("enter/exit")]),t._v(" 均会触发。")]),t._v(" "),a("p",[t._v("有意思的是，"),a("code",[t._v("babel-core")]),t._v(" 内部也实用了 "),a("code",[t._v("babel-traverse")]),t._v(" 对目标代码对应的 AST 节点进行遍历，但它禁止这样写，比如：")]),t._v(" "),a("p",[t._v("index.js:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" babel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'babel-core'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" code "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("const a = 1;")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n\nbabel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transformSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("plugins")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./plugin.js'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[a("code",[t._v("./plugin.js")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("api")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("visitor")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("enter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("babel-core 将这种写法视为非法："),a("code",[t._v('cannot contain catch-all "enter" or "exit" handlers. Please target individual nodes.')]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("节点名称 + 函数式写法")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Identifier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("节点名称 + enter/exit 式写法")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Identifier")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("enter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])])])]),t._v(" "),a("p",[t._v("其中，节点名称可以是以下几种方式：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("节点名称")]),t._v(" "),a("p",[t._v("定义在 "),a("code",[t._v("babel-types/src/ast-types/generated/index.ts")]),t._v(" 的 "),a("code",[t._v("Node")]),t._v(" 字段。")])]),t._v(" "),a("li",[a("p",[t._v("节点别名")]),t._v(" "),a("p",[t._v("定义在 "),a("code",[t._v("babel-types/src/ast-types/generated/index.ts")]),t._v(" 的 "),a("code",[t._v("Aliases")]),t._v(" 字段，以及定义在 "),a("code",[t._v("babel-traverse/src/path/generated/virtual-types.ts")]),t._v(" 的类型。")])]),t._v(" "),a("li",[a("p",[t._v("其他名称")]),t._v(" "),a("p",[t._v("源码中是这样写的：")]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" VisitNode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("可以是任何字符串，但很显然没有这么自由，具体可写的内容后文会介绍。")])])])]),t._v(" "),a("li",[a("p",[t._v("Visitor 的参数")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("对 Visitor 处理函数的封装")]),t._v(" "),a("p",[t._v("babel-traverse 内部对传入的插件处理函数做了一层封装，在文件 "),a("code",[t._v("babel-traverse/src/visitors.ts")]),t._v(" 中有这么一段代码：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newFn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("newFn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行 visitor")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wrapper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    newFn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wrapper")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newFn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Override toString in case this function is printed, we want to print the wrapped function, same as we do in `wrapCheck`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newFn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    newFn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("toString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("p",[t._v("其中，"),a("code",[t._v("fn")]),t._v(" 是插件传入的处理方法，"),a("code",[t._v("newFn")]),t._v(" 是封装后的方法，有这么几个特点：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("fn")]),t._v(" 的两个参数是 "),a("code",[t._v("path")]),t._v(" 和 "),a("code",[t._v("state")])]),t._v(" "),a("li",[a("code",[t._v("fn")]),t._v(" 执行的时候，上下文是 "),a("code",[t._v("state")])]),t._v(" "),a("li",[a("code",[t._v("newFn")]),t._v(" 重写了 "),a("code",[t._v("toString")]),t._v(" 方法，当需要打印函数体时，可以还原 "),a("code",[t._v("fn")]),t._v("，这是一个值得借鉴的细节")])])]),t._v(" "),a("li",[a("p",[t._v("Visitor 的参数")]),t._v(" "),a("p",[t._v("上述代码中，Visitor 对象提供的处理函数 "),a("code",[t._v("fn")]),t._v(" 可接收 2 个参数："),a("code",[t._v("path")]),t._v("、"),a("code",[t._v("state")]),t._v("，且 "),a("code",[t._v("this")]),t._v(" 的值为 "),a("code",[t._v("state")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("path")]),t._v(" 和 "),a("code",[t._v("state")]),t._v(" 对象描述了当前被访问节点的各类信息，这两个参数携带的属性和方法非常多，下文另开一节对其详细介绍。")])])])]),t._v(" "),a("li",[a("p",[t._v("节点处理队列")]),t._v(" "),a("p",[t._v("插件开发者提供的 Visitor，在 babel-traverse 处理时，会针对每个 Visitor 的 key（节点名称），会有一个数组用于存储插件传入的处理方法，也就是说，针对一个节点，有一个处理队列。")])])]),t._v(" "),a("h3",{attrs:{id:"_5-1-3-path"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-3-path"}},[t._v("#")]),t._v(" 5.1.3 path")]),t._v(" "),a("p",[t._v("path 对象是内部 NodePath 类的实例。")]),t._v(" "),a("h3",{attrs:{id:"path功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#path功能"}},[t._v("#")]),t._v(" path功能")]),t._v(" "),a("p",[a("code",[t._v("path")]),t._v(" 上的 API 非常多，如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/5757051/155270654-6fdc9d73-d475-478d-9f60-fdb72342c4e2.jpg",alt:"Babel插件编写/path"}})]),t._v(" "),a("p",[t._v("根据上图，从来源看，"),a("code",[t._v("path")]),t._v(" 作为 "),a("code",[t._v("NodePath")]),t._v(" 类的实例，该对象上的 API 可以分为几类：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("path")]),t._v(" 对象自身的属性和方法")]),t._v(" "),a("li",[a("code",[t._v("path")]),t._v(" 继承自 "),a("code",[t._v("NodePath")]),t._v(" 类的原型上的属性和方法")]),t._v(" "),a("li",[t._v("各功能模块对外暴露的属性和方法，被添加到 "),a("code",[t._v("NodePath.prototype")]),t._v("，便于 "),a("code",[t._v("path")]),t._v(" 使用")]),t._v(" "),a("li",[t._v("各功能功能模块为 "),a("code",[t._v("path")]),t._v(" 对象直接设置的属性/方法")])]),t._v(" "),a("p",[t._v("从功能上，"),a("code",[t._v("path")]),t._v(" 有以下能力：")]),t._v(" "),a("ul",[a("li",[t._v("断言与校验，等同于 babel-types 的断言")]),t._v(" "),a("li",[t._v("操作祖先节点、家族节点")]),t._v(" "),a("li",[t._v("替换、转换、修改、删除节点")]),t._v(" "),a("li",[t._v("节点计算操作")]),t._v(" "),a("li",[t._v("获取节点上下文的信息")]),t._v(" "),a("li",[t._v("获取节点命名空间的信息")]),t._v(" "),a("li",[t._v("和注释节点相关的操作")]),t._v(" "),a("li",[t._v("...")])]),t._v(" "),a("h3",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),a("p",[t._v("笔者将下文中部分 API 的调用链路进行了图解，重点描述："),a("code",[t._v("path.context")]),t._v("、插件引入的方法执行链路等信息。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/5757051/155273662-d602f720-1928-48eb-a6df-88828b7af64f.jpg",alt:"Babel插件编写/path-context-visit"}})]),t._v(" "),a("blockquote",[a("p",[t._v("阅读建议：下文的 API 介绍可以参照上图一起了解")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("基本属性/方法")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("path.node: t.Node")])]),t._v(" "),a("p",[t._v('表示 AST 节点对象。关于节点对象的具体信息，章节"Babel节点集"中对各个节点有详细的介绍。')])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.opts: any = null")])]),t._v(" "),a("p",[a("code",[t._v("path.opts")]),t._v(" 就是执行 "),a("code",[t._v("babelTraverse")]),t._v(" 传入的遍历配置项。从上文的图解可以看到该属性的设置过程：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("babelTraverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" opts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ./context.ts")]),t._v("\ncontext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TraversalContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" opts "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncontext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("opts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" opts\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ./path/context.ts")]),t._v("\npath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("opts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("opts\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.skipKeys")])]),t._v(" "),a("ul",[a("li",[t._v("babel-traverse/src/context.ts")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.parentPath")])]),t._v(" "),a("p",[t._v("父级 "),a("code",[t._v("path")]),t._v(" 对象。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.container")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.listKey")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.key")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.type")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.inList")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.getScope(scope: Scope): Scope")])]),t._v(" "),a("p",[t._v("获取当前节点对应的 "),a("code",[t._v("scope")]),t._v(" 作用域空间对象。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.traverse<T>(visitor: Visitor<T>, state: T): void")])]),t._v(" "),a("p",[t._v("遍历当前节点及其子节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.buildCodeFrameError")])]),t._v(" "),a("p",[t._v("内部调用的是 "),a("code",[t._v("path.hub.buildError")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("buildError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Error "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TypeError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Error "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.parent")])]),t._v(" "),a("p",[t._v("表示当前节点的父节点。")])])])]),t._v(" "),a("li",[a("p",[t._v("上下文信息: "),a("code",[t._v("path.context")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("path.context: TraversalContext")])]),t._v(" "),a("p",[a("code",[t._v("path.context")]),t._v(" 是 "),a("code",[t._v("TraversalContext")]),t._v(" 类的实例，表示当前访问节点的上下文信息。文件 "),a("code",[t._v("babel/packages/babel-traverse/src/context.ts")]),t._v(" 定义了 "),a("code",[t._v("TraversalContext")]),t._v(" 类。")]),t._v(" "),a("p",[t._v("在遍历节点队列的过程中，每访问一个节点，"),a("code",[t._v("path.context")]),t._v(" 就会被设置为被访问节点对应的上下文 "),a("code",[t._v("context")]),t._v(" 对象，上图有描述。")]),t._v(" "),a("p",[t._v("一个较为迷惑的点是，"),a("code",[t._v("./context.ts")]),t._v(" 和 "),a("code",[t._v("./path/context.ts")]),t._v(" 二者有什么区别？")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("./context.ts")]),t._v(" 定义了 "),a("code",[t._v("TraversalContext")]),t._v(" 类，该类的实例，作为属性 "),a("code",[t._v("path.context")]),t._v(" 的值")]),t._v(" "),a("li",[a("code",[t._v("./path/context.ts")]),t._v(" 对外暴露的各个方法和属性，可以直接被 "),a("code",[t._v("path")]),t._v(" 对象访问，因为这些方法和属性被直接添加到 "),a("code",[t._v("NodePath.prototype")]),t._v(" 上，"),a("code",[t._v("path")]),t._v(" 作为 "),a("code",[t._v("NodePath")]),t._v(" 的实例是可以直接访问的")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.context.visit(node, key): boolean")])]),t._v(" "),a("p",[t._v("遍历 "),a("code",[t._v("node[key]")]),t._v(" 节点集合及其子节点，返回值表示是否结束节点遍历。")]),t._v(" "),a("p",[t._v("该方法的执行，会调用 Babel 插件里注册的处理函数，分别在 "),a("code",[t._v("enter/exit")]),t._v(" 阶段执行，从源码和上图可以看到如下执行链路：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ./context.ts")]),t._v("\npath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("visit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ./path/context.ts")]),t._v("\npath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("visit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ./path/context.ts")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ./path/context.ts")]),t._v("\nfns队列依次执行，fns就是插件传入的处理方法\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("p",[t._v("这是插件提供的处理函数的调用方式：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" ret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("then "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"function"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("You appear to be using a plugin with an async traversal visitor, ")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("which your current version of Babel does not support. ")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("If you're using a published plugin, you may need to upgrade ")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("your @babel/core version.")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Unexpected return value from visitor method ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("可以看到：")]),t._v(" "),a("ul",[a("li",[t._v("函数的 "),a("code",[t._v("this")]),t._v(" 指向 "),a("code",[t._v("path.state")]),t._v("，两个参数分别指向 "),a("code",[t._v("path")]),t._v(" 和 "),a("code",[t._v("path.state")])]),t._v(" "),a("li",[t._v("Babel 还未支持异步的 Visitor 处理函数")]),t._v(" "),a("li",[t._v("Visitor 处理函数不能反悔非空值")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.contexts: Array<TraversalContext>")])]),t._v(" "),a("p",[t._v("某种类型的节点队列在遍历过程中，"),a("code",[t._v("path")]),t._v(" 对象维护了一个 "),a("code",[t._v("path.contexts")]),t._v(" 数组，每当遍历一个节点时，"),a("code",[t._v("path.contexts")]),t._v(" 数组即会将当前被访问节点的上下文信息对象 "),a("code",[t._v("context")]),t._v(" 推入该数组。如果整个队列遍历结束，则会清空 "),a("code",[t._v("path.contexts")]),t._v("。")])])])]),t._v(" "),a("li",[a("p",[t._v("作用域信息: "),a("code",[t._v("path.scope")])]),t._v(" "),a("p",[a("code",[t._v("path.scope")]),t._v(" 描述 "),a("code",[t._v("path.node")]),t._v(" 节点所在的作用域的所有信息。")]),t._v(" "),a("p",[a("code",[t._v("path.scope")]),t._v(" 对象对应的构造函数 "),a("code",[t._v("Scope")]),t._v("，定义于文件 "),a("code",[t._v("babel/packages/babel-traverse/src/scope/index.ts")]),t._v("，通过 "),a("code",[t._v("init/crawl")]),t._v(" 等方法完成实例的初始化操作。")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("path.scope.binding: Binding")])]),t._v(" "),a("p",[t._v("既然介绍作用域空间，肯定要涉及变量绑定等信息，babel-traverse 用单独的 "),a("code",[t._v("babel/packages/babel-traverse/src/scope/binding.ts")]),t._v(" 文件定义了绑定信息类 "),a("code",[t._v("Binding")]),t._v("。")]),t._v(" "),a("p",[t._v("在此初始化一个 "),a("code",[t._v("Binding")]),t._v(" 类的实例 "),a("code",[t._v("binding")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("binding "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Binding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("以下是 "),a("code",[t._v("path.scope.binding")]),t._v(" 对象的一些属性和方法：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("path.scope.binding.identifier: t.Identifier")])]),t._v(" "),a("p",[t._v("指向标识符 AST 节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.binding.scope: Scope")])]),t._v(" "),a("p",[t._v("对 "),a("code",[t._v("scope")]),t._v(" 的反向引用："),a("code",[t._v("path.scope.binding.scope")]),t._v(" 指向 "),a("code",[t._v("path.scope")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.binding.path: NodePath")])]),t._v(" "),a("p",[t._v("对 "),a("code",[t._v("path")]),t._v(" 的反向引用："),a("code",[t._v("path.scope.binding.path")]),t._v(" 指向 "),a("code",[t._v("path")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.binding.kind: string")])]),t._v(" "),a("p",[t._v("绑定类型，值可以是："),a("code",[t._v('"var" | "let" | "const" | "module" | "hoisted" | "param" | "local" | "unknown"')]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.binding.references: number")])]),t._v(" "),a("p",[t._v("表示 "),a("code",[t._v("binding")]),t._v(" 对象对应的变量被引用的次数。以下述代码为例：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    key\n    key\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("变量 "),a("code",[t._v("key")]),t._v(" 的 "),a("code",[t._v("binding.references")]),t._v(" 值是 2，因为 "),a("code",[t._v("for")]),t._v(" 循环内部有 2 处对 "),a("code",[t._v("key")]),t._v(" 的引用。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.binding.referencePaths: Array<NodePath>")])]),t._v(" "),a("p",[t._v("它是一个数组，用于记录 "),a("code",[t._v("path.node")]),t._v(" 被引用的各个节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.binding.referenced: boolean")])]),t._v(" "),a("p",[t._v("描述当前 "),a("code",[t._v("path.node")]),t._v(' 节点是否被引用到。该属性可用于"tree-shaking"功能，如果没有被引用到，则该节点可被删除。')])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.bindings")])]),t._v(" "),a("p",[t._v("该对象初始值为 "),a("code",[t._v("Object.create(null)")]),t._v("，近似于 "),a("code",[t._v("{}")]),t._v("，但原型链查找链路只有一层（对象自身）。")]),t._v(" "),a("p",[t._v("babel-traverse 在节点扫描过程中会为该对象不断添加当前 "),a("code",[t._v("path.node")]),t._v(" 节点作用域内的变量绑定信息，设置方式为：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this 就是 path.scope ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bindings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Binding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("identifier")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("scope")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" bindingPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" kind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.uid: string")])]),t._v(" "),a("p",[t._v("唯一的 scope id。")]),t._v(" "),a("p",[t._v("babel-traverse 过程中，各个 "),a("code",[t._v("path.scope")]),t._v(" 具有唯一的 "),a("code",[t._v("uid")]),t._v("，如 "),a("code",[t._v('"_id1"')]),t._v("，其中 "),a("code",[t._v("id1")]),t._v(" 往往是当前变量的名称。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.path: NodePath")])]),t._v(" "),a("p",[t._v("反向引用："),a("code",[t._v("path.scope.path")]),t._v(" 指向 "),a("code",[t._v("path")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.block")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.globals")])]),t._v(" "),a("p",[a("code",[t._v("path.scope")]),t._v(" 的内部变量，用于当前节点所处的 "),a("code",[t._v("ProgramParent")]),t._v(" 节点存储一些绑定信息。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.uids: { [name: string]: boolean }")])]),t._v(" "),a("p",[t._v("TODO，待验证")]),t._v(" "),a("p",[t._v("初始值为 "),a("code",[t._v("Object.create(null)")]),t._v("。")]),t._v(" "),a("p",[t._v("该对象记录了 "),a("code",[t._v("path.scope")]),t._v(" 作用域中涉及的所有节点的 "),a("code",[t._v("uid")]),t._v("，其值类似："),a("code",[t._v("{ _id1: true, _id2: true, _id3: false }")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.data: Object")])]),t._v(" "),a("p",[a("code",[t._v("path.scope.data")]),t._v(" 记录了 babel-traverse 运行过程中的一些数据信息，用于内部流转。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.crawling: boolean")])]),t._v(" "),a("p",[t._v("标志位，表示 "),a("code",[t._v("path.scope")]),t._v(" 是否在初始化过程中，因为初始化中涉及对各类树的遍历操作，因此称为 "),a("code",[t._v("crawling")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.parent")])]),t._v(" "),a("p",[t._v("指向父级 "),a("code",[t._v("scope")]),t._v(" 节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.parentBlock")])]),t._v(" "),a("p",[t._v("指向父级 "),a("code",[t._v("block")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.hub")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[t._v("遍历方法: "),a("code",[t._v("path.scope.traverse: Function")])]),t._v(" "),a("p",[t._v("该方法就是 babel-traverse 对外暴露的 "),a("code",[t._v("traverse")]),t._v(" 方法，用于遍历节点树。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.generateUidIdentifier(name?: string): t.Identifier")])]),t._v(" "),a("p",[t._v("生成基于 "),a("code",[t._v("name")]),t._v("，且名称唯一的、新 Identifier 节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.generateDeclaredUidIdentifier(name?: string): t.Identifier")])]),t._v(" "),a("p",[t._v("生成基于 "),a("code",[t._v("name")]),t._v("，且名称唯一的、新 Identifier 节点，不过其返回的是用 "),a("code",[t._v("path.scope.generateUidIdentifier")]),t._v(" 生成的新节点的副本节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.generateUid(name?: string): string")])]),t._v(" "),a("p",[t._v("基于 "),a("code",[t._v("name")]),t._v(" 生成新的唯一的 "),a("code",[t._v("uid")]),t._v("。")]),t._v(" "),a("p",[t._v("内部使用 "),a("code",[t._v("do...while")]),t._v(" 保证了对名称唯一性验证的持续进行，同时新的 "),a("code",[t._v("uid")]),t._v(" 避免和以下场景冲突：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("this.hasLabel(uid)")]),t._v(": 和标记的关键词同名")]),t._v(" "),a("li",[a("code",[t._v("this.hasBinding(uid)")]),t._v(": 和绑定的变量同名")]),t._v(" "),a("li",[a("code",[t._v("this.hasGlobal(uid)")]),t._v(": 和全局变量同名")]),t._v(" "),a("li",[a("code",[t._v("this.hasReference(uid)")]),t._v(": 和被引用中的变量同名")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.generateUidBasedOnNode(node: t.Node, defaultName?: string): string")])]),t._v(" "),a("p",[t._v("基于 "),a("code",[t._v("node")]),t._v(" 生成 "),a("code",[t._v("uid")]),t._v("。方法内部通过对 "),a("code",[t._v("node")]),t._v(" 的递归遍历，生成一个 "),a("code",[t._v("name")]),t._v(" 数组。案例TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.generateUidIdentifierBasedOnNode(node: t.Node, defaultName?: string): t.Identifier")])]),t._v(" "),a("p",[t._v("生成既有基于 "),a("code",[t._v("node")]),t._v(" 生成的新 "),a("code",[t._v("uid")]),t._v(" 的新 "),a("code",[t._v("Identifier")]),t._v(" 节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.isStatic")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.maybeGenerateMemoised")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.checkBlockScopedCollisions")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.rename")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.dump")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.hasLabel(name: string): boolean")])]),t._v(" "),a("p",[a("code",[t._v("path.node")]),t._v(" 是否含有标签类型的关键字。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.getLabel(name: string): NodePath<t.LabeledStatement>")])]),t._v(" "),a("p",[t._v("获取 "),a("code",[t._v("path.node")]),t._v(" 携带的标签关键字节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.registerLabel(path: NodePath<t.LabeledStatement>): void")])]),t._v(" "),a("p",[t._v("将标签关键字节点注册到当前 "),a("code",[t._v("scope")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.registerDeclaration(path: NodePath): void")])]),t._v(" "),a("p",[t._v("根据 "),a("code",[t._v("path")]),t._v(" 对应的节点类型，注册到各类map对象中。")]),t._v(" "),a("p",[t._v("和 "),a("code",[t._v("path.scope.binding.kind: string")]),t._v("字段对应的（"),a("code",[t._v('"var" | "let" | "const" | "module" | "hoisted" | "param" | "local" | "unknown"')]),t._v("），以下类型的节点会被注册：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("LabeledStatement")]),t._v(": 写入 "),a("code",[t._v("this.labels")]),t._v(" 对象")]),t._v(" "),a("li",[a("code",[t._v("FunctionDeclaration")]),t._v(": 写入 "),a("code",[t._v("hoisted")])]),t._v(" "),a("li",[a("code",[t._v("VariableDeclaration")]),t._v(": 写入 "),a("code",[t._v("path.scope.bindings")]),t._v(" 的 "),a("code",[t._v("var/let/const")]),t._v(" 类型")]),t._v(" "),a("li",[a("code",[t._v("ClassDeclaration")]),t._v(": 写入 "),a("code",[t._v("path.scope.bindings")]),t._v(" 的 "),a("code",[t._v("let")]),t._v("类型")]),t._v(" "),a("li",[a("code",[t._v("ImportDeclaration")]),t._v(": 写入"),a("code",[t._v("path.scope.bindings")]),t._v(" 的 "),a("code",[t._v("module")]),t._v("类型")]),t._v(" "),a("li",[a("code",[t._v("ExportDeclaration")]),t._v(": 解构该节点，并递归注册")]),t._v(" "),a("li",[t._v("无法识别的，注册为 "),a("code",[t._v("unknown")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.buildUndefinedNode(): t.UnaryExpression")])]),t._v(" "),a("p",[t._v("生成一个 "),a("code",[t._v("undefined")]),t._v(" 节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.registerConstantViolation")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.registerBinding")])]),t._v(" "),a("p",[t._v("为 "),a("code",[t._v("path.scope.bindings")]),t._v(" 对象设置当前 "),a("code",[t._v("path.node")]),t._v(" 节点对应作用域的所有绑定信息。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.addGlobal")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.hasUid(name: string): boolean")])]),t._v(" "),a("p",[t._v("沿着 "),a("code",[t._v("path.scope")]),t._v(" 及以上的 "),a("code",[t._v("scope")]),t._v(" 节点对象，判断是否含有 "),a("code",[t._v("uid")]),t._v(" 为 "),a("code",[t._v("name")]),t._v(" 的节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.hasGlobal(name: string): boolean")])]),t._v(" "),a("p",[t._v("判断当前节点及各级父节点中，每个"),a("code",[t._v("scope.globals")]),t._v("对象是否含有"),a("code",[t._v("key")]),t._v("为"),a("code",[t._v("name")]),t._v("的属性。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.hasReference(name: string): boolean")])]),t._v(" "),a("p",[t._v("直接根据顶层作用域节点 "),a("code",[t._v("ProgramParent")]),t._v(" 得知是否含有 "),a("code",[t._v("uid")]),t._v(" 为 "),a("code",[t._v("name")]),t._v(" 的节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.isPure")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.crawl")])]),t._v(" "),a("p",[t._v("初始化 "),a("code",[t._v("path.scope")]),t._v(" 实例时执行的方法，"),a("code",[t._v("crawl")]),t._v(' 意为"爬取"，该方法有以下作用：')]),t._v(" "),a("ul",[a("li",[t._v("初始化 "),a("code",[t._v("path.scope")]),t._v(" 的一系列属性："),a("code",[t._v("references/bindings/globals/uids/data")])]),t._v(" "),a("li",[t._v("遍历当前 "),a("code",[t._v("path")]),t._v(" 节点及其子节点，注册 "),a("code",[t._v("path.scope")]),t._v(" 的各类属性")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.getProgramParent(): Scope | null")])]),t._v(" "),a("p",[t._v("向上遍历"),a("code",[t._v("scope")]),t._v("树，直到遇到类型是"),a("code",[t._v("Program")]),t._v("的"),a("code",[t._v("scope")]),t._v("节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.getFunctionParent(): Scope | null")])]),t._v(" "),a("p",[t._v("向上遍历 "),a("code",[t._v("scope")]),t._v(" 树，直到遇到类型是 "),a("code",[t._v("Function")]),t._v(" 的 "),a("code",[t._v("scope")]),t._v(" 节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.getBlockParent: Scope")])]),t._v(" "),a("p",[t._v("从当前节点到各级父节点，判断是否有块级作用域的存在。块级作用域对应的节点有："),a("code",[t._v("BlockStatement/Loop/Program/Function/Switch")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.getAllBindings: { [ key: string ]: Binding }")])]),t._v(" "),a("p",[t._v("从当前节点到各级父节点，遍历时收集每个 "),a("code",[t._v("scope")]),t._v(" 节点的 "),a("code",[t._v("scope.bindings")]),t._v(" 信息。返回收集的所有绑定信息对象。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.getAllBindingsOfKind(...kinds: string[]): any")])]),t._v(" "),a("p",[t._v("从当前节点到各级父节点，判断每个节点的类型是否匹配 "),a("code",[t._v("kinds: string[]")]),t._v(" 中的元素，如有匹配，则收集该 "),a("code",[t._v("scope")]),t._v(" 节点的 "),a("code",[t._v("scope.bindings")]),t._v(" 信息。返回收集的所有绑定信息对象。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.bindingIdentifierEquals(name: string, node: t.Node): boolean")])]),t._v(" "),a("p",[t._v("从当前节点到各级父节点，获取 "),a("code",[t._v("uid")]),t._v(" 为 "),a("code",[t._v("name")]),t._v(" 的标识符节点，并判断该节点和传入的 "),a("code",[t._v("node")]),t._v(" 是否相同。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.getBinding(name: string): Binding | undefined")])]),t._v(" "),a("p",[t._v("从当前节点到各级父节点，判断每个节点是否含有 "),a("code",[t._v("uid")]),t._v(" 为 "),a("code",[t._v("name")]),t._v(" 的 "),a("code",[t._v("scope.binding")]),t._v(" 对象，如有，则就近返回第一个匹配的 "),a("code",[t._v("binding")]),t._v(" 对象。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.getOwnBinding(name: string): Binding | undefined")])]),t._v(" "),a("p",[t._v("获取当前节点中，"),a("code",[t._v("uid")]),t._v(" 为 "),a("code",[t._v("name")]),t._v(" 的 "),a("code",[t._v("scope.binding")]),t._v(" 对象。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.getBindingIdentifier(name: string): t.Identifier | undefined")]),t._v(" TODO PR")]),t._v(" "),a("p",[t._v("从当前节点及各级父节点，获取索引 "),a("code",[t._v("key")]),t._v(" 为 "),a("code",[t._v("name")]),t._v(" 的节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.getOwnBindingIdentifier(name: string): t.Identifier | undefined")])]),t._v(" "),a("p",[t._v("从当前节点的 "),a("code",[t._v("binding")]),t._v(" 信息获取 "),a("code",[t._v("uid")]),t._v(" 为 "),a("code",[t._v("name")]),t._v(" 的节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.hasOwnBinding(name: string): boolean")])]),t._v(" "),a("p",[t._v("判断当前节点中，是否含有 "),a("code",[t._v("uid")]),t._v(" 为 "),a("code",[t._v("name")]),t._v(" 的 "),a("code",[t._v("scope.binding")]),t._v(" 对象。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.hasBinding(name: string, noGlobals?): boolean")])]),t._v(" "),a("p",[t._v("判断当前节点及向上一级的父节点是否有 "),a("code",[t._v("uid")]),t._v(" 为 "),a("code",[t._v("name")]),t._v(" 的绑定节点信息。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.parentHasBinding(name: string, noGlobals?)")])]),t._v(" "),a("p",[t._v("判断当前节点的向上一级的父节点，是否有 "),a("code",[t._v("uid")]),t._v(" 为 "),a("code",[t._v("name")]),t._v(" 的绑定节点信息。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.moveBindingTo(name: string, scope: Scope)")])]),t._v(" "),a("p",[t._v("移动当前命名空间中名称为 "),a("code",[t._v("name")]),t._v(" 的绑定信息到目标 "),a("code",[t._v("scope")]),t._v(" 命名空间。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.removeOwnBinding(name: string): void")])]),t._v(" "),a("p",[t._v("删除当前节点的 "),a("code",[t._v("uid")]),t._v(" 为 "),a("code",[t._v("name")]),t._v(" 的绑定信息。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.scope.removeBinding(name: string): void")])]),t._v(" "),a("p",[t._v("删除当前节点及各级父节点的 "),a("code",[t._v("uid")]),t._v(" 为 "),a("code",[t._v("name")]),t._v(" 的绑定信息。")])])])]),t._v(" "),a("li",[a("p",[t._v("家族节点(family)")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("path.getOpposite(this: NodePath): NodePath | null")])]),t._v(" "),a("p",[t._v("获取“对面”的兄弟节点，比如一个二元表达式含有左右两个节点，如 "),a("code",[t._v("1 + 2")]),t._v("，节点是 "),a("code",[t._v("left")]),t._v(" 节点，该方法返回的就是 "),a("code",[t._v("right")]),t._v(" 节点。")]),t._v(" "),a("p",[t._v("源码为：")]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOpposite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodePath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodePath "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"left"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSibling")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"right"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"right"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSibling")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"left"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.getCompletionRecords")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.getSibling(this: NodePath, key: string | number): NodePath")])]),t._v(" "),a("p",[t._v("获取对应 "),a("code",[t._v("key")]),t._v(" 值的兄弟节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.getPrevSibling(this: NodePath): NodePath")])]),t._v(" "),a("p",[t._v("获取前一个兄弟节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.getNextSibling(this: NodePath): NodePath")])]),t._v(" "),a("p",[t._v("获取下一个兄弟节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.getAllNextSiblings(this: NodePath): NodePath[]")])]),t._v(" "),a("p",[t._v("获取后面所有的兄弟节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.getAllPrevSiblings(this: NodePath): NodePath[]")])]),t._v(" "),a("p",[t._v("获取前面所有的兄弟节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.get<T extends t.Node>(this: NodePath<T>, key: string, context?: true | TraversalContext ): NodePath | NodePath[]")])]),t._v(" "),a("p",[t._v("根据 "),a("code",[t._v("key")]),t._v(" 值获取目标节点。key的内容可以是 "),a("code",[t._v('"foo"')]),t._v(" 或 "),a("code",[t._v('"foo.bar"')]),t._v(" 这样的写法。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.getBindingIdentifiers( duplicates?: boolean ): Record<string, t.Identifier[] | t.Identifier>")])]),t._v(" "),a("p",[t._v("获取和 "),a("code",[t._v("path.node")]),t._v(" 节点绑定的标识符列表。该方法等同于 "),a("code",[t._v("t.getBindingIdentifiers()")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.getOuterBindingIdentifiers(duplicates: true ): Record<string, t.Identifier[]>")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.getBindingIdentifierPaths(this: NodePath, duplicates: boolean = false, outerOnly: boolean = false ): { [x: string]: NodePath;}")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.getOuterBindingIdentifierPaths(this: NodePath, duplicates?: boolean ): { [x: string]: NodePath;}")])]),t._v(" "),a("p",[t._v("TODO")])])])]),t._v(" "),a("li",[a("p",[t._v("祖先节点(ancestry)")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("path.findParent(callback: (path: NodePath) => boolean ): NodePath | null")])]),t._v(" "),a("p",[t._v("从当前节点的父节点开始，递归向上查找目标祖先节点，直到 "),a("code",[t._v("callback")]),t._v(" 返回 "),a("code",[t._v("true")]),t._v("，"),a("code",[t._v("callback")]),t._v(" 参数为递归向上过程的各级父节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.find(callback: (path: NodePath) => boolean ): NodePath | null")])]),t._v(" "),a("p",[t._v("从当前节点开始，递归向上查找目标祖先节点，直到 "),a("code",[t._v("callback")]),t._v(" 返回 "),a("code",[t._v("true")]),t._v("，"),a("code",[t._v("callback")]),t._v(" 参数为递归向上过程的各级父节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.getFunctionParent(this: NodePath): NodePath<t.Function> | null")])]),t._v(" "),a("p",[t._v("这是基于 "),a("code",[t._v("findParent")]),t._v(" 的快捷方法，如果向上递归过程中，有一个祖先节点是函数，则停止查找并返回该节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.getStatementParent(this: NodePath): NodePath<t.Statement>")])]),t._v(" "),a("p",[t._v("从当前节点开始，递归向上查找类型为 "),a("code",[t._v("Statement")]),t._v(" 的祖先节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.getEarliestCommonAncestorFrom(this: NodePath, paths: Array<NodePath> ): NodePath")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.getDeepestCommonAncestorFrom")])]),t._v(" "),a("p",[t._v("参数及返回值类型：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDeepestCommonAncestorFrom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodePath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("paths")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NodePath"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("deepest")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ancestries")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodePath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" NodePath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodePath\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.getAncestry(this: NodePath): Array<NodePath>")])]),t._v(" "),a("p",[t._v("获取包含当前节点的所有祖先节点的节点列表。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.isAncestor(this: NodePath, maybeDescendant: NodePath): boolean")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.isDescendant(this: NodePath, maybeAncestor: NodePath): boolean")])]),t._v(" "),a("p",[t._v("判断 "),a("code",[t._v("maybeAncestor")]),t._v(" 节点是否是 "),a("code",[t._v("node")]),t._v(" 的祖先节点，内部利用 "),a("code",[t._v("findParent")]),t._v(" 方法。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.inType(this: NodePath, ...candidateTypes: string[]): boolean")])]),t._v(" "),a("p",[t._v("TODO")])])])]),t._v(" "),a("li",[a("p",[t._v("推断相关: inference")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("path.getTypeAnnotation(): t.FlowType")])]),t._v(" "),a("p",[t._v("获取当前节点的类型推断。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.isBaseType(baseName: string, soft?: boolean): boolean")])]),t._v(" "),a("p",[t._v("是否是基本类型，包括："),a("code",[t._v("string / number / boolean / any / mixed / empty / void")]),t._v("。")]),t._v(" "),a("p",[t._v("值得注意的是，该方法接收一个 "),a("code",[t._v("soft: boolean")]),t._v(" 属性，表示是否是宽松式地检查，如果值为 "),a("code",[t._v("false")]),t._v("，则会抛出错误。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.couldBeBaseType(name: string): boolean")])]),t._v(" "),a("p",[t._v("判断当前节点是否是基础类型，包括："),a("code",[t._v("string / number / boolean / any / mixed / empty / void")]),t._v("。")]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.baseTypeStrictlyMatches(rightArg: NodePath): boolean")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.isGenericType(genericName: string): boolean")])]),t._v(" "),a("p",[t._v("TODO")])])])]),t._v(" "),a("li",[a("p",[t._v("计算相关: evaluation")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("path.evaluateTruthy(this: NodePath): boolean | undefined")])]),t._v(" "),a("p",[t._v("计算当前表达式节点的计算结果是否可以转为 "),a("code",[t._v("true")]),t._v(" 或 "),a("code",[t._v("false")]),t._v("，该方法可能有如下返回值：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("true")]),t._v(": 确定该表达式的计算结果可以转为 "),a("code",[t._v("true")])]),t._v(" "),a("li",[a("code",[t._v("false")]),t._v(": 确定该表达式的计算结果可以转为 "),a("code",[t._v("false")])]),t._v(" "),a("li",[a("code",[t._v("undefined")]),t._v(": 不确定该表达式的计算结果是否可转为 "),a("code",[t._v("true")]),t._v(" 还是 "),a("code",[t._v("false")])])]),t._v(" "),a("p",[t._v("对于该方法的返回值 "),a("code",[t._v("returnedValue")]),t._v("，要特别注意要使用 "),a("code",[t._v("returnedValue === false")]),t._v(" 判断其是否为 "),a("code",[t._v("false")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.evaluate(this: NodePath): { confident: boolean; value: any; deopt?: NodePath; }")])]),t._v(" "),a("p",[t._v("计算当前表达式节点的值的相关信息。")]),t._v(" "),a("p",[t._v("当然这也是尝试计算，所以该方法的返回值结构为：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    confident"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示是否确定能获取表达式的值，类型为 boolean")]),t._v("\n    value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表达式的值，默认为 undefined")]),t._v("\n    deopt "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("源码的注释里介绍了几种场景：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("evaluate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5 + 5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { confident: true, value: 10 }")]),t._v("\nt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("evaluate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"!true"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { confident: true, value: false }")]),t._v("\nt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("evaluate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo + foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { confident: false, value: undefined, deopt: NodePath }")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])])])]),t._v(" "),a("li",[a("p",[t._v("introspection")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("path.matchesPattern(this: NodePath, pattern: string, allowPartial?: boolean ): boolean")])]),t._v(" "),a("p",[t._v("判断当前节点是否匹配传入的 "),a("code",[t._v("pattern")]),t._v(" 模板字符。比如 "),a("code",[t._v("pattern = 'React.createClass'")]),t._v(" 匹配的AST节点对象是 "),a("code",[t._v("React.createClass")]),t._v(" 和 "),a("code",[t._v('React["createClass"]')]),t._v("。")]),t._v(" "),a("p",[t._v("方法内部依赖 babel-types："),a("code",[t._v("t.matchesPattern(this.node, pattern, allowPartial)")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.has(this: NodePath, key: string): boolean")])]),t._v(" "),a("p",[t._v("判断 "),a("code",[t._v("node")]),t._v(" 节点对象的 "),a("code",[t._v("node[key]")]),t._v(" 是否有值。")]),t._v(" "),a("p",[t._v("这里额外判断了 "),a("code",[t._v("node[key]")]),t._v(" 为数组时，是否为空数组的情况。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.is(this: NodePath, key: string): boolean")])]),t._v(" "),a("p",[t._v("等同于 "),a("code",[t._v("path.has")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.isnt(this: NodePath, key: string): boolean")])]),t._v(" "),a("p",[t._v("等同于 "),a("code",[t._v("!path.is(this: NodePath, key: string): boolean")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.isStatic(this: NodePath): boolean")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isStatic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodePath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isStatic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("判断当前 "),a("code",[t._v("node")]),t._v(" 节点所在的作用域是否是静态的。TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.equals(this: NodePath, key: string, value): boolean")])]),t._v(" "),a("p",[t._v("检查当前 "),a("code",[t._v("node")]),t._v(" 的 key 值是否严格等于 value。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.isNodeType(this: NodePath, type: string): boolean")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNodeType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodePath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("判断当前节点类型 "),a("code",[t._v("node.type")]),t._v(" 是否是目标类型 "),a("code",[t._v("type")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.canHaveVariableDeclarationOrExpression")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("canHaveVariableDeclarationOrExpression")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodePath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"init"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"left"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("判断当前节点是下述 "),a("code",[t._v("for")]),t._v(" 循环中的变量：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.canSwapBetweenExpressionAndStatement")])]),t._v(" "),a("p",[t._v("判断一个节点是否可以在表达式与语句之间相互转化，针对的是这种写法：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.isCompletionRecord")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.isStatementOrBlock")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.referencesImport")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.getSource")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.willIMaybeExecuteBefore")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.resolve")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.isConstantExpression")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.isInStrictMode")])]),t._v(" "),a("p",[t._v("判断当前节点是否位于严格模式的上下文中。")])])])]),t._v(" "),a("li",[a("p",[t._v("上下文相关(context)")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("path.call(this: NodePath, key: string): boolean")])]),t._v(" "),a("ul",[a("li",[t._v("执行 Visitor 传入的相关节点处理方法")]),t._v(" "),a("li",[t._v("返回 true 时：TODO")]),t._v(" "),a("li",[t._v("返回 false 时：TODO")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.isDenylisted(this: NodePath): boolean")])]),t._v(" "),a("p",[a("code",[t._v("babelTraverse(node, opts)")]),t._v(" 中，"),a("code",[t._v("opts")]),t._v(" 有配置项 "),a("code",[t._v("denyList: Array<string>")]),t._v("，配置不访问的节点。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.visit")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.skip")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.skipKey")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.stop")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.setScope")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.setContext")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.resync")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.popContext")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.pushContext")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.setup")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.setKey")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.requeue")])])])])]),t._v(" "),a("li",[a("p",[t._v("替换节点: replacements")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("path.replaceWithMultiple<Nodes extends Array<t.Node>>(nodes: Nodes): NodePath[]")])]),t._v(" "),a("p",[t._v("用多个节点替换掉当前节点，并返回替换后的 "),a("code",[t._v("path")]),t._v(" 节点列表。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.replaceWithSourceString(this: NodePath, replacement): void")])]),t._v(" "),a("p",[t._v("用字符串形式的代码，替换目标节点 "),a("code",[t._v("node")]),t._v("。")]),t._v(" "),a("p",[t._v("内部实现上，会使用 "),a("code",[t._v("babel-parser")]),t._v(" 的 "),a("code",[t._v("parse")]),t._v(" 方法将代码字符串解析为 AST 节点，然后通过 "),a("code",[t._v("replaceWith")]),t._v(" 方法完成节点替换。")]),t._v(" "),a("p",[t._v("解析代码字符串失败的话，会抛出错误，描述为 "),a("code",[t._v("BABEL_REPLACE_SOURCE_ERROR")]),t._v(" 错误，并用 "),a("code",[t._v("babel-code-frame")]),t._v(" 描述出错的代码位置信息。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.replaceWith(this: NodePath, replacement: t.Node | NodePath)")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.replaceExpressionWithStatements(this: NodePath, nodes: Array<t.Statement>)")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.replaceInline(this: NodePath, nodes: t.Node | Array<t.Node>)")])]),t._v(" "),a("p",[t._v("TODO")])])])]),t._v(" "),a("li",[a("p",[t._v("转换节点: conversion")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("path.toComputedKey(this: NodePath)")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.ensureBlock")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.arrowFunctionToShadowed")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.unwrapFunctionEnvironment")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.arrowFunctionToExpression")])]),t._v(" "),a("p",[t._v("将箭头函数转为 ES5 里的函数表达式。")]),t._v(" "),a("p",[t._v("参数：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("allowInsertArrow")]),t._v(": TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("specCompliant")]),t._v(": TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("noNewArrows")]),t._v(": TODO")])])])])])]),t._v(" "),a("li",[a("p",[t._v("删除节点: removal")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("path.remove")])])])]),t._v(" "),a("li",[a("p",[t._v("修改节点: modification")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("path.insertBefore")])]),t._v(" "),a("li",[a("code",[t._v("path.insertAfter")])]),t._v(" "),a("li",[a("code",[t._v("path.updateSiblingKeys")])]),t._v(" "),a("li",[a("code",[t._v("path.unshiftContainer")])]),t._v(" "),a("li",[a("code",[t._v("path.pushContainer")])]),t._v(" "),a("li",[a("code",[t._v("path.hoist")])])])]),t._v(" "),a("li",[a("p",[t._v("注释相关: comments")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("path.shareCommentsWithSiblings")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.addComment")])]),t._v(" "),a("p",[t._v("添加一条注释。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("path.addComments")])]),t._v(" "),a("p",[t._v("添加多条注释。")])])])]),t._v(" "),a("li",[a("p",[t._v("校验节点: validate")]),t._v(" "),a("p",[t._v("文件 "),a("code",[t._v("packages/babel-traverse/src/path/index.ts")]),t._v(" 中，为 "),a("code",[t._v("NodePath.prototype")]),t._v(" 上添加了校验方法，这些方法全部来自 babel-types。")]),t._v(" "),a("p",[t._v("使用方式为 "),a("code",[t._v("path.is{NodeName}")]),t._v("，如 "),a("code",[t._v("path.isFunctionStatement(...)")]),t._v("。")])])]),t._v(" "),a("h3",{attrs:{id:"_5-1-4-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-4-state"}},[t._v("#")]),t._v(" 5.1.4 state")]),t._v(" "),a("p",[t._v("babel-traverse 负责调用插件传入的处理方法，其本身是支持传入一个初始化的state的，开发者可以根据自己需要传入一个初始化的 state 值，"),a("code",[t._v("traverse")]),t._v(" 方法的定义如下：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("traverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("parent")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("opts")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" TraverseOptions "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  scope"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  state"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  parentPath"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodePath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("开发者实际使用的时候，一般不需要独立使用 babel-traverse，而是根据 babel-core 间接调用 babel-traverse，babel-core 在内部为 state 对象提供了一些属性、方法，便于开发者使用，如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/5757051/155270726-aba9e153-7dba-4e0c-8241-b495bab73168.jpg",alt:"Babel插件编写/state"}})]),t._v(" "),a("p",[t._v("scope - index - crawl")]),t._v(" "),a("p",[t._v("在开发者没有设置 state 的情况下，内置遍历过程提供的 state 对象是 "),a("code",[t._v("babel-core/src/transformation/plugin-pass.ts")]),t._v(" 定义的 "),a("code",[t._v("PluginPass")]),t._v(" 实例。")]),t._v(" "),a("p",[t._v("state 实例本身内容并不复杂，其有如下属性或方法：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("state.key")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("state.cwd")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("state.filename")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("state.file")])]),t._v(" "),a("p",[a("code",[t._v("state.file")]),t._v(" 对象是 "),a("code",[t._v("File")]),t._v(" 类的实例。"),a("code",[t._v("File")]),t._v(" 类定义自文件 "),a("code",[t._v("babel/packages/babel-core/src/transformation/file/file.ts")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("state.file.availableHelper")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("state.file.addHelper")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("state.file.addImport")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("state.file.buildCodeFrameError")])])])]),t._v(" "),a("h2",{attrs:{id:"_5-2-节点操作-babel-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-节点操作-babel-types"}},[t._v("#")]),t._v(" 5.2 节点操作: babel-types")]),t._v(" "),a("p",[t._v("Babel 使用 babel-types 进行节点操作。babel-types 对外暴露出的 API，总体来说，可以分为对节点的“读操作”和“写操作”。")]),t._v(" "),a("ul",[a("li",[t._v("读节点\n"),a("ul",[a("li",[t._v("节点校验")]),t._v(" "),a("li",[t._v("查找节点")]),t._v(" "),a("li",[t._v("节点遍历")])])]),t._v(" "),a("li",[t._v("写节点\n"),a("ul",[a("li",[t._v("创建节点")]),t._v(" "),a("li",[t._v("修改节点")]),t._v(" "),a("li",[t._v("转换节点")]),t._v(" "),a("li",[t._v("操作注释")]),t._v(" "),a("li",[t._v("复制节点")])])])]),t._v(" "),a("p",[t._v("babel-types 也提供了对 TypeScript 和 Flow 的 API 支持")]),t._v(" "),a("p",[t._v("下文中，用 "),a("code",[t._v("t")]),t._v(" 代表 "),a("code",[t._v("babel-types")]),t._v("对外暴露的对象。")]),t._v(" "),a("h3",{attrs:{id:"_5-2-1-读节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-读节点"}},[t._v("#")]),t._v(" 5.2.1 读节点")]),t._v(" "),a("p",[t._v("读操作api分布：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/5757051/155270810-4cf8ec4f-58d7-4f44-9d60-870712009776.jpg",alt:"Babel插件编写/babel-types读操作"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("查找节点")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("t.getBindingIdentifiers")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("参数与返回值类型")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBindingIdentifiers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" duplicates"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outerOnly"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Record"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Identifier"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Record"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Identifier"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("TODO")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.getOuterBindingIdentifiers")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("参数与返回值类型")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOuterBindingIdentifiers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" duplicates"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Record"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Identifier"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Record"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Identifier"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("TODO")])])])])])]),t._v(" "),a("li",[a("p",[t._v("校验节点")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("t.is")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("参数与返回值类型")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 较源码做了简化")]),t._v("\nt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" opts"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("功能")]),t._v(" "),a("p",[t._v("判断给定的节点 "),a("code",[t._v("node")]),t._v(" 的类型是否是 "),a("code",[t._v("type")]),t._v(" 的值。")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.is{NodeName}")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.isBinding(node: t.Node, parent: t.Node, grandparent?: t.Node): boolean")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.isBlockScoped(node: t.Node): boolean")])]),t._v(" "),a("p",[t._v("判断 "),a("code",[t._v("node")]),t._v(" 节点是否应用于块级作用域。满足条件的节点包括：")]),t._v(" "),a("p",[t._v("函数声明（"),a("code",[t._v("FunctionDeclaration")]),t._v("）、类声明（"),a("code",[t._v("ClassDeclaration")]),t._v("）、"),a("code",[t._v("let/const")]),t._v(" 声明的变量、TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.isImmutable(node: t.Node): boolean")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.isLet(node: t.Node): boolean")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isLet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isVariableDeclaration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("kind "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"var"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BLOCK_SCOPED_SYMBOL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.isNode(node: any): node is t.Node")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" node is t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Node "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VISITOR_KEYS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("是否是 "),a("code",[t._v("node")]),t._v(" 节点的条件：节点存在且是合法的节点类型。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.isNodesEquivalentisNodesEquivalent(a, b): boolean")])]),t._v(" "),a("p",[t._v("判断两个节点是否相等。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.isPlaceholderType(placeholderType: string, targetType: string): boolean")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.isReferenced(node: t.Node, parent: t.Node, grandparent?: t.Node): boolean")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.isScope(node: t.Node, parent: t.Node): boolean")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.isSpecifierDefault(specifier: t.ModuleSpecifier): boolean")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.isType(nodeType: string | null | undefined, targetType: string): boolean")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.isValidES3Identifier(name: string): boolean")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.isValidIdentifier(name: string, reserved: boolean = true): boolean")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.isVar(node: t.Node): boolean")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.matchesPattern(member: t.Node | null | undefined, match: string | string[], allowPartial?: boolean): boolean")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.validate(node: t.Node | undefined | null, key: string, val: any): void")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.buildMatchMemberExpression(match: string, allowPartial?: boolean)")])]),t._v(" "),a("p",[t._v("TODO")])])])]),t._v(" "),a("li",[a("p",[t._v("遍历节点")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("t.traverse<T>(node: t.Node, handlers: TraversalHandler<T> | TraversalHandlers<T>, state?: T): void")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("t.traverseFast(node: t.Node | null | undefined, enter: (node: t.Node, opts?: any) => void, opts?: any): void")])]),t._v(" "),a("p",[t._v("TODO")])])])])]),t._v(" "),a("h3",{attrs:{id:"_5-2-2-写节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-写节点"}},[t._v("#")]),t._v(" 5.2.2 写节点")]),t._v(" "),a("p",[t._v("写操作api分布：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/5757051/155270860-0b0b6d0c-f271-4c68-9777-6b07d39c684f.jpg",alt:"Babel插件编写/babel-types写操作"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建节点")]),t._v(" "),a("p",[a("code",[t._v("t.{节点名称}")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("api格式")]),t._v(" "),a("p",[t._v("babel-types 创建节点的 API 以 "),a("code",[t._v("t.{节点名称}")]),t._v(" 格式命名，其中节点名称既支持大写开头，也支持小写开头。")]),t._v(" "),a("p",[t._v("如创建 "),a("code",[t._v("Variance")]),t._v(" 的话，可以是："),a("code",[t._v("t.Variance")]),t._v(" 或 "),a("code",[t._v("t.variance")]),t._v("。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/5757051/155271011-c2e9ae41-b7dd-4444-905e-0e730e8e580e.png",alt:"Babel插件编写/babel-types创建节点"}})])]),t._v(" "),a("li",[a("p",[t._v("创建节点的参数")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建节点的参数由节点定义决定。")]),t._v(" "),a("p",[t._v("例如，创建一个 "),a("code",[t._v("for")]),t._v(" 循环语句（"),a("code",[t._v("ForStatement")]),t._v("）：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("babel-types 中的 API 是 "),a("code",[t._v("t.forStatement(...)")])]),t._v(" "),a("p",[t._v("那么，使用者如何知道 "),a("code",[t._v("t.forStatement")]),t._v(" 方法所需的参数呢？")]),t._v(" "),a("p",[t._v("babel-types 创建 API 的参数可参考 "),a("code",[t._v("babel-types/src/definitions/")]),t._v(" 目录下各文件对节点的定义的 "),a("code",[t._v("builder")]),t._v(" 和 "),a("code",[t._v("fields")]),t._v(" 字段。")]),t._v(" "),a("p",[a("code",[t._v("ForStatement")]),t._v(" 节点的定义在 "),a("code",[t._v("babel-types/src/definitions/core.ts")]),t._v(" 文件，定义内容：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ForStatement"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("visitor")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"init"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"update"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("aliases")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Scopable"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Statement"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"For"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BlockParent"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Loop"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("fields")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("init")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("validate")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertNodeType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VariableDeclaration"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Expression"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("optional")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("validate")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertNodeType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Expression"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("optional")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("validate")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertNodeType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Expression"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("optional")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("body")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("validate")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertNodeType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Statement"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("p",[a("code",[t._v("builder")]),t._v(" 字段提供参数名称及顺序，"),a("code",[t._v("field")]),t._v(" 字段提供每个字段的格式校验规则。")])]),t._v(" "),a("li",[a("p",[t._v("案例")]),t._v(" "),a("p",[t._v("从 "),a("code",[t._v("ForStatement")]),t._v(" 节点的定义可以看到，"),a("code",[t._v("t.ForStatement")]),t._v(" 方法的参数如下：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("init")]),t._v(": 初始化节点")]),t._v(" "),a("p",[t._v("就是例子中的 "),a("code",[t._v("let i = 0")]),t._v("。")]),t._v(" "),a("p",[t._v("可以是变量声明（"),a("code",[t._v("VariableDeclaration")]),t._v("）、表达式（"),a("code",[t._v("Expression")]),t._v("）。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("test")]),t._v(": 条件语句节点")]),t._v(" "),a("p",[t._v("就是例子中的 "),a("code",[t._v("i < 3")]),t._v("。")]),t._v(" "),a("p",[t._v("需要是表达式（"),a("code",[t._v("Expression")]),t._v("）。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("update")]),t._v(": 更新语句节点")]),t._v(" "),a("p",[t._v("就是例子中的 "),a("code",[t._v("i++")]),t._v("。")]),t._v(" "),a("p",[t._v("需要是表达式（"),a("code",[t._v("Expression")]),t._v("）。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("body")]),t._v(": 循环体")]),t._v(" "),a("p",[t._v("就是例子中的循环体部分。")])])]),t._v(" "),a("p",[t._v("综上，目标 for 循环语句：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("创建该节点的方法为：")]),t._v(" "),a("p",[t._v("TODO")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" forStatement "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forStatement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])])])]),t._v(" "),a("li",[a("p",[t._v("部分 AST 节点没有对应的创建节点 API")]),t._v(" "),a("p",[t._v("babel-types 中，除了个别节点，其余节点均有对应的创建节点 API。")]),t._v(" "),a("p",[t._v("比如 "),a("code",[t._v("Function")]),t._v(" 节点，"),a("code",[t._v("babel-types")]),t._v(" 没有提供 "),a("code",[t._v("function")]),t._v(" API 以创建 "),a("code",[t._v("Function")]),t._v(" 节点，一方面是因为 "),a("code",[t._v("function")]),t._v(" 本身就是 ECMAScript 的关键字，另一方面，函数要么以函数声明（"),a("code",[t._v("FunctionDeclaration")]),t._v("）出现，要么以函数表达式（"),a("code",[t._v("FunctionExpression")]),t._v("）出现，没有必要出现一个 "),a("code",[t._v("Function")]),t._v("。")]),t._v(" "),a("p",[t._v("笔者整理了一些没有没有对应的创建 API 的节点，如下：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Function")])]),t._v(" "),a("li",[a("code",[t._v("Statement")])]),t._v(" "),a("li",[a("code",[t._v("Declaration")])]),t._v(" "),a("li",[a("code",[t._v("Expression")])]),t._v(" "),a("li",[a("code",[t._v("ObjectMember")])]),t._v(" "),a("li",[a("code",[t._v("UnaryOperator")])]),t._v(" "),a("li",[a("code",[t._v("UpdateOperator")])]),t._v(" "),a("li",[a("code",[t._v("BinaryOperator")])]),t._v(" "),a("li",[a("code",[t._v("LogicalOperator")])]),t._v(" "),a("li",[a("code",[t._v("Pattern")])]),t._v(" "),a("li",[a("code",[t._v("Class")])]),t._v(" "),a("li",[a("code",[t._v("ClassPrivateMethod")])]),t._v(" "),a("li",[a("code",[t._v("StaticBlock")])]),t._v(" "),a("li",[a("code",[t._v("ModuleDeclaration")])]),t._v(" "),a("li",[a("code",[t._v("ModuleSpecifier")])]),t._v(" "),a("li",[a("code",[t._v("ImportAttribute")])])])])])]),t._v(" "),a("li",[a("p",[t._v("修改节点")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("t.appendToMemberExpression")])]),t._v(" "),a("li",[a("code",[t._v("t.inherits")])]),t._v(" "),a("li",[a("code",[t._v("t.prependToMemberExpression")])]),t._v(" "),a("li",[a("code",[t._v("t.removeProperties")])]),t._v(" "),a("li",[a("code",[t._v("t.removePropertiesDeep")])]),t._v(" "),a("li",[a("code",[t._v("t.removeTypeDuplicates")])])])]),t._v(" "),a("li",[a("p",[t._v("转换节点")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("t.ensureBlock")])]),t._v(" "),a("li",[a("code",[t._v("t.toBindingIdentifierName")])]),t._v(" "),a("li",[a("code",[t._v("t.toBlock")])]),t._v(" "),a("li",[a("code",[t._v("t.toComputedKey")])]),t._v(" "),a("li",[a("code",[t._v("t.toExpression")])]),t._v(" "),a("li",[a("code",[t._v("t.toIdentifier")])]),t._v(" "),a("li",[a("code",[t._v("t.toKeyAlias")])]),t._v(" "),a("li",[a("code",[t._v("t.toSequenceExpression")])]),t._v(" "),a("li",[a("code",[t._v("t.toStatement")])]),t._v(" "),a("li",[a("code",[t._v("t.valueToNode")])])])]),t._v(" "),a("li",[a("p",[t._v("操作注释")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("t.addComment")])]),t._v(" "),a("li",[a("code",[t._v("t.addComments")])]),t._v(" "),a("li",[a("code",[t._v("t.inheritInnerComments")])]),t._v(" "),a("li",[a("code",[t._v("t.inheritLeadingComments")])]),t._v(" "),a("li",[a("code",[t._v("t.inheritsComments")])]),t._v(" "),a("li",[a("code",[t._v("t.inheritTrailingComments")])]),t._v(" "),a("li",[a("code",[t._v("t.removeComments")])])])]),t._v(" "),a("li",[a("p",[t._v("复制节点")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("t.cloneNode")])]),t._v(" "),a("li",[a("code",[t._v("t.clone")])]),t._v(" "),a("li",[a("code",[t._v("t.cloneDeep")])]),t._v(" "),a("li",[a("code",[t._v("t.cloneDeepWithoutLoc")])]),t._v(" "),a("li",[a("code",[t._v("t.cloneWithoutLoc")])])])])]),t._v(" "),a("h2",{attrs:{id:"_5-3-插件编写实战"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-插件编写实战"}},[t._v("#")]),t._v(" 5.3 插件编写实战")])])}),[],!1,null,null,null);s.default=n.exports}}]);