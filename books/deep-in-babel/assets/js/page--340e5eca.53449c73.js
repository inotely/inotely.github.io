(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{490:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Babel 的核心之一就是其转译模块，包括 "),a("code",[t._v("babel-core")]),t._v("、"),a("code",[t._v("babel-parser")]),t._v(' 等。Babel 的转译过程分为"解析/转换/生成"三步。')]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("转译环节")]),t._v(" "),a("th",[t._v("操作")]),t._v(" "),a("th",[t._v("功能")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("解析")]),t._v(" "),a("td",[t._v("词法分析")]),t._v(" "),a("td",[t._v("生成标记数组（tokens）")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("语法分析")]),t._v(" "),a("td",[t._v("根据 tokens 数组生成源码的树形结构，即抽象语法树")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("语义分析")]),t._v(" "),a("td",[t._v("向抽象语法树补充源码的语义信息，如作用域、重复定义检查等")])]),t._v(" "),a("tr",[a("td",[t._v("转换")]),t._v(" "),a("td",[t._v("借助 Babel 插件对抽象语法树进行转换")]),t._v(" "),a("td",[t._v("生成目标抽象语法树")])]),t._v(" "),a("tr",[a("td",[t._v("生成")]),t._v(" "),a("td",[t._v("根据抽象语法树对象，重新生成代码字符串")]),t._v(" "),a("td",[t._v("声明目标代码字符串")])])])]),t._v(" "),a("p",[t._v('本章主要分为两部分讲解 Babel 相关的转译原理，分别是"理论知识"和"Babel的转译过程"。阅读顺序建议先了解转译原理的理论知识。')]),t._v(" "),a("blockquote",[a("p",[t._v("《编译原理》本身是大学的计算机相关课程之一，Babel 用到的理论也是基于其中的部分原理，可惜笔者学过的知识早就还给老师了。")])]),t._v(" "),a("p",[t._v("为了帮助开发者了解 Babel 的基本原理，Babel 官网推荐了一个项目: "),a("code",[t._v("the-super-tiny-compiler")]),t._v("，除去注释代码仅 200 行，可读性很好，建议阅读，作为了解 Babel 原理的前菜。")]),t._v(" "),a("h2",{attrs:{id:"the-super-tiny-compiler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-super-tiny-compiler"}},[t._v("#")]),t._v(" "),a("code",[t._v("the-super-tiny-compiler")])]),t._v(" "),a("h3",{attrs:{id:"解析目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解析目标"}},[t._v("#")]),t._v(" 解析目标")]),t._v(" "),a("p",[a("code",[t._v("the-super-tiny-compiler")]),t._v(" 项目解析的目标是将 lisp 风格的函数调用转换为 C 风格。")]),t._v(" "),a("p",[t._v("假设有两个函数，"),a("code",[t._v("add")]),t._v(" 和 "),a("code",[t._v("subtract")]),t._v("，那么它们的写法将会是下面这样:")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("                LISP                      C\n\n2 + 2          (add 2 2)                 add(2, 2)\n4 - 2          (subtract 4 2)            subtract(4, 2)\n2 + (4 - 2)    (add 2 (subtract 4 2))    add(2, subtract(4, 2))\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"解析过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解析过程"}},[t._v("#")]),t._v(" 解析过程")]),t._v(" "),a("h4",{attrs:{id:"词法单元"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#词法单元"}},[t._v("#")]),t._v(" 词法单元")]),t._v(" "),a("p",[a("code",[t._v("the-super-tiny-compiler")]),t._v(" 定义了如下词法单元:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语素")]),t._v(" "),a("th",[t._v("标记类型")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("(")])]),t._v(" "),a("td",[a("code",[t._v("paren")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v(")")])]),t._v(" "),a("td",[a("code",[t._v("paren")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("/[0-9]/")])]),t._v(" "),a("td",[a("code",[t._v("number")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("/[a-z]/i")])]),t._v(" "),a("td",[a("code",[t._v("name")])])])])]),t._v(" "),a("p",[t._v("其中，简略起见，空格没有作为输出的 "),a("code",[t._v("tokens")]),t._v(" 中的一员；"),a("code",[t._v("name")]),t._v(" 也仅限于字母组成，没有覆盖 "),a("code",[t._v("add3")]),t._v(" 这种含字母和数字的情况。")]),t._v(" "),a("h4",{attrs:{id:"代码逻辑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码逻辑"}},[t._v("#")]),t._v(" 代码逻辑")]),t._v(" "),a("p",[a("code",[t._v("the-super-tiny-compiler")]),t._v(" 定义了方法 "),a("code",[t._v("tokenizer(input: string): Array<{ type: String; value: String }>")]),t._v(" 作为词法分析器。")]),t._v(" "),a("p",[t._v("这个方法不到 100 行，整体运行流程如下:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tokenizer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `current` 字符串扫描过程中指向当前位置的指针")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" current "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `tokens` 数组，也是要返回的对象，数组项为各个 token 单元")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tokens "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 首先创建一个 `while` 循环， `current` 变量会在循环中自增")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我们在这里储存了 `input` 中 `current` 位置的字符")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" char "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// token 类型: `paren`，左圆括号")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检查一下是不是一个左圆括号")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("char "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'('")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果是，那么我们 push 一个 type 为 `paren`，value 为左圆括号的对象。")]),t._v("\n            tokens"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'paren'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'('")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发现了一个 token，自增 `current`")]),t._v("\n            current"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结束本次循环，进入下一次循环")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// token 类型: `paren`，右圆括号")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 然后我们检查是不是一个右圆括号。这里做的时候和之前一样: 检查右圆括号、加入新的 token、")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自增 `current`，然后进入下一次循环。")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("char "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            tokens"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'paren'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发现了一个 token，自增 `current`")]),t._v("\n            current"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结束本次循环，进入下一次循环")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 过滤空格，空格对 token 而言是无意义的")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WHITESPACE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\s")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WHITESPACE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("char"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自增 `current`")]),t._v("\n            current"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结束本次循环，进入下一次循环")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// token 类型: `number`，数字")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下一个 token 的类型是数字。它和之前的一个字符的 token 不同，因为数字可以由多个数字字符组成，")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 但是只能把它们识别为一个 token。")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   (add 123 456)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        ^^^ ^^^")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        这里只有两个 token")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当遇到一个数字字符时，会进入判断逻辑")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NUMBERS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[0-9]")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NUMBERS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("char"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个 `value` 字符串，记录数字字符串")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进入子循环，直到遇到的字符不是数字字符为止，")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将循环途中遇到的每个数字拼接到 `value` 字符串中，并且自增 `current`")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NUMBERS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("char"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" char"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                char "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 然后将类型为 `number` 的 token 放入 `tokens` 数组中")]),t._v("\n            tokens"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'number'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" value\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结束本次循环，进入下一次循环")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// token 类型: `name`，函数名")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后一种类型的 token 是 `name`。它由一系列的字母组成，在 lisp 语法中代表函数。")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   (add 2 4)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    ^^^")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    Name token")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LETTERS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[a-z]")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("i")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LETTERS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("char"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进入子循环，直到遇到的字符不是字母为止。注意，这里没有考虑含有非字母的函数名写法。")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LETTERS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("char"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" char"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                char "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加一个类型为 `name` 的 token")]),t._v("\n            tokens"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" value\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结束本次循环，进入下一次循环")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后如果没有匹配上任何类型的 token，则抛出一个错误。")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'I dont know what this character is: '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" char"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 词法分析器的最后返回 tokens 数组。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" tokens"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br"),a("span",{staticClass:"line-number"},[t._v("55")]),a("br"),a("span",{staticClass:"line-number"},[t._v("56")]),a("br"),a("span",{staticClass:"line-number"},[t._v("57")]),a("br"),a("span",{staticClass:"line-number"},[t._v("58")]),a("br"),a("span",{staticClass:"line-number"},[t._v("59")]),a("br"),a("span",{staticClass:"line-number"},[t._v("60")]),a("br"),a("span",{staticClass:"line-number"},[t._v("61")]),a("br"),a("span",{staticClass:"line-number"},[t._v("62")]),a("br"),a("span",{staticClass:"line-number"},[t._v("63")]),a("br"),a("span",{staticClass:"line-number"},[t._v("64")]),a("br"),a("span",{staticClass:"line-number"},[t._v("65")]),a("br"),a("span",{staticClass:"line-number"},[t._v("66")]),a("br"),a("span",{staticClass:"line-number"},[t._v("67")]),a("br"),a("span",{staticClass:"line-number"},[t._v("68")]),a("br"),a("span",{staticClass:"line-number"},[t._v("69")]),a("br"),a("span",{staticClass:"line-number"},[t._v("70")]),a("br"),a("span",{staticClass:"line-number"},[t._v("71")]),a("br"),a("span",{staticClass:"line-number"},[t._v("72")]),a("br"),a("span",{staticClass:"line-number"},[t._v("73")]),a("br"),a("span",{staticClass:"line-number"},[t._v("74")]),a("br"),a("span",{staticClass:"line-number"},[t._v("75")]),a("br"),a("span",{staticClass:"line-number"},[t._v("76")]),a("br"),a("span",{staticClass:"line-number"},[t._v("77")]),a("br"),a("span",{staticClass:"line-number"},[t._v("78")]),a("br"),a("span",{staticClass:"line-number"},[t._v("79")]),a("br"),a("span",{staticClass:"line-number"},[t._v("80")]),a("br"),a("span",{staticClass:"line-number"},[t._v("81")]),a("br"),a("span",{staticClass:"line-number"},[t._v("82")]),a("br"),a("span",{staticClass:"line-number"},[t._v("83")]),a("br"),a("span",{staticClass:"line-number"},[t._v("84")]),a("br"),a("span",{staticClass:"line-number"},[t._v("85")]),a("br"),a("span",{staticClass:"line-number"},[t._v("86")]),a("br"),a("span",{staticClass:"line-number"},[t._v("87")]),a("br"),a("span",{staticClass:"line-number"},[t._v("88")]),a("br"),a("span",{staticClass:"line-number"},[t._v("89")]),a("br"),a("span",{staticClass:"line-number"},[t._v("90")]),a("br"),a("span",{staticClass:"line-number"},[t._v("91")]),a("br"),a("span",{staticClass:"line-number"},[t._v("92")]),a("br"),a("span",{staticClass:"line-number"},[t._v("93")]),a("br"),a("span",{staticClass:"line-number"},[t._v("94")]),a("br"),a("span",{staticClass:"line-number"},[t._v("95")]),a("br"),a("span",{staticClass:"line-number"},[t._v("96")]),a("br"),a("span",{staticClass:"line-number"},[t._v("97")]),a("br"),a("span",{staticClass:"line-number"},[t._v("98")]),a("br"),a("span",{staticClass:"line-number"},[t._v("99")]),a("br"),a("span",{staticClass:"line-number"},[t._v("100")]),a("br"),a("span",{staticClass:"line-number"},[t._v("101")]),a("br"),a("span",{staticClass:"line-number"},[t._v("102")]),a("br"),a("span",{staticClass:"line-number"},[t._v("103")]),a("br"),a("span",{staticClass:"line-number"},[t._v("104")]),a("br"),a("span",{staticClass:"line-number"},[t._v("105")]),a("br"),a("span",{staticClass:"line-number"},[t._v("106")]),a("br"),a("span",{staticClass:"line-number"},[t._v("107")]),a("br"),a("span",{staticClass:"line-number"},[t._v("108")]),a("br"),a("span",{staticClass:"line-number"},[t._v("109")]),a("br"),a("span",{staticClass:"line-number"},[t._v("110")]),a("br"),a("span",{staticClass:"line-number"},[t._v("111")]),a("br"),a("span",{staticClass:"line-number"},[t._v("112")]),a("br"),a("span",{staticClass:"line-number"},[t._v("113")]),a("br"),a("span",{staticClass:"line-number"},[t._v("114")]),a("br"),a("span",{staticClass:"line-number"},[t._v("115")]),a("br"),a("span",{staticClass:"line-number"},[t._v("116")]),a("br"),a("span",{staticClass:"line-number"},[t._v("117")]),a("br"),a("span",{staticClass:"line-number"},[t._v("118")]),a("br"),a("span",{staticClass:"line-number"},[t._v("119")]),a("br"),a("span",{staticClass:"line-number"},[t._v("120")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://cdn.mogonote.com/u/db66ce7d4df3fc7ee394c51573980745/1639580998478.png",alt:"image.png"}})]),t._v(" "),a("h2",{attrs:{id:"词法分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#词法分析"}},[t._v("#")]),t._v(" 词法分析")]),t._v(" "),a("p",[a("code",[t._v("the-super-tiny-compiler")]),t._v(' 项目里，用到了"词法分析"。')]),t._v(" "),a("p",[t._v("词法分析（lexical analysis）是将字符序列转换为标记（token）的过程。进行词法分析的程序或函数叫做词法分析器（lexical analyzer，简称 lexer），也叫扫描器（scanner）。")]),t._v(" "),a("p",[t._v("以英文句子 "),a("code",[t._v('"today is comfortable."')]),t._v(' 为例，词法分析用于这个句子中是否有不合格的"单词"，以及将"单词"进行分类，这个"单词"也就是标记（token）。')]),t._v(" "),a("h3",{attrs:{id:"相关概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关概念"}},[t._v("#")]),t._v(" 相关概念")]),t._v(" "),a("h4",{attrs:{id:"标记-token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标记-token"}},[t._v("#")]),t._v(" 标记（token）")]),t._v(" "),a("p",[t._v("标记（"),a("code",[t._v("token")]),t._v("）是构成源码的最小单位。从输入的字符串流中生成标记的过程叫标记化（"),a("code",[t._v("tokenization")]),t._v("），在这个过程中，词法分析器也会对标记进行分类。")]),t._v(" "),a("p",[t._v('标记（token）通常是一个对象，包括了"种别码"和"属性值"（'),a("code",[t._v("token<种别码, 属性值>")]),t._v("）。")]),t._v(" "),a("p",[t._v('以 the-super-tiny-compiler 输出的 token 为例，"种别码"也就是 "number/paren/name" 等类型的描述，"属性值"（也就是 "123" 等值）。')]),t._v(" "),a("p",[t._v("词法分析器通常不会关注标记之间的关系（这由语法分析器关注），比如，词法分析可以将括号识别为标记（"),a("code",[t._v("token")]),t._v("），但无法保证括号间是否匹配。")]),t._v(" "),a("p",[t._v("在词法分析过程中，会将代码字符串解析为一个个扁平的不可分割的词法单元，比如:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("这段代码被词法分析后，会分割为如下词法单元。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性值")]),t._v(" "),a("th",[t._v("种别码")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("const")])]),t._v(" "),a("td",[a("code",[t._v("const")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("a")])]),t._v(" "),a("td",[a("code",[t._v("name")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("=")])]),t._v(" "),a("td",[a("code",[t._v("eq")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("1")])]),t._v(" "),a("td",[a("code",[t._v("num")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v(";")])]),t._v(" "),a("td",[a("code",[t._v("semi")])])])])]),t._v(" "),a("blockquote",[a("p",[t._v("这里采用的是 Babel 内部定义的种别码，不是普遍标准。")])]),t._v(" "),a("p",[t._v("语法分析器读取输入字符流、从中识别出语素、最后生成不同类型的标记。其间一旦发现无效标记，便会报错。")]),t._v(" "),a("p",[t._v("https://tc39.es/ecma262/#prod-ReservedWord")]),t._v(" "),a("h4",{attrs:{id:"标识符-identifier"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标识符-identifier"}},[t._v("#")]),t._v(" 标识符（Identifier）")]),t._v(" "),a("p",[t._v("标识符指的是变量、函数、属性的名字、函数的参数。")]),t._v(" "),a("p",[t._v("标识符的书写规则: （规则是哪里来的？）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("第一个字符必须是字母、下划线("),a("code",[t._v("_")]),t._v(")或者是美元符号("),a("code",[t._v("$")]),t._v(")，不能为数字")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("name  √\n_say  √\n$hi   √\n3name ×\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("第一个字符之后，可以是字母、下划线("),a("code",[t._v("_")]),t._v(")或者是美元符号("),a("code",[t._v("$")]),t._v(")、数字")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("name1  √\nn_ame  √\nn$     √\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("不能将关键字、保留字用作标识符")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("name √\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" ×\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("可以使用 Unicode 转义序列。例如，字符 "),a("code",[t._v("a")]),t._v(' 可以使用"'),a("code",[t._v("\\u0061")]),t._v('"表示')]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\\u0061 = 1 √\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])]),t._v(" "),a("h4",{attrs:{id:"关键字和保留字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键字和保留字"}},[t._v("#")]),t._v(" 关键字和保留字")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("关键字")]),t._v(" "),a("p",[t._v("关键字是 ECMA-262 规定的 JavaScript 语言内部使用的一组名称（或称为命令）。这些名称具有特定的用途。")]),t._v(" "),a("p",[t._v("关键字首先是标识名（"),a("code",[t._v("IdentifierName")]),t._v("），同时具有语义（也就是在 JavaScript 中有特殊用途），比如 "),a("code",[t._v("if/while/async/await")]),t._v(" 等。")]),t._v(" "),a("p",[t._v("关键字不能作为标识符（"),a("code",[t._v("Identifier")]),t._v("），比如变量、标签和函数名，以下这些写法是错误的:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ×\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ×\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" ×\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("保留字")]),t._v(" "),a("p",[t._v("保留字是 ECMA-262 规定的 JavaScript 语言内部预备使用的一组名称（或称为命令）。这些名称目前还没有具体的用途，是为 JavaScript 升级版本预留备用的，建议用户不要使用。")]),t._v(" "),a("p",[t._v('保留字从字面意思来看，就是"未来的关键字"，本身还不具有特殊含义，但将来是可能成为关键字的。')]),t._v(" "),a("p",[t._v("保留字不能作为标识符（"),a("code",[t._v("Identifier")]),t._v("）。")]),t._v(" "),a("p",[t._v("保留字分为无条件保留字和有条件保留字。无条件保留字指的是本身严格为保留字，没有任何条件，如 "),a("code",[t._v("if/while")]),t._v("；有条件保留字指的是在特定的上下文中才被视为保留字，比如 "),a("code",[t._v("await")]),t._v(" 只是在 "),a("code",[t._v("async")]),t._v(" 函数/模块中，才被视为保留字。")])]),t._v(" "),a("li",[a("p",[t._v("关键字与保留字列举")]),t._v(" "),a("p",[t._v("部分关键字同时也是保留字，部分并不是。有些关键词只在特定的上下文语义中被识别为保留字。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("是关键字")]),t._v(" "),a("th",[t._v("是保留字")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("await")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("在 "),a("code",[t._v("async")]),t._v(" 函数/模块中，才被视为保留字")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("break")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("case")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("catch")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("class")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("const")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("continue")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("debugger")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("default")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("delete")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("do")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("else")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("enum")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("export")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("extends")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("finally")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("for")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("function")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("if")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("import")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("in")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("instanceof")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("new")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("null")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("return")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("super")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("switch")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("this")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("throw")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("true")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("try")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("typeof")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("var")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("void")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("while")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("with")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("yield")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("async")])]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("×")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("abstract")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("double")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("goto")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("native")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("static")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("boolean")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("implements")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("package")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("byte")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("private")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("synchronized")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("char")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("extends")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("int")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("protected")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("throws")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("final")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("interface")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("public")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("transient")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("float")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("long")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("short")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("volatile")])]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])])])])])]),t._v(" "),a("h3",{attrs:{id:"词法分析过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#词法分析过程"}},[t._v("#")]),t._v(" 词法分析过程")]),t._v(" "),a("p",[t._v('总的来说，词法分析分为 2 个步骤: "扫描、标记"。')]),t._v(" "),a("h4",{attrs:{id:"第-1-步-扫描识别-token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第-1-步-扫描识别-token"}},[t._v("#")]),t._v(" 第 1 步: 扫描识别 token")]),t._v(" "),a("p",[t._v("扫描是词法分析的第一阶段。词法分析器会扫描代码字符串，将其分隔为一个个 token，同时也是边扫描边识别 token 的。")]),t._v(" "),a("p",[t._v("这里涉及 2 个问题:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("代码字符串是怎样被分隔为一个个 token 的？")]),t._v(" "),a("p",[t._v("利用有限状态机。")])]),t._v(" "),a("li",[a("p",[t._v("识别 token 的依据是什么？")]),t._v(" "),a("p",[t._v("利用字符串匹配和正则表达式。")])])]),t._v(" "),a("h5",{attrs:{id:"有限状态机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有限状态机"}},[t._v("#")]),t._v(" 有限状态机")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("问题拆解")]),t._v(" "),a("p",[t._v("有限状态机（Finite State Mechine），又称有限状态自动机，是表示有限个状态以及在这些状态之间的转移和动作等行为的数学模型。")]),t._v(" "),a("p",[t._v("它有如下特征：")]),t._v(" "),a("blockquote",[a("p",[t._v("状态总数（state）是有限的。\n任一时刻，只处在一种状态之中。\n某种条件下，会从一种状态转变（transition）到另一种状态。")])]),t._v(" "),a("p",[t._v('在词法分析中，扫描源码时，遇到不同的字符，会进入不同的"状态"，这个"状态"有标识符、操作符、数字、字符串等。整个源码的扫描过程就是不同"状态"的迁移过程。')]),t._v(" "),a("p",[t._v("比如，待扫描的源码为: "),a("code",[t._v("height >= 20")]),t._v("，我们自定义的状态转译过程:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.mogonote.com/u/db66ce7d4df3fc7ee394c51573980745/1639462404880.png",alt:"image.png"}})]),t._v(" "),a("p",[t._v("其中，涉及的状态有:")]),t._v(" "),a("ul",[a("li",[t._v("标识符: 标记为 "),a("code",[t._v("name")]),t._v("。第一个字符必须是字母，后面的字符可以是字母或数字")]),t._v(" "),a("li",[t._v("比较操作符: 标记为 "),a("code",[t._v("largerthan")]),t._v("，就是 "),a("code",[t._v(">=")])]),t._v(" "),a("li",[t._v("数字字面量: 标记为 "),a("code",[t._v("num")]),t._v("，全部由数字构成")])]),t._v(" "),a("p",[t._v('对于 JavaScript 而言，很显然这些状态的定义不是很完整，比如"数字字面量"还可以包含小数点，我们自定义的状态定义里缺失了这一点，不过对于我们理解有限状态机已经足够了。')]),t._v(" "),a("p",[t._v("并且，上图并不是真正的优先状态机的描述方式，正确的描述方式是:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.mogonote.com/u/db66ce7d4df3fc7ee394c51573980745/1639462441547.png",alt:"image.png"}})])]),t._v(" "),a("li",[a("p",[t._v("状态转移过程")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("空状态")]),t._v(" "),a("p",[t._v("刚开始启动或从其他状态返回的默认空状态。")])]),t._v(" "),a("li",[a("p",[t._v("标识符状态")]),t._v(" "),a("p",[t._v('初始状态时，遇到的第一个字符是字母的话，会转移到"标识符状态"。')]),t._v(" "),a("p",[t._v('然后，继续"预扫描"后续的字符。')]),t._v(" "),a("p",[t._v('如果"预扫描"到的下一个字符是字母或数字，则存储该字符到 token 对象的 '),a("code",[t._v("value")]),t._v(' 属性，并停留在"标识符状态"；')]),t._v(" "),a("p",[t._v('如果"预扫描"到的下一个字符不是字母或数字，则回退到上一个字符（也就是"回溯"），记录当前 token 为"标识符"，并退回"空状态"。')])]),t._v(" "),a("li",[a("p",[t._v("数字字面量状态")]),t._v(" "),a("p",[t._v('空状态时，遇到的第一个字符是数字的话，会转译到"数字字面量状态"。')]),t._v(" "),a("p",[t._v('然后，继续"预扫描"后续的字符。')]),t._v(" "),a("p",[t._v('如果"预扫描"到的下一个字符是数字，则存储该字符到 token 对象的 '),a("code",[t._v("value")]),t._v(' 属性，并停留在"数字字面量状态"；')]),t._v(" "),a("p",[t._v('如果"预扫描"到的下一个字符不是数字，则回退到上一个字符（也就是"回溯"），记录当前 token 为"数字字面量状态"，并退回"空状态"。')])])])]),t._v(" "),a("li",[a("p",[t._v("回溯")]),t._v(" "),a("p",[t._v('在描述状态转译过程时，提到了"回溯"。')]),t._v(" "),a("p",[t._v("回溯法是一种暴力搜索法，采用“试错”的思想，它尝试分步的去解决一个问题。在分步解决问题的过程中，当它通过尝试发现，现有的分步答案不能得到有效的正确的解答的时候，它将取消上一步甚至是上几步的计算，再通过其它的可能的分步解答再次尝试寻找问题的答案。")])]),t._v(" "),a("li",[a("p",[t._v("总结")]),t._v(" "),a("p",[t._v("通过上述分析过程，可以看到，词法分析的过程，其实就是根据构造的有限状态自动机，通过回溯等方式，持续进行状态转移，从而解析出各个 "),a("code",[t._v("token")]),t._v("。")]),t._v(" "),a("p",[t._v("例子中只是包含了 3 个状态的有限状态自动机，要构造一个强大的词法分析器，可以根据场景扩展状态数量。")])])]),t._v(" "),a("h5",{attrs:{id:"正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),a("p",[t._v('这里的"正则表达式"就是 JavaScript 中的正则表达式，在进行状态判断时，通常用正则表达式判断状态类型，比如上文中我们自定义的状态对应的正则如下:')]),t._v(" "),a("ul",[a("li",[t._v("标识符: "),a("code",[t._v("/[a-zA-Z]([a-zA-Z_]|[0-9])*/")])]),t._v(" "),a("li",[t._v("数字字面量: "),a("code",[t._v("/\\d+/")])]),t._v(" "),a("li",[t._v("赋值操作符: "),a("code",[t._v("/=/")])])]),t._v(" "),a("p",[t._v("当然，也可以用字符串匹配来识别各类状态，词法分析器大量采用了正则表达式和字符串匹配进行状态识别。")]),t._v(" "),a("p",[t._v("Babel 的词法分析器组合使用了正则表达式/字符串匹配（重度使用了 "),a("code",[t._v("charcodes")]),t._v(" 这个 npm 包）进行状态识别，后文会详细介绍。")]),t._v(" "),a("h4",{attrs:{id:"第2步-标记-token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第2步-标记-token"}},[t._v("#")]),t._v(" 第2步: 标记 token")]),t._v(" "),a("p",[t._v("扫描器识别出可标记的字符序列后，会交由标记生成器处理，标记生成器处理的过程叫标记化（tokenization）。")]),t._v(" "),a("p",[t._v("标记化处理时，会将输入字符串分割为标记、进而将标记进行分类。这样生成的标记会被用于语法分析。")]),t._v(" "),a("p",[t._v("比如字符串: "),a("code",[t._v("The quick brown fox jumps over the lazy dog")]),t._v("。")]),t._v(" "),a("p",[t._v("计算机并不知道这是以空格分隔的九个英语单词，只知道这是普通的 43 个字符构成的字符串。可以通过一定的方法（这里使用空格作为分隔符）将语素（这里即英语单词）从输入字符串中分割出来。分割后的结果用 XML 可以表示如下:")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("sentence")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("The"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("quick"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("brown"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("fox"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("jumps"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("over"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("the"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("lazy"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("dog"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("word")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("sentence")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("尽管在某些情况下需要手工编写词法分析器，一般情况下词法分析器都用自动化工具生成。")]),t._v(" "),a("p",[t._v("TODO")]),t._v(" "),a("h3",{attrs:{id:"babel-的词法分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-的词法分析"}},[t._v("#")]),t._v(" Babel 的词法分析")]),t._v(" "),a("p",[t._v("Babel 的词法分析模块定义在 "),a("code",[t._v("Tokenizer")]),t._v(" 模块，对应的目录是 "),a("code",[t._v("babel/packages/babel-parser/src/tokenizer/")]),t._v("，并且，"),a("code",[t._v("Tokenizer")]),t._v(" 会作为后续语法分析、语义分析的一个中间模块提供服务。")]),t._v(" "),a("h4",{attrs:{id:"babel-的词法单元"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-的词法单元"}},[t._v("#")]),t._v(" Babel 的词法单元")]),t._v(" "),a("p",[t._v("Babel 的 "),a("code",[t._v("Tokenizer")]),t._v(" 模块定义了基本的词法单元，并深度依赖了第三方模块 "),a("code",[t._v("charcodes")]),t._v(" 辅助进行词法分析。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("内置词法单元")]),t._v(" "),a("p",[t._v("文件 "),a("code",[t._v("babel/packages/babel-parser/src/tokenizer/types.js")]),t._v(" 列举了 Babel 支持的所有词法单元。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语素")]),t._v(" "),a("th",[t._v("Babel代码中的助记符")]),t._v(" "),a("th",[t._v("简介")]),t._v(" "),a("th",[t._v("分类")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("num")])]),t._v(" "),a("td",[a("code",[t._v("num")])]),t._v(" "),a("td",[t._v("数字")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bigint")])]),t._v(" "),a("td",[a("code",[t._v("bigint")])]),t._v(" "),a("td",[t._v("用于表示大于 2^53 - 1 的整数")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("decimal")])]),t._v(" "),a("td",[a("code",[t._v("decimal")])]),t._v(" "),a("td",[t._v("更语义化地表示数字，如 "),a("code",[t._v("1_000_000")])]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("regexp")])]),t._v(" "),a("td",[a("code",[t._v("regexp")])]),t._v(" "),a("td",[t._v("正则")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("string")])]),t._v(" "),a("td",[a("code",[t._v("string")])]),t._v(" "),a("td",[t._v("字符串")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("name")])]),t._v(" "),a("td",[a("code",[t._v("name")])]),t._v(" "),a("td",[t._v("名称")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("eof")])]),t._v(" "),a("td",[a("code",[t._v("eof")])]),t._v(" "),a("td",[a("code",[t._v("end of file")])]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bracketL")])]),t._v(" "),a("td",[a("code",[t._v("bracketL")])]),t._v(" "),a("td",[a("code",[t._v("[")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bracketHashL")])]),t._v(" "),a("td",[a("code",[t._v("bracketHashL")])]),t._v(" "),a("td",[a("code",[t._v("#[")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bracketBarL")])]),t._v(" "),a("td",[a("code",[t._v("bracketBarL")])]),t._v(" "),a("td",[a("code",[t._v("[\\|")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bracketR")])]),t._v(" "),a("td",[a("code",[t._v("bracketR")])]),t._v(" "),a("td",[a("code",[t._v("]")]),t._v("字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bracketBarR")])]),t._v(" "),a("td",[a("code",[t._v("bracketBarR")])]),t._v(" "),a("td",[a("code",[t._v("\\|]")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bracketR")])]),t._v(" "),a("td",[a("code",[t._v("bracketR")])]),t._v(" "),a("td",[a("code",[t._v("}")]),t._v("字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("braceL")])]),t._v(" "),a("td",[a("code",[t._v("braceL")])]),t._v(" "),a("td",[a("code",[t._v("{")]),t._v("字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("braceBarL")])]),t._v(" "),a("td",[a("code",[t._v("braceBarL")])]),t._v(" "),a("td",[a("code",[t._v("{\\|")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("braceHashL")])]),t._v(" "),a("td",[a("code",[t._v("braceHashL")])]),t._v(" "),a("td",[a("code",[t._v("#{")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("braceR")])]),t._v(" "),a("td",[a("code",[t._v("braceR")])]),t._v(" "),a("td",[a("code",[t._v("}")]),t._v("字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("braceBarR")])]),t._v(" "),a("td",[a("code",[t._v("braceBarR")])]),t._v(" "),a("td",[a("code",[t._v("\\|}")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("parenL")])]),t._v(" "),a("td",[a("code",[t._v("parenL")])]),t._v(" "),a("td",[a("code",[t._v("(")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("parenR")])]),t._v(" "),a("td",[a("code",[t._v("parenR")])]),t._v(" "),a("td",[a("code",[t._v(")")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("comma")])]),t._v(" "),a("td",[a("code",[t._v("comma")])]),t._v(" "),a("td",[a("code",[t._v(",")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("semi")])]),t._v(" "),a("td",[a("code",[t._v("semi")])]),t._v(" "),a("td",[a("code",[t._v(";")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("colon")])]),t._v(" "),a("td",[a("code",[t._v("colon")])]),t._v(" "),a("td",[a("code",[t._v(":")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("doubleColon")])]),t._v(" "),a("td",[a("code",[t._v("doubleColon")])]),t._v(" "),a("td",[a("code",[t._v("::")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("dot")])]),t._v(" "),a("td",[a("code",[t._v("dot")])]),t._v(" "),a("td",[a("code",[t._v(".")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("question")])]),t._v(" "),a("td",[a("code",[t._v("question")])]),t._v(" "),a("td",[a("code",[t._v("?")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("questionDot")])]),t._v(" "),a("td",[a("code",[t._v("questionDot")])]),t._v(" "),a("td",[a("code",[t._v("?.")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("arrow")])]),t._v(" "),a("td",[a("code",[t._v("arrow")])]),t._v(" "),a("td",[a("code",[t._v("=>")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("template")])]),t._v(" "),a("td",[a("code",[t._v("template")])]),t._v(" "),a("td",[a("code",[t._v("template")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ellipsis")])]),t._v(" "),a("td",[a("code",[t._v("ellipsis")])]),t._v(" "),a("td",[a("code",[t._v("...")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("backQuote")])]),t._v(" "),a("td",[a("code",[t._v("backQuote")])]),t._v(" "),a("td",[t._v("``` 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("dollarBraceL")])]),t._v(" "),a("td",[a("code",[t._v("dollarBraceL")])]),t._v(" "),a("td",[a("code",[t._v("${")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("at")])]),t._v(" "),a("td"),t._v(" "),a("td",[a("code",[t._v("at")])]),t._v(" "),a("td",[a("code",[t._v("@")]),t._v(" 字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("hash")])]),t._v(" "),a("td",[a("code",[t._v("hash")])]),t._v(" "),a("td",[a("code",[t._v("#")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("标点符号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("interpreterDirective")])]),t._v(" "),a("td",[a("code",[t._v("interpreterDirective")])]),t._v(" "),a("td",[a("code",[t._v("#!")]),t._v(" 字符")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("eq")])]),t._v(" "),a("td",[a("code",[t._v("eq")])]),t._v(" "),a("td",[a("code",[t._v("=")]),t._v("字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("assign")])]),t._v(" "),a("td",[a("code",[t._v("assign")])]),t._v(" "),a("td",[a("code",[t._v("_=")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("slashAssign")])]),t._v(" "),a("td",[a("code",[t._v("slashAssign")])]),t._v(" "),a("td",[a("code",[t._v("_=")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("incDec")])]),t._v(" "),a("td",[a("code",[t._v("incDec")])]),t._v(" "),a("td",[a("code",[t._v("++")]),t._v(" / "),a("code",[t._v("--")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bang")])]),t._v(" "),a("td",[a("code",[t._v("bang")])]),t._v(" "),a("td",[a("code",[t._v("!")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("tilde")])]),t._v(" "),a("td",[a("code",[t._v("tilde")])]),t._v(" "),a("td",[a("code",[t._v("~")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("pipeline")])]),t._v(" "),a("td",[a("code",[t._v("pipeline")])]),t._v(" "),a("td",[a("code",[t._v("\\|>")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("nullishCoalescing")])]),t._v(" "),a("td",[a("code",[t._v("nullishCoalescing")])]),t._v(" "),a("td",[a("code",[t._v("??")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("logicalOR")])]),t._v(" "),a("td",[a("code",[t._v("logicalOR")])]),t._v(" "),a("td",[a("code",[t._v("\\|\\|")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("logicalAND")])]),t._v(" "),a("td",[a("code",[t._v("logicalAND")])]),t._v(" "),a("td",[a("code",[t._v("&&")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bitwiseOR")])]),t._v(" "),a("td",[a("code",[t._v("bitwiseOR")])]),t._v(" "),a("td",[a("code",[t._v("\\|")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bitwiseXOR")])]),t._v(" "),a("td",[a("code",[t._v("bitwiseXOR")])]),t._v(" "),a("td",[a("code",[t._v("^")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bitwiseAND")])]),t._v(" "),a("td",[a("code",[t._v("bitwiseAND")])]),t._v(" "),a("td",[a("code",[t._v("&")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("equality")])]),t._v(" "),a("td",[a("code",[t._v("equality")])]),t._v(" "),a("td",[a("code",[t._v("==")]),t._v(" / "),a("code",[t._v("!=")]),t._v(" / "),a("code",[t._v("===")]),t._v(" / "),a("code",[t._v("!==")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("relational")])]),t._v(" "),a("td",[a("code",[t._v("relational")])]),t._v(" "),a("td",[a("code",[t._v("<")]),t._v(" / "),a("code",[t._v(">")]),t._v(" / "),a("code",[t._v("<=")]),t._v(" / "),a("code",[t._v(">=")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bitShift")])]),t._v(" "),a("td",[a("code",[t._v("bitShift")])]),t._v(" "),a("td",[a("code",[t._v("<<")]),t._v(" / "),a("code",[t._v(">>")]),t._v(" / "),a("code",[t._v(">>>")]),t._v("字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("plusMin")])]),t._v(" "),a("td",[a("code",[t._v("plusMin")])]),t._v(" "),a("td",[a("code",[t._v("+")]),t._v(" / "),a("code",[t._v("-")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("modulo")])]),t._v(" "),a("td",[a("code",[t._v("modulo")])]),t._v(" "),a("td",[a("code",[t._v("%")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("star")])]),t._v(" "),a("td",[a("code",[t._v("star")])]),t._v(" "),a("td",[a("code",[t._v("*")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("slash")])]),t._v(" "),a("td",[a("code",[t._v("slash")])]),t._v(" "),a("td",[a("code",[t._v("/")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("exponent")])]),t._v(" "),a("td",[a("code",[t._v("exponent")])]),t._v(" "),a("td",[a("code",[t._v("**")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("操作符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("break")])]),t._v(" "),a("td",[a("code",[t._v("_break")])]),t._v(" "),a("td",[a("code",[t._v("break")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("case")])]),t._v(" "),a("td",[a("code",[t._v("_case")])]),t._v(" "),a("td",[a("code",[t._v("case")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("catch")])]),t._v(" "),a("td",[a("code",[t._v("_catch")])]),t._v(" "),a("td",[a("code",[t._v("catch")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("continue")])]),t._v(" "),a("td",[a("code",[t._v("_continue")])]),t._v(" "),a("td",[a("code",[t._v("continue")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("debugger")])]),t._v(" "),a("td",[a("code",[t._v("_debugger")])]),t._v(" "),a("td",[a("code",[t._v("debugger")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("default")])]),t._v(" "),a("td",[a("code",[t._v("_default")])]),t._v(" "),a("td",[a("code",[t._v("default")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("do")])]),t._v(" "),a("td",[a("code",[t._v("_do")])]),t._v(" "),a("td",[a("code",[t._v("do")]),t._v("字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("else")])]),t._v(" "),a("td",[a("code",[t._v("_else")])]),t._v(" "),a("td",[a("code",[t._v("else")]),t._v("字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("finally")])]),t._v(" "),a("td",[a("code",[t._v("_finally")])]),t._v(" "),a("td",[a("code",[t._v("finally")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("for")])]),t._v(" "),a("td",[a("code",[t._v("_for")])]),t._v(" "),a("td",[a("code",[t._v("for")]),t._v("字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("function")])]),t._v(" "),a("td",[a("code",[t._v("_function")])]),t._v(" "),a("td",[a("code",[t._v("function")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("if")])]),t._v(" "),a("td",[a("code",[t._v("_if")])]),t._v(" "),a("td",[a("code",[t._v("if")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("return")])]),t._v(" "),a("td",[a("code",[t._v("_return")])]),t._v(" "),a("td",[a("code",[t._v("return")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("switch")])]),t._v(" "),a("td",[a("code",[t._v("_switch")])]),t._v(" "),a("td",[a("code",[t._v("switch")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("throw")])]),t._v(" "),a("td",[a("code",[t._v("_throw")])]),t._v(" "),a("td",[a("code",[t._v("throw")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("try")])]),t._v(" "),a("td",[a("code",[t._v("_try")])]),t._v(" "),a("td",[a("code",[t._v("try")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("var")])]),t._v(" "),a("td",[a("code",[t._v("_var")])]),t._v(" "),a("td",[a("code",[t._v("var")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("const")])]),t._v(" "),a("td",[a("code",[t._v("_const")])]),t._v(" "),a("td",[a("code",[t._v("const")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("while")])]),t._v(" "),a("td",[a("code",[t._v("_while")])]),t._v(" "),a("td",[a("code",[t._v("while")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("with")])]),t._v(" "),a("td",[a("code",[t._v("_with")])]),t._v(" "),a("td",[a("code",[t._v("with")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("new")])]),t._v(" "),a("td",[a("code",[t._v("_new")])]),t._v(" "),a("td",[a("code",[t._v("new")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("this")])]),t._v(" "),a("td",[a("code",[t._v("_this")])]),t._v(" "),a("td",[a("code",[t._v("this")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("super")])]),t._v(" "),a("td",[a("code",[t._v("_super")])]),t._v(" "),a("td",[a("code",[t._v("super")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("class")])]),t._v(" "),a("td",[a("code",[t._v("_class")])]),t._v(" "),a("td",[a("code",[t._v("class")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("extends")])]),t._v(" "),a("td",[a("code",[t._v("_extends")])]),t._v(" "),a("td",[a("code",[t._v("extends")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("export")])]),t._v(" "),a("td",[a("code",[t._v("_export")])]),t._v(" "),a("td",[a("code",[t._v("export")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("import")])]),t._v(" "),a("td",[a("code",[t._v("_import")])]),t._v(" "),a("td",[a("code",[t._v("import")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("null")])]),t._v(" "),a("td",[a("code",[t._v("_null")])]),t._v(" "),a("td",[a("code",[t._v("null")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("true")])]),t._v(" "),a("td",[a("code",[t._v("_true")])]),t._v(" "),a("td",[a("code",[t._v("true")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("false")])]),t._v(" "),a("td",[a("code",[t._v("_false")])]),t._v(" "),a("td",[a("code",[t._v("false")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("in")])]),t._v(" "),a("td",[a("code",[t._v("_in")])]),t._v(" "),a("td",[a("code",[t._v("in")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("instanceof")])]),t._v(" "),a("td",[a("code",[t._v("_instanceof")])]),t._v(" "),a("td",[a("code",[t._v("instanceof")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("typeof")])]),t._v(" "),a("td",[a("code",[t._v("_typeof")])]),t._v(" "),a("td",[a("code",[t._v("typeof")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("void")])]),t._v(" "),a("td",[a("code",[t._v("_void")])]),t._v(" "),a("td",[a("code",[t._v("void")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("delete")])]),t._v(" "),a("td",[a("code",[t._v("_delete")])]),t._v(" "),a("td",[a("code",[t._v("delete")]),t._v(" 字符")]),t._v(" "),a("td",[t._v("关键词")])])])])]),t._v(" "),a("li",[a("p",[t._v("charcodes")]),t._v(" "),a("p",[t._v("Babel 利用社区的 npm 包 "),a("code",[t._v("charcodes")]),t._v(" 帮助进行词法单元的识别，"),a("code",[t._v("charcodes")]),t._v(" 定义的词法单元如下:")]),t._v(" "),a("p",[t._v("https://compart.com/en/unicode/U+2029")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("charcodes 命名")]),t._v(" "),a("th",[t._v("编码")]),t._v(" "),a("th",[t._v("十进制数字")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("backSpace")])]),t._v(" "),a("td",[a("code",[t._v("U+0008")])]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("tab")])]),t._v(" "),a("td",[a("code",[t._v("U+0009")])]),t._v(" "),a("td",[t._v("9")]),t._v(" "),a("td",[a("code",[t._v("\\t")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lineFeed")])]),t._v(" "),a("td",[a("code",[t._v("U+000A")])]),t._v(" "),a("td",[t._v("10")]),t._v(" "),a("td",[a("code",[t._v("\\n")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("carriageReturn")])]),t._v(" "),a("td",[a("code",[t._v("U+000D")])]),t._v(" "),a("td",[t._v("13")]),t._v(" "),a("td",[a("code",[t._v("\\r")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("shiftOut")])]),t._v(" "),a("td",[a("code",[t._v("U+000E")])]),t._v(" "),a("td",[t._v("14")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("space")])]),t._v(" "),a("td",[a("code",[t._v("U+0020")])]),t._v(" "),a("td",[t._v("32")]),t._v(" "),a("td",[t._v("空格")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("exclamationMark")])]),t._v(" "),a("td",[a("code",[t._v("U+0021")])]),t._v(" "),a("td",[t._v("33")]),t._v(" "),a("td",[a("code",[t._v("!")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("quotationMark")])]),t._v(" "),a("td",[a("code",[t._v("U+0022")])]),t._v(" "),a("td",[t._v("34")]),t._v(" "),a("td",[a("code",[t._v('"')])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("numberSign")])]),t._v(" "),a("td",[a("code",[t._v("U+0023")])]),t._v(" "),a("td",[t._v("35")]),t._v(" "),a("td",[a("code",[t._v("#")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("dollarSign")])]),t._v(" "),a("td",[a("code",[t._v("U+0024")])]),t._v(" "),a("td",[t._v("36")]),t._v(" "),a("td",[a("code",[t._v("$")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("percentSign")])]),t._v(" "),a("td",[a("code",[t._v("U+0025")])]),t._v(" "),a("td",[t._v("37")]),t._v(" "),a("td",[a("code",[t._v("%")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ampersand")])]),t._v(" "),a("td",[a("code",[t._v("U+0026")])]),t._v(" "),a("td",[t._v("38")]),t._v(" "),a("td",[a("code",[t._v("&")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("apostrophe")])]),t._v(" "),a("td",[a("code",[t._v("U+0027")])]),t._v(" "),a("td",[t._v("39")]),t._v(" "),a("td",[a("code",[t._v("'")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("leftParenthesis")])]),t._v(" "),a("td",[a("code",[t._v("U+0028")])]),t._v(" "),a("td",[t._v("40")]),t._v(" "),a("td",[a("code",[t._v("(")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("rightParenthesis")])]),t._v(" "),a("td",[a("code",[t._v("U+0029")])]),t._v(" "),a("td",[t._v("41")]),t._v(" "),a("td",[a("code",[t._v(")")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("asterisk")])]),t._v(" "),a("td",[a("code",[t._v("U+002A")])]),t._v(" "),a("td",[t._v("42")]),t._v(" "),a("td",[a("code",[t._v("*")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("plusSign")])]),t._v(" "),a("td",[a("code",[t._v("U+002B")])]),t._v(" "),a("td",[t._v("43")]),t._v(" "),a("td",[a("code",[t._v("+")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("comma")])]),t._v(" "),a("td",[a("code",[t._v("U+002C")])]),t._v(" "),a("td",[t._v("44")]),t._v(" "),a("td",[a("code",[t._v(",")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("dash")])]),t._v(" "),a("td",[a("code",[t._v("U+002D")])]),t._v(" "),a("td",[t._v("45")]),t._v(" "),a("td",[a("code",[t._v("-")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("dot")])]),t._v(" "),a("td",[a("code",[t._v("U+002E")])]),t._v(" "),a("td",[t._v("46")]),t._v(" "),a("td",[a("code",[t._v(".")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("slash")])]),t._v(" "),a("td",[a("code",[t._v("U+002F")])]),t._v(" "),a("td",[t._v("47")]),t._v(" "),a("td",[a("code",[t._v("/")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("digit0")])]),t._v(" "),a("td",[a("code",[t._v("U+0030")])]),t._v(" "),a("td",[t._v("48")]),t._v(" "),a("td",[a("code",[t._v("0")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("digit1")])]),t._v(" "),a("td",[a("code",[t._v("U+0031")])]),t._v(" "),a("td",[t._v("49")]),t._v(" "),a("td",[a("code",[t._v("1")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("digit2")])]),t._v(" "),a("td",[a("code",[t._v("U+0032")])]),t._v(" "),a("td",[t._v("50")]),t._v(" "),a("td",[a("code",[t._v("2")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("digit3")])]),t._v(" "),a("td",[a("code",[t._v("U+0033")])]),t._v(" "),a("td",[t._v("51")]),t._v(" "),a("td",[a("code",[t._v("3")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("digit4")])]),t._v(" "),a("td",[a("code",[t._v("U+0034")])]),t._v(" "),a("td",[t._v("52")]),t._v(" "),a("td",[a("code",[t._v("4")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("digit5")])]),t._v(" "),a("td",[a("code",[t._v("U+0035")])]),t._v(" "),a("td",[t._v("53")]),t._v(" "),a("td",[a("code",[t._v("5")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("digit6")])]),t._v(" "),a("td",[a("code",[t._v("U+0036")])]),t._v(" "),a("td",[t._v("54")]),t._v(" "),a("td",[a("code",[t._v("6")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("digit7")])]),t._v(" "),a("td",[a("code",[t._v("U+0037")])]),t._v(" "),a("td",[t._v("55")]),t._v(" "),a("td",[a("code",[t._v("7")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("digit8")])]),t._v(" "),a("td",[a("code",[t._v("U+0038")])]),t._v(" "),a("td",[t._v("56")]),t._v(" "),a("td",[a("code",[t._v("8")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("digit9")])]),t._v(" "),a("td",[a("code",[t._v("U+0039")])]),t._v(" "),a("td",[t._v("57")]),t._v(" "),a("td",[a("code",[t._v("9")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("colon")])]),t._v(" "),a("td",[a("code",[t._v("U+003A")])]),t._v(" "),a("td",[t._v("58")]),t._v(" "),a("td",[a("code",[t._v(":")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("semicolon")])]),t._v(" "),a("td",[a("code",[t._v("U+003B")])]),t._v(" "),a("td",[t._v("59")]),t._v(" "),a("td",[a("code",[t._v("\\|")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lessThan")])]),t._v(" "),a("td",[a("code",[t._v("U+003C")])]),t._v(" "),a("td",[t._v("60")]),t._v(" "),a("td",[a("code",[t._v("<")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("equalsTo")])]),t._v(" "),a("td",[a("code",[t._v("U+003D")])]),t._v(" "),a("td",[t._v("61")]),t._v(" "),a("td",[a("code",[t._v("=")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("greaterThan")])]),t._v(" "),a("td",[a("code",[t._v("U+003E")])]),t._v(" "),a("td",[t._v("62")]),t._v(" "),a("td",[a("code",[t._v(">")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("questionMark")])]),t._v(" "),a("td",[a("code",[t._v("U+003F")])]),t._v(" "),a("td",[t._v("63")]),t._v(" "),a("td",[a("code",[t._v("?")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("atSign")])]),t._v(" "),a("td",[a("code",[t._v("U+0040")])]),t._v(" "),a("td",[t._v("64")]),t._v(" "),a("td",[a("code",[t._v("@")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseA")])]),t._v(" "),a("td",[a("code",[t._v("U+0041")])]),t._v(" "),a("td",[t._v("65")]),t._v(" "),a("td",[a("code",[t._v("A")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseB")])]),t._v(" "),a("td",[a("code",[t._v("U+0042")])]),t._v(" "),a("td",[t._v("66")]),t._v(" "),a("td",[a("code",[t._v("B")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseC")])]),t._v(" "),a("td",[a("code",[t._v("U+0043")])]),t._v(" "),a("td",[t._v("67")]),t._v(" "),a("td",[a("code",[t._v("C")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseD")])]),t._v(" "),a("td",[a("code",[t._v("U+0044")])]),t._v(" "),a("td",[t._v("68")]),t._v(" "),a("td",[a("code",[t._v("D")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseE")])]),t._v(" "),a("td",[a("code",[t._v("U+0045")])]),t._v(" "),a("td",[t._v("69")]),t._v(" "),a("td",[a("code",[t._v("E")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseF")])]),t._v(" "),a("td",[a("code",[t._v("U+0046")])]),t._v(" "),a("td",[t._v("70")]),t._v(" "),a("td",[a("code",[t._v("F")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseG")])]),t._v(" "),a("td",[a("code",[t._v("U+0047")])]),t._v(" "),a("td",[t._v("71")]),t._v(" "),a("td",[a("code",[t._v("G")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseH")])]),t._v(" "),a("td",[a("code",[t._v("U+0048")])]),t._v(" "),a("td",[t._v("72")]),t._v(" "),a("td",[a("code",[t._v("H")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseI")])]),t._v(" "),a("td",[a("code",[t._v("U+0049")])]),t._v(" "),a("td",[t._v("73")]),t._v(" "),a("td",[a("code",[t._v("I")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseJ")])]),t._v(" "),a("td",[a("code",[t._v("U+004A")])]),t._v(" "),a("td",[t._v("74")]),t._v(" "),a("td",[a("code",[t._v("J")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseK")])]),t._v(" "),a("td",[a("code",[t._v("U+004B")])]),t._v(" "),a("td",[t._v("75")]),t._v(" "),a("td",[a("code",[t._v("K")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseL")])]),t._v(" "),a("td",[a("code",[t._v("U+004C")])]),t._v(" "),a("td",[t._v("76")]),t._v(" "),a("td",[a("code",[t._v("L")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseM")])]),t._v(" "),a("td",[a("code",[t._v("U+004D")])]),t._v(" "),a("td",[t._v("77")]),t._v(" "),a("td",[a("code",[t._v("M")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseN")])]),t._v(" "),a("td",[a("code",[t._v("U+004E")])]),t._v(" "),a("td",[t._v("78")]),t._v(" "),a("td",[a("code",[t._v("N")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseO")])]),t._v(" "),a("td",[a("code",[t._v("U+004F")])]),t._v(" "),a("td",[t._v("79")]),t._v(" "),a("td",[a("code",[t._v("O")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseP")])]),t._v(" "),a("td",[a("code",[t._v("U+0050")])]),t._v(" "),a("td",[t._v("80")]),t._v(" "),a("td",[a("code",[t._v("P")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseQ")])]),t._v(" "),a("td",[a("code",[t._v("U+0051")])]),t._v(" "),a("td",[t._v("81")]),t._v(" "),a("td",[a("code",[t._v("Q")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseR")])]),t._v(" "),a("td",[a("code",[t._v("U+0052")])]),t._v(" "),a("td",[t._v("82")]),t._v(" "),a("td",[a("code",[t._v("R")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseS")])]),t._v(" "),a("td",[a("code",[t._v("U+0053")])]),t._v(" "),a("td",[t._v("83")]),t._v(" "),a("td",[a("code",[t._v("S")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseT")])]),t._v(" "),a("td",[a("code",[t._v("U+0054")])]),t._v(" "),a("td",[t._v("84")]),t._v(" "),a("td",[a("code",[t._v("T")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseU")])]),t._v(" "),a("td",[a("code",[t._v("U+0055")])]),t._v(" "),a("td",[t._v("85")]),t._v(" "),a("td",[a("code",[t._v("U")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseV")])]),t._v(" "),a("td",[a("code",[t._v("U+0056")])]),t._v(" "),a("td",[t._v("86")]),t._v(" "),a("td",[a("code",[t._v("V")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseW")])]),t._v(" "),a("td",[a("code",[t._v("U+0057")])]),t._v(" "),a("td",[t._v("87")]),t._v(" "),a("td",[a("code",[t._v("W")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseX")])]),t._v(" "),a("td",[a("code",[t._v("U+0058")])]),t._v(" "),a("td",[t._v("88")]),t._v(" "),a("td",[a("code",[t._v("X")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseY")])]),t._v(" "),a("td",[a("code",[t._v("U+0059")])]),t._v(" "),a("td",[t._v("89")]),t._v(" "),a("td",[a("code",[t._v("Y")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("uppercaseZ")])]),t._v(" "),a("td",[a("code",[t._v("U+005A")])]),t._v(" "),a("td",[t._v("90")]),t._v(" "),a("td",[a("code",[t._v("Z")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("leftSquareBracket")])]),t._v(" "),a("td",[a("code",[t._v("U+005B")])]),t._v(" "),a("td",[t._v("91")]),t._v(" "),a("td",[a("code",[t._v("[")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("backslash")])]),t._v(" "),a("td",[a("code",[t._v("U+005C")])]),t._v(" "),a("td",[t._v("92")]),t._v(" "),a("td",[a("code",[t._v("\\")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("rightSquareBracket")])]),t._v(" "),a("td",[a("code",[t._v("U+005D")])]),t._v(" "),a("td",[t._v("93")]),t._v(" "),a("td",[a("code",[t._v("]")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("caret")])]),t._v(" "),a("td",[a("code",[t._v("U+005E")])]),t._v(" "),a("td",[t._v("94")]),t._v(" "),a("td",[a("code",[t._v("^")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("underscore")])]),t._v(" "),a("td",[a("code",[t._v("U+005F")])]),t._v(" "),a("td",[t._v("95")]),t._v(" "),a("td",[a("code",[t._v("_")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("graveAccent")])]),t._v(" "),a("td",[a("code",[t._v("U+0060")])]),t._v(" "),a("td",[t._v("96")]),t._v(" "),a("td",[t._v("`")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseA")])]),t._v(" "),a("td",[a("code",[t._v("U+0061")])]),t._v(" "),a("td",[t._v("97")]),t._v(" "),a("td",[a("code",[t._v("a")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseB")])]),t._v(" "),a("td",[a("code",[t._v("U+0062")])]),t._v(" "),a("td",[t._v("98")]),t._v(" "),a("td",[a("code",[t._v("b")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseC")])]),t._v(" "),a("td",[a("code",[t._v("U+0063")])]),t._v(" "),a("td",[t._v("99")]),t._v(" "),a("td",[a("code",[t._v("c")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseD")])]),t._v(" "),a("td",[a("code",[t._v("U+0064")])]),t._v(" "),a("td",[t._v("100")]),t._v(" "),a("td",[a("code",[t._v("d")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseE")])]),t._v(" "),a("td",[a("code",[t._v("U+0065")])]),t._v(" "),a("td",[t._v("101")]),t._v(" "),a("td",[a("code",[t._v("e")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseF")])]),t._v(" "),a("td",[a("code",[t._v("U+0066")])]),t._v(" "),a("td",[t._v("102")]),t._v(" "),a("td",[a("code",[t._v("f")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseG")])]),t._v(" "),a("td",[a("code",[t._v("U+0067")])]),t._v(" "),a("td",[t._v("103")]),t._v(" "),a("td",[a("code",[t._v("g")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseH")])]),t._v(" "),a("td",[a("code",[t._v("U+0068")])]),t._v(" "),a("td",[t._v("104")]),t._v(" "),a("td",[a("code",[t._v("h")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseI")])]),t._v(" "),a("td",[a("code",[t._v("U+0069")])]),t._v(" "),a("td",[t._v("105")]),t._v(" "),a("td",[a("code",[t._v("i")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseJ")])]),t._v(" "),a("td",[a("code",[t._v("U+006A")])]),t._v(" "),a("td",[t._v("106")]),t._v(" "),a("td",[a("code",[t._v("j")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseK")])]),t._v(" "),a("td",[a("code",[t._v("U+006B")])]),t._v(" "),a("td",[t._v("107")]),t._v(" "),a("td",[a("code",[t._v("k")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseL")])]),t._v(" "),a("td",[a("code",[t._v("U+006C")])]),t._v(" "),a("td",[t._v("108")]),t._v(" "),a("td",[a("code",[t._v("l")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseM")])]),t._v(" "),a("td",[a("code",[t._v("U+006D")])]),t._v(" "),a("td",[t._v("109")]),t._v(" "),a("td",[a("code",[t._v("m")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseN")])]),t._v(" "),a("td",[a("code",[t._v("U+006E")])]),t._v(" "),a("td",[t._v("110")]),t._v(" "),a("td",[a("code",[t._v("n")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseO")])]),t._v(" "),a("td",[a("code",[t._v("U+006F")])]),t._v(" "),a("td",[t._v("111")]),t._v(" "),a("td",[a("code",[t._v("o")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseP")])]),t._v(" "),a("td",[a("code",[t._v("U+0070")])]),t._v(" "),a("td",[t._v("112")]),t._v(" "),a("td",[a("code",[t._v("p")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseQ")])]),t._v(" "),a("td",[a("code",[t._v("U+0071")])]),t._v(" "),a("td",[t._v("113")]),t._v(" "),a("td",[a("code",[t._v("q")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseR")])]),t._v(" "),a("td",[a("code",[t._v("U+0072")])]),t._v(" "),a("td",[t._v("114")]),t._v(" "),a("td",[a("code",[t._v("r")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseS")])]),t._v(" "),a("td",[a("code",[t._v("U+0073")])]),t._v(" "),a("td",[t._v("115")]),t._v(" "),a("td",[a("code",[t._v("s")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseT")])]),t._v(" "),a("td",[a("code",[t._v("U+0074")])]),t._v(" "),a("td",[t._v("116")]),t._v(" "),a("td",[a("code",[t._v("t")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseU")])]),t._v(" "),a("td",[a("code",[t._v("U+0075")])]),t._v(" "),a("td",[t._v("117")]),t._v(" "),a("td",[a("code",[t._v("u")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseV")])]),t._v(" "),a("td",[a("code",[t._v("U+0076")])]),t._v(" "),a("td",[t._v("118")]),t._v(" "),a("td",[a("code",[t._v("v")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseW")])]),t._v(" "),a("td",[a("code",[t._v("U+0077")])]),t._v(" "),a("td",[t._v("119")]),t._v(" "),a("td",[a("code",[t._v("w")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseX")])]),t._v(" "),a("td",[a("code",[t._v("U+0078")])]),t._v(" "),a("td",[t._v("120")]),t._v(" "),a("td",[a("code",[t._v("x")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseY")])]),t._v(" "),a("td",[a("code",[t._v("U+0079")])]),t._v(" "),a("td",[t._v("121")]),t._v(" "),a("td",[a("code",[t._v("y")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lowercaseZ")])]),t._v(" "),a("td",[a("code",[t._v("U+007A")])]),t._v(" "),a("td",[t._v("122")]),t._v(" "),a("td",[a("code",[t._v("z")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("leftCurlyBrace")])]),t._v(" "),a("td",[a("code",[t._v("U+007B")])]),t._v(" "),a("td",[t._v("123")]),t._v(" "),a("td",[a("code",[t._v("{")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("verticalBar")])]),t._v(" "),a("td",[a("code",[t._v("U+007C")])]),t._v(" "),a("td",[t._v("124")]),t._v(" "),a("td",[a("code",[t._v("\\|")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("rightCurlyBrace")])]),t._v(" "),a("td",[a("code",[t._v("U+007D")])]),t._v(" "),a("td",[t._v("125")]),t._v(" "),a("td",[a("code",[t._v("}")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("tilde")])]),t._v(" "),a("td",[a("code",[t._v("U+007E")])]),t._v(" "),a("td",[t._v("126")]),t._v(" "),a("td",[a("code",[t._v("~")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("nonBreakingSpace")])]),t._v(" "),a("td",[a("code",[t._v("U+00A0")])]),t._v(" "),a("td",[t._v("160")]),t._v(" "),a("td",[t._v("不换行空格")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("oghamSpaceMark")])]),t._v(" "),a("td",[a("code",[t._v("U+1680")])]),t._v(" "),a("td",[t._v("5760")]),t._v(" "),a("td",[a("code")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lineSeparator")])]),t._v(" "),a("td",[a("code",[t._v("U+2028")])]),t._v(" "),a("td",[t._v("8232")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("paragraphSeparator")])]),t._v(" "),a("td",[a("code",[t._v("U+2029")])]),t._v(" "),a("td",[t._v("8233")]),t._v(" "),a("td")])])])])]),t._v(" "),a("h4",{attrs:{id:"babel-tokenizer-源码解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-tokenizer-源码解析"}},[t._v("#")]),t._v(" Babel tokenizer 源码解析")]),t._v(" "),a("h5",{attrs:{id:"文件结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件结构"}},[t._v("#")]),t._v(" 文件结构")]),t._v(" "),a("p",[t._v("Babel Tokenizer 的核心代码位于目录 "),a("code",[t._v("github/babel/packages/babel-parser/src/tokenizer/")]),t._v("，其中 "),a("code",[t._v("/tokenizer/index.js")]),t._v(" 定义了 "),a("code",[t._v("Tokenizer")]),t._v(" 类。")]),t._v(" "),a("p",[t._v("文件结构:")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("|-- babel-parser\n    |-- src\n        |-- tokenizer\n            |-- context.js: 上下文对象 context，与 token 示例关联\n            |-- index.js: 定义了 Tokenizer 类，包括各种 token 相关的处理方法和属性\n            |-- state.js: 维护了当前 token 实例的状态信息\n            |-- types.js: 维护了所有 token 类型\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h5",{attrs:{id:"tokendizer-index-js-重点代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tokendizer-index-js-重点代码"}},[t._v("#")]),t._v(" tokendizer/index.js 重点代码")]),t._v(" "),a("p",[t._v("总体而言，tokendizer/index.js 中定义的 "),a("code",[t._v("Tokenizer")]),t._v(" 类继承自 "),a("code",[t._v("PaserErrors")]),t._v(" 对象，同时定义了关于 token 的各种操作方法和属性。")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("tokens: Array<Token | N.Comment> = [];")])]),t._v(" "),a("p",[a("code",[t._v("token")]),t._v(" 数组。数组项可以是 "),a("code",[t._v("Token")]),t._v(" 类的实例或者是注释对象。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("nextToken()")])]),t._v(" "),a("p",[t._v("访问下一个 "),a("code",[t._v("token")]),t._v("。")]),t._v(" "),a("p",[t._v("笔者在源码中添加了部分注释，便于理解。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" curContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果不保留空白符和注释，则跳过它们")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一般情况下，均认为空格是可以忽略的，不需要识别为 token。有几种类型的 token 是例外:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. `template`: 模板字符串中的空格是有意义的")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. jsx 中的 `expr`: `<tag>...</tag>` 标签内的空格也是有意义的")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("curContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("preserveSpace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("skipSpace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 记录访问开始的位置信息")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isLookahead"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startLoc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curPosition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 如果目标访问位置超过了源码长度，则认为进入源码文件末尾，也就是 "end-of-file"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eof"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 区分是在读取 template 语法还是非 template 语法（数字、操作符等）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("curContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" ct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readTmplToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTokenFromCode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("codePointAtPos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("lookahead()")])]),t._v(" "),a("p",[t._v("读取并返回下一个 "),a("code",[t._v("token")]),t._v(' 对象。这里用到了简单的"回溯"写法，先保存当前 token 对象，再直接进入并获取下一个 token 对象，最后恢复为当前 token 对象。')]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lookahead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" LookaheadState "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 保留状态")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" old "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个新的 token state")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createLookaheadState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("old"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问下一个 token")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isLookahead "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isLookahead "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" curr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 恢复状态")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" old"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回下一个 token")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" curr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("codePointAtPos()")])]),t._v(" "),a("p",[t._v("TODO")])])]),t._v(" "),a("h4",{attrs:{id:"babel-定义的-token-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-定义的-token-类型"}},[t._v("#")]),t._v(" Babel 定义的 token 类型")]),t._v(" "),a("p",[t._v("词法文法: https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Lexical_grammar\nJavaScript 参考: https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference")]),t._v(" "),a("p",[t._v("在介绍词法分析时提到过一个案例：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("这段代码被词法分析后，会分割为如下词法单元。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("词法单元")]),t._v(" "),a("th",[t._v("token 类型")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("const")])]),t._v(" "),a("td",[a("code",[t._v("const")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("a")])]),t._v(" "),a("td",[a("code",[t._v("name")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("=")])]),t._v(" "),a("td",[a("code",[t._v("eq")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("1")])]),t._v(" "),a("td",[a("code",[t._v("num")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v(";")])]),t._v(" "),a("td",[a("code",[t._v("semi")])])])])]),t._v(" "),a("p",[t._v("很显然这些类型对 Babel 来说是不够的，笔者整理了 Babel tokendizer 中的 token 类型。")]),t._v(" "),a("h5",{attrs:{id:"空白"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空白"}},[t._v("#")]),t._v(' "空白"')]),t._v(" "),a("p",[t._v('"空白"包括: 格式控制符、空白符、行终止符:')]),t._v(" "),a("ul",[a("li",[a("p",[t._v("格式控制符")]),t._v(" "),a("p",[t._v("用于控制对源码文本的解释，但是并不会显示出来。")])]),t._v(" "),a("li",[a("p",[t._v("空白符")]),t._v(" "),a("p",[t._v("用于提升源码的可读性，并不影响源码的功能，通常用于将标记（tokens）分开。")])]),t._v(" "),a("li",[a("p",[t._v("行终止符")]),t._v(" "),a("p",[t._v('除了"空白符"之外，"行终止符"也可以提高源码的可读性。')]),t._v(" "),a("p",[t._v('不同的是，"行终止符"可以影响 JavaScript 代码的执行。"行终止符"也会影响自动分号补全的执行。在正则表达式中，"行终止符"会被 '),a("code",[t._v("\\s")]),t._v(" 匹配。")])])]),t._v(" "),a("p",[t._v('下表是各种"空白"的介绍:')]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("分类")]),t._v(" "),a("th",[t._v("编码")]),t._v(" "),a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("缩写")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("转义序列")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("格式控制符")]),t._v(" "),a("td",[a("code",[t._v("U+200C")])]),t._v(" "),a("td",[t._v("零宽不连字")]),t._v(" "),a("td",[a("code",[t._v("<ZWNJ>")])]),t._v(" "),a("td",[t._v("放置在一些经常会被当成连字的字符之间，用于将它们分别以独立形式显示")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("格式控制符")]),t._v(" "),a("td",[a("code",[t._v("U+200D")])]),t._v(" "),a("td",[t._v("零宽连字")]),t._v(" "),a("td",[a("code",[t._v("<ZWJ>")])]),t._v(" "),a("td",[t._v("放置在一些通常不会被标记为连字的字符之间，用于将这些字符以连字形式显示")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("格式控制符")]),t._v(" "),a("td",[a("code",[t._v("U+FEFF")])]),t._v(" "),a("td",[t._v("字节流方向标识")]),t._v(" "),a("td",[a("code",[t._v("<BOM>")])]),t._v(" "),a("td",[t._v("在脚本开头使用，除了将脚本标记为 "),a("code",[t._v("Unicode")]),t._v(" 格式以外，还用来标记文本的字节流方向")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("空白符")]),t._v(" "),a("td",[a("code",[t._v("U+0009")])]),t._v(" "),a("td",[t._v("制表符")]),t._v(" "),a("td",[a("code",[t._v("<HT>")])]),t._v(" "),a("td",[t._v("水平制表符，就是TAB")]),t._v(" "),a("td",[a("code",[t._v("\\t")])])]),t._v(" "),a("tr",[a("td",[t._v("空白符")]),t._v(" "),a("td",[a("code",[t._v("U+000B")])]),t._v(" "),a("td",[t._v("垂直制表符")]),t._v(" "),a("td",[a("code",[t._v("<VT>")])]),t._v(" "),a("td",[t._v("垂直制表符，就是垂直方向的TAB")]),t._v(" "),a("td",[a("code",[t._v("\\v")])])]),t._v(" "),a("tr",[a("td",[t._v("空白符")]),t._v(" "),a("td",[a("code",[t._v("U+000C")])]),t._v(" "),a("td",[t._v("分页符")]),t._v(" "),a("td",[a("code",[t._v("<FF>")])]),t._v(" "),a("td",[t._v("分页符")]),t._v(" "),a("td",[a("code",[t._v("\\f")])])]),t._v(" "),a("tr",[a("td",[t._v("空白符")]),t._v(" "),a("td",[a("code",[t._v("U+0020")])]),t._v(" "),a("td",[t._v("空格")]),t._v(" "),a("td",[a("code",[t._v("<SP>")])]),t._v(" "),a("td",[t._v("空格")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("空白符")]),t._v(" "),a("td",[a("code",[t._v("U+00A0")])]),t._v(" "),a("td",[t._v("不换行空格")]),t._v(" "),a("td",[a("code",[t._v("<NBSP>")])]),t._v(" "),a("td",[a("code",[t._v("<SP>")]),t._v(" 的变体，非换行空格，"),a("br"),t._v("在文字排版中可以避免因为空格在此处发生断行，在 HTML 中使用的 "),a("code",[t._v("&nbsp")]),t._v(" 会生成它")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("空白符")]),t._v(" "),a("td",[a("code",[t._v("Others")])]),t._v(" "),a("td",[t._v("其他 Unicode 空白")]),t._v(" "),a("td",[a("code",[t._v("<USP>")])]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("行终止符")]),t._v(" "),a("td",[a("code",[t._v("U+000A")])]),t._v(" "),a("td",[t._v("换行符")]),t._v(" "),a("td",[a("code",[t._v("<LF>")])]),t._v(" "),a("td",[t._v("在 UNIX 系统中起新行")]),t._v(" "),a("td",[a("code",[t._v("\\n")])])]),t._v(" "),a("tr",[a("td",[t._v("行终止符")]),t._v(" "),a("td",[a("code",[t._v("U+000D")])]),t._v(" "),a("td",[t._v("回车符")]),t._v(" "),a("td",[a("code",[t._v("<CR>")])]),t._v(" "),a("td",[t._v("在 Commodore 和早期的 Mac 系统中起新行")]),t._v(" "),a("td",[a("code",[t._v("\\r")])])]),t._v(" "),a("tr",[a("td",[t._v("行终止符")]),t._v(" "),a("td",[a("code",[t._v("U+2028")])]),t._v(" "),a("td",[t._v("行分隔符")]),t._v(" "),a("td",[a("code",[t._v("<LS>")])]),t._v(" "),a("td",[t._v("Unicode 中的行分隔符")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("行终止符")]),t._v(" "),a("td",[a("code",[t._v("U+2029")])]),t._v(" "),a("td",[t._v("段分隔符")]),t._v(" "),a("td",[a("code",[t._v("<PS>")])]),t._v(" "),a("td",[t._v("Unicode 中的段落分隔符")]),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v('Babel 中，有一个单独的文件提供了"空白"相关的工具方法: babel/packages/babel-parser/src/util/whitespace.js。')]),t._v(" "),a("p",[t._v("其核心代码如下:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" lineBreak "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\r\\n?|[\\n\\u2028\\u2029]")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://tc39.github.io/ecma262/#sec-line-terminators")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNewLine")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("code")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lineFeed"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "\\n" <LF>')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("carriageReturn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "\\r" <CR>')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lineSeparator"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 行分隔符 <LS>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("paragraphSeparator"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 段分隔符 <PS>")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://tc39.github.io/ecma262/#sec-white-space")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isWhitespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("code")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0009")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// CHARACTER TABULATION")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x000b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// LINE TABULATION")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x000c")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// FORM FEED")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("space"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 空格 <SP>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nonBreakingSpace"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不换行空格 <NBSP>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("oghamSpaceMark"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ?")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x2000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// EN QUAD")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x2001")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// EM QUAD")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x2002")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// EN SPACE")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x2003")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// EM SPACE")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x2004")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// THREE-PER-EM SPACE")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x2005")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// FOUR-PER-EM SPACE")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x2006")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SIX-PER-EM SPACE")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x2007")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// FIGURE SPACE")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x2008")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PUNCTUATION SPACE")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x2009")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// THIN SPACE")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x200a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HAIR SPACE")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x202f")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NARROW NO-BREAK SPACE")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x205f")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MEDIUM MATHEMATICAL SPACE")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x3000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// IDEOGRAPHIC SPACE")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xfeff")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ZERO WIDTH NO-BREAK SPACE")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br")])]),a("h5",{attrs:{id:"注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[t._v("#")]),t._v(" 注释")]),t._v(" "),a("p",[t._v("注释用来在源码中增加提示、笔记、建议、警告等信息，可以帮助阅读和理解源码。在调试时，可以用来将一段代码屏蔽掉，防止其运行。")]),t._v(" "),a("p",[t._v("在 JavaScript 中，有 3 种添加注释的方法。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("单行注释: "),a("code",[t._v("//")]),t._v(" 后的文本都视为注释")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这是单行注释")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("多行注释: "),a("code",[t._v("/* */")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n* 这是多行注释 1\n* 这是多行注释 2\n*/")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("Hashbang 注释: "),a("code",[t._v("#!")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token hashbang comment"}},[t._v("#!/usr/bin/env node")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("JavaScript 中的 hashbang 注释模仿 Unix 中的 "),a("code",[t._v("shebangs")]),t._v("，用于指定适当的解释器运行文件，它仅在脚本或模块的绝对开头有效。")]),t._v(" "),a("p",[t._v("在计算领域中，Shebang（也称为 Hashbang）是一个由井号和叹号构成的字符序列 "),a("code",[t._v("#!")]),t._v("，其出现在文本文件的第一行的前两个字符。 在文件中存在 "),a("code",[t._v("Shebang")]),t._v(" 的情况下，类 Unix 操作系统的程序加载器会分析 "),a("code",[t._v("Shebang")]),t._v(" 后的内容，将这些内容作为解释器指令，并调用该指令，并将载有 "),a("code",[t._v("Shebang")]),t._v(" 的文件路径作为该解释器的参数。")]),t._v(" "),a("p",[t._v("例如，以指令 "),a("code",[t._v("#!/bin/sh")]),t._v(" 开头的文件在执行时会实际调用 "),a("code",[t._v("/bin/sh")]),t._v(" 程序。")]),t._v(" "),a("p",[t._v("下面列出了一些典型的 shebang 解释器指令：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("#!/bin/sh")]),t._v(" — 使用 "),a("code",[t._v("sh")]),t._v("，即 Bourne shell"),a("code",[t._v("或其它兼容")]),t._v("shell` 执行脚本")]),t._v(" "),a("li",[a("code",[t._v("#!/bin/csh")]),t._v(" — 使用 "),a("code",[t._v("csh")]),t._v("，即 C shell 执行")]),t._v(" "),a("li",[a("code",[t._v("#!/usr/bin/perl -w")]),t._v(" — 使用带警告的 Perl 执行")]),t._v(" "),a("li",[a("code",[t._v("#!/usr/bin/python -O")]),t._v(" — 使用具有代码优化的 Python 执行")]),t._v(" "),a("li",[a("code",[t._v("#!/usr/bin/php")]),t._v(" — 使用 PHP 的命令行解释器执行")])])])]),t._v(" "),a("p",[t._v("文件 babel/packages/babel-parser/src/tokenizer/index.js 中有与注释相关的处理方法，tokenizer 对注释的处理方式分为两种:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v('单行和多行注释，视为"空白"')]),t._v(" "),a("p",[a("code",[t._v("skipSpace()")]),t._v(" 方法会识别注释并添加到 "),a("code",[t._v("commentStack")]),t._v(" 数组中。")]),t._v(" "),a("p",[t._v("识别时，以 "),a("code",[t._v("/")]),t._v(" 为关注点，检测下一个字符是 "),a("code",[t._v("*")]),t._v(" 或 "),a("code",[t._v("/")]),t._v("。")]),t._v(" "),a("p",[t._v("如果下一个字符是 "),a("code",[t._v("*")]),t._v("，进入 "),a("code",[t._v("skipBlockComment()")]),t._v(" 的执行流程；")]),t._v(" "),a("p",[t._v("如果下一个字符是 "),a("code",[t._v("/")]),t._v("，进入"),a("code",[t._v("skipLineComment()")]),t._v(" 的执行流程。")])]),t._v(" "),a("li",[a("p",[t._v("Hashbang 注释的处理方法")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readToken_interpreter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果字符起始位置不是第一个字符，就直接返回，不做处理")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果长度不够 2，也不做处理")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exclamationMark"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// !")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNewLine")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取出 #! xxx 中的 xxx 作为 value 值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interpreterDirective"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br")])]),a("p",[t._v("该方法会识别并取出 "),a("code",[t._v("#! xxx")]),t._v(" 中的 "),a("code",[t._v("xxx")]),t._v(" 作为该 token 的值。")])])]),t._v(" "),a("h5",{attrs:{id:"标识符-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标识符-name"}},[t._v("#")]),t._v(" 标识符: "),a("code",[t._v("name")])]),t._v(" "),a("p",[t._v("标识符是代码中用来标识变量、函数、或属性的字符序列。")]),t._v(" "),a("p",[t._v("在 JavaScript 中，标识符只能包含字母或数字或下划线（"),a("code",[t._v('"_"')]),t._v("）或美元符号（"),a("code",[t._v('"$"')]),t._v("），且不能以数字开头。")]),t._v(" "),a("p",[t._v("文件 babel/packages/babel-parser/src/tokenizer/index.js 中与标识符识别相关的方法是：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readWord")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("firstCode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" word "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readWord1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("firstCode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" keywordTypes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" word"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readWord1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("firstCode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" numbder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h5",{attrs:{id:"数字直接量-num"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字直接量-num"}},[t._v("#")]),t._v(" 数字直接量: "),a("code",[t._v("num")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("JavaScript 中表示数字的方式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("字面量")]),t._v(" "),a("p",[t._v("使用字面量（literal）直接表示一个数值时，JavaScript 对整数提供四种进制的表示方法: 十进制、十六进制、八进制、二进制。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("十进制: 没有前导 "),a("code",[t._v("0")]),t._v(" 的数值。")]),t._v(" "),a("p",[t._v("只有十进制可以带小数和用科学计数法表示。")]),t._v(" "),a("p",[t._v("带小数时小数点前后部分都可以省略（不能同时省略），如 "),a("code",[t._v("0.1 / 1. / 2.4")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("八进制: 有前缀 "),a("code",[t._v("0o")]),t._v(" 或 "),a("code",[t._v("0O")]),t._v(" 的数值，或者有前导 "),a("code",[t._v("0")]),t._v("、且只用到 "),a("code",[t._v("0-7")]),t._v(" 的八个阿拉伯数字的数值。")])]),t._v(" "),a("li",[a("p",[t._v("十六进制: 有前缀 "),a("code",[t._v("0x")]),t._v(" 或 "),a("code",[t._v("0X")]),t._v(" 的数值。")])]),t._v(" "),a("li",[a("p",[t._v("二进制: 有前缀 "),a("code",[t._v("0b")]),t._v(" 或 "),a("code",[t._v("0B")]),t._v(" 的数值。")])])])]),t._v(" "),a("li",[a("p",[t._v("科学计数法")]),t._v(" "),a("p",[t._v("科学计数法表示允许字母 "),a("code",[t._v("e")]),t._v(" 或 "),a("code",[t._v("E")]),t._v(" 的后面，跟着一个整数，表示这个数值的指数部分。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123e3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123e-3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0.123")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1E+12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1e-23")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("特殊数值")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("正零和负零")]),t._v(" "),a("p",[t._v("在 JavaScript 的 64 位浮点数中，有一个二进制位是符号位，那么，0 也是有一个对应的负值的。"),a("code",[t._v("+0")]),t._v(" 和 "),a("code",[t._v("-0")]),t._v(" 都指的是 "),a("code",[t._v("0")]),t._v("，只是它们的64位浮点数表示法的符号位不同。")]),t._v(" "),a("p",[t._v("一般状态下，"),a("code",[t._v("+0")]),t._v(" 和 "),a("code",[t._v("-0")]),t._v(" 是等价的，会被当做正常的"),a("code",[t._v("0")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '0'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '0'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("只是，如果 "),a("code",[t._v("+0")]),t._v(" 和 "),a("code",[t._v("-0")]),t._v(" 作为分母，则有一些区别:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("因为 "),a("code",[t._v("1 / +0")]),t._v(" 的结果是 "),a("code",[t._v("+Infinity")]),t._v("，"),a("code",[t._v("1 / -0")]),t._v(" 的结果是 "),a("code",[t._v("-Infinity")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("NaN")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Infinity")])])])])])])]),t._v(" "),a("li",[a("p",[t._v("文件 babel/packages/babel-parser/src/tokenizer/index.js 对数字的处理")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("readInt()")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("readRadixNumber()")])]),t._v(" "),a("p",[t._v("TODO")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("readNumber()")])]),t._v(" "),a("p",[t._v("TODO")])])])])]),t._v(" "),a("h5",{attrs:{id:"正则表达式直接量-regexp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式直接量-regexp"}},[t._v("#")]),t._v(" 正则表达式直接量: "),a("code",[t._v("regexp")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("正则的 "),a("code",[t._v("flag")])]),t._v(" "),a("p",[t._v("正则有如下 "),a("code",[t._v("flag")]),t._v(": "),a("code",[t._v("g/m/s/i/y/u/d")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lowercaseG\ncharCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lowercaseM\ncharCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lowercaseS\ncharCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lowercaseI\ncharCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lowercaseY\ncharCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lowercaseU\ncharCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lowercaseD\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("tokenizer 对正则的处理")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readRegexp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" escaped"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" inClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" pos "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("raise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Errors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UnterminatedRegExp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNewLine")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遇到换行符，抛出错误，遇到未完结的正则表达式")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("raise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Errors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UnterminatedRegExp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("escaped"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            escaped "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("leftSquareBracket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [")]),t._v("\n                inClass "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rightSquareBracket "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" inClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ]")]),t._v("\n                inClass "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("slash "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("inClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            escaped "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backslash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \\")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" content "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 内容")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" mods "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("codePointAtPos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" char "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VALID_REGEX_FLAGS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mods"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("char"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("raise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Errors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DuplicateRegExpFlags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重复的 flag")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isIdentifierChar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" cp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backslash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("raise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Errors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MalformedRegExpFlags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非法正则")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        mods "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" char"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regexp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("pattern")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("flags")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" mods"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br"),a("span",{staticClass:"line-number"},[t._v("55")]),a("br")])])])]),t._v(" "),a("h5",{attrs:{id:"字符串直接量-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串直接量-string"}},[t._v("#")]),t._v(" 字符串直接量: "),a("code",[t._v("string")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quote"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" out "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        chunkStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("raise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Errors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UnterminatedString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" quote"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backslash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            out "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunkStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// $FlowFixMe")]),t._v("\n            out "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readEscapedChar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            chunkStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lineSeparator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n            ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("paragraphSeparator\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("curLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lineStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNewLine")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("raise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Errors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UnterminatedString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    out "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunkStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br")])]),a("h5",{attrs:{id:"模板字符串-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板字符串-template"}},[t._v("#")]),t._v(" 模板字符串: "),a("code",[t._v("template")])]),t._v(" "),a("p",[t._v("模板字符串是允许嵌入表达式的字符串字面量，可以使用多行、表达式引入、标签引入功能。")]),t._v(" "),a("p",[t._v("它有如下形态:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("string text")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 多行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("string text line 1\nstring text line 2")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表达式引入")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("string text ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("expression"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" string text")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标签引入")]),t._v("\ntag"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("string text ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("expression"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" string text")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("token 解析时，需要对以下情况做处理。")]),t._v(" "),a("ul",[a("li",[t._v("该代码段第一批字符是 ` 开头的话，会记录为一个 "),a("code",[t._v("tt.backQuote")]),t._v(" 类型")]),t._v(" "),a("li",[t._v("该代码段第一批字符是 "),a("code",[t._v("${")]),t._v(" 开头的话，会记录为一个 "),a("code",[t._v("tt.dollarBraceL")]),t._v(" 类型")]),t._v(" "),a("li",[t._v("在扫描该代码段途中，遇到转译标志 "),a("code",[t._v("\\")]),t._v("、换行 "),a("code",[t._v("\\r")]),t._v(" 及 "),a("code",[t._v("\\n")]),t._v(" 时，会继续扫描检查是否满足对目标格式的要求")])]),t._v(" "),a("h5",{attrs:{id:"符号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#符号"}},[t._v("#")]),t._v(" 符号")]),t._v(" "),a("p",[t._v("JavaScript 中有如下符号:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("blockquote",[a("p",[t._v("因需识别字符串模板，"),a("code",[t._v("{")]),t._v(" 和 "),a("code",[t._v("}")]),t._v(" 也被视为可能有意义的符号\n因需识别除法和正则，"),a("code",[t._v("/")]),t._v(" 也被视为可能有意义的符号")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v(".")]),t._v(": "),a("code",[t._v("dot")])]),t._v(" "),a("p",[t._v("当源码遍历过程中，遇到 "),a("code",[t._v(".")]),t._v(" 字符时，会调用 "),a("code",[t._v("readToken_dot")]),t._v(" 方法。")]),t._v(" "),a("p",[a("code",[t._v(".")]),t._v("开头的合法 token 的值有两种: 数字（如 "),a("code",[t._v(".123")]),t._v("）、扩展运算符（"),a("code",[t._v("...")]),t._v("）。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readToken_dot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 识别 ".123"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("digit0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("digit9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readNumber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 识别 "..."')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ellipsis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("/")]),t._v(": "),a("code",[t._v("slash")])]),t._v(" "),a("p",[t._v("当源码遍历过程中，遇到 "),a("code",[t._v("/")]),t._v(" 字符时，会调用 "),a("code",[t._v("readToken_slash")]),t._v("方法。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readToken_slash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equalsTo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /=")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishOp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("slashAssign"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishOp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("slash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("该方法可以识别2种token: "),a("code",[t._v("/=")]),t._v("、"),a("code",[t._v("/")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("*")]),t._v(": "),a("code",[t._v("star")]),t._v(" 或 "),a("code",[t._v("%")]),t._v(": "),a("code",[t._v("modulo")])]),t._v(" "),a("p",[t._v("当源码遍历过程中，遇到 "),a("code",[t._v("*")]),t._v(" 或 "),a("code",[t._v("%")]),t._v(" 字符时，会调用 "),a("code",[t._v("readToken_mult_modulo")]),t._v(" 方法。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readToken_mult_modulo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '%*'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" code "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("asterisk "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("star "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("modulo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// asterisk: *")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Exponentiation operator **")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("asterisk "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("asterisk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exponent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// **")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equalsTo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assign"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// *= / %=")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishOp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br")])]),a("p",[t._v("该方法可以识别 3 种 token: "),a("code",[t._v("**")]),t._v("、"),a("code",[t._v("*=")]),t._v("、"),a("code",[t._v("%=")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("|")]),t._v(" 或 "),a("code",[t._v("&")])]),t._v(" "),a("p",[t._v("当源码遍历过程中，遇到 "),a("code",[t._v("|")]),t._v(" 或 "),a("code",[t._v("&")]),t._v(" 字符时，会调用 "),a("code",[t._v("readToken_pipe_amp")]),t._v(" 方法。")]),t._v(" "),a("p",[t._v("该方法可以识别 3 种 token: "),a("code",[t._v("||")]),t._v("、 "),a("code",[t._v("、&&")]),t._v("、 "),a("code",[t._v("、||=")]),t._v("、 "),a("code",[t._v("、&&=")]),t._v("、"),a("code",[t._v("|>")]),t._v("、"),a("code",[t._v("|}")]),t._v("、"),a("code",[t._v("|]")]),t._v("。")]),t._v(" "),a("p",[t._v("值得注意的是，该方法内部有对部分插件的引入要求:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '|}'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"recordAndTuple"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rightCurlyBrace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 要求引入插件 babel-plugin-syntax-record-and-tuple，")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 并且插件的 syntaxType 配置项的值不能是 "bar"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPluginOption")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"recordAndTuple"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"syntaxType"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没有引入插件，抛出")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("raise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            Errors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RecordExpressionBarIncorrectEndSyntaxType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("^")])]),t._v(" "),a("p",[t._v("当源码遍历过程中，遇到 "),a("code",[t._v("^")]),t._v(" 字符时，会调用 "),a("code",[t._v("readToken_caret")]),t._v(" 方法。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readToken_caret")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equalsTo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ^=")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishOp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assign"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishOp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bitwiseXOR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 异或运算符")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("该方法可以识别 2 种 token: "),a("code",[t._v("^=")]),t._v("、"),a("code",[t._v("^")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("+")]),t._v(" 或 "),a("code",[t._v("-")])]),t._v(" "),a("p",[t._v("当源码遍历过程中，遇到 "),a("code",[t._v("+")]),t._v(" 或 "),a("code",[t._v("-")]),t._v(" 字符时，会调用 "),a("code",[t._v("readToken_plus_min")]),t._v(" 方法。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readToken_plus_min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '+-'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishOp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("incDec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ++ --")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equalsTo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// += -=")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishOp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assign"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishOp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("plusMin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// + -")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("p",[t._v("该方法可以识别6种token: "),a("code",[t._v("++")]),t._v("、"),a("code",[t._v("--")]),t._v("、"),a("code",[t._v("+=")]),t._v("、"),a("code",[t._v("-=")]),t._v("、"),a("code",[t._v("+")]),t._v("、"),a("code",[t._v("-")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("<")]),t._v(" 或 "),a("code",[t._v(">")])]),t._v(" "),a("p",[t._v("当源码遍历过程中，遇到 "),a("code",[t._v("<")]),t._v(" 或 "),a("code",[t._v(">")]),t._v(" 字符时，会调用 "),a("code",[t._v("readToken_lt_gt")]),t._v(" 方法。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readToken_lt_gt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '<>'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n            code "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("greaterThan "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("greaterThan\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equalsTo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishOp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assign"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishOp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bitShift"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// << >>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equalsTo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <= | >=")]),t._v("\n        size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishOp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("relational"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br")])]),a("p",[a("code",[t._v("readToken_lt_gt")]),t._v(" 方法可以识别 6 种 token: "),a("code",[t._v("<<")]),t._v("、"),a("code",[t._v(">>")]),t._v("、"),a("code",[t._v("<")]),t._v("、"),a("code",[t._v(">")]),t._v("、"),a("code",[t._v("<=")]),t._v("、"),a("code",[t._v(">=")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("=")]),t._v(" 或 "),a("code",[t._v("!")])]),t._v(" "),a("p",[t._v("当源码遍历过程中，遇到 "),a("code",[t._v("=")]),t._v(" 或 "),a("code",[t._v("!")]),t._v(" 时，会调用 "),a("code",[t._v("readToken_eq_excl")]),t._v(" 方法。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readToken_eq_excl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// = !")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equalsTo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// == !=")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishOp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equality"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equalsTo\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === !== == !=")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equalsTo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("greaterThan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '=>'")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arrow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishOp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equalsTo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eq "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br")])]),a("p",[a("code",[t._v("readToken_lt_gt")]),t._v("方法可以识别7种token: "),a("code",[t._v("=")]),t._v("、"),a("code",[t._v("!")]),t._v("、 "),a("code",[t._v("==")]),t._v("、"),a("code",[t._v("!=")]),t._v("、"),a("code",[t._v("===")]),t._v("、"),a("code",[t._v("!==")]),t._v("、"),a("code",[t._v("==>")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("?")])]),t._v(" "),a("p",[t._v("当源码遍历过程中，遇到 "),a("code",[t._v("?")]),t._v(" ，会调用 "),a("code",[t._v("readToken_eq_excl")]),t._v(" 方法。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readToken_question")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" next2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("questionMark"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ??")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equalsTo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ??=")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishOp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assign"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishOp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nullishCoalescing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ??")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("digit0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" next2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" charCodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("digit9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ?.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '.' not followed by a number")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("questionDot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("question"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ?")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("p",[a("code",[t._v("readToken_lt_gt")]),t._v(" 方法可以识别 4 种 token: "),a("code",[t._v("?")]),t._v("、"),a("code",[t._v("??")]),t._v("、"),a("code",[t._v("??=")]),t._v("、"),a("code",[t._v("?.")]),t._v("。")])])]),t._v(" "),a("h4",{attrs:{id:"词法错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#词法错误"}},[t._v("#")]),t._v(" 词法错误")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("词法错误发生的时机")]),t._v(" "),a("p",[a("code",[t._v("Tokenizer")]),t._v(" 使用继承自 "),a("code",[t._v("babel/packages/babel-parser/src/parser/error.js")]),t._v(" 的 "),a("code",[t._v("raise()")]),t._v(" 方法抛出词法分析中扫描到的错误。")]),t._v(" "),a("p",[a("code",[t._v("Tokenizer")]),t._v(" 中抛出词法错误的时机有如下几种场景:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("严格模式中发现错误")]),t._v(" "),a("p",[t._v("严格模式（"),a("code",[t._v('"use strict;"')]),t._v("）下有一系列的限制条件，"),a("code",[t._v("Tokenizer")]),t._v(" 在分析过程中，会尝试发现这些错误并抛出。")]),t._v(" "),a("ul",[a("li",[t._v("禁止出现 "),a("code",[t._v("0")]),t._v(" 开头的数字，如 "),a("code",[t._v('"use strict"; 010;')]),t._v("，在词法分析阶段就会发现并抛出该错误，但允许 "),a("code",[t._v("\\\\0")]),t._v(" 开头的数字")]),t._v(" "),a("li",[t._v("禁止出现八进制数字")])])]),t._v(" "),a("li",[a("p",[t._v("扫描到的疑似词法单元不满足格式要求")]),t._v(" "),a("p",[t._v("比如块级注释 "),a("code",[t._v("/* */")]),t._v(" 缺乏闭合标签、hashbang 注释 "),a("code",[t._v("#!")]),t._v(" 匹配到了不合适的字符如 "),a("code",[t._v("#2")]),t._v("、正则表达式缺乏闭合标签等。")])]),t._v(" "),a("li",[a("p",[t._v("缺乏必要的 Babel 插件引入")]),t._v(" "),a("p",[t._v("对于某些特殊词法单元，需要显示引入对应的插件才会开启支持，否则会抛出错误。")]),t._v(" "),a("p",[a("code",[t._v("Tokenizer")]),t._v(" 在解析时，出现过多次对 "),a("code",[t._v("recordAndTuple")]),t._v(" 插件的引入要求。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("#{")]),t._v(" 语法要求引入 "),a("code",[t._v("recordAndTuple")]),t._v(" 插件且 "),a("code",[t._v("syntaxType")]),t._v(" 配置项设置为 "),a("code",[t._v("hash")])]),t._v(" "),a("li",[a("code",[t._v("{|")]),t._v(" 和 "),a("code",[t._v("|}")]),t._v(" 语法要求引入 "),a("code",[t._v("recordAndTuple")]),t._v(" 插件且 "),a("code",[t._v("syntaxType")]),t._v(" 配置项设置为 "),a("code",[t._v("bar")])])])]),t._v(" "),a("li",[a("p",[t._v("未知的词法单元，也就是常见的 "),a("code",[t._v("UnexpectedToken")])]),t._v(" "),a("p",[t._v("如果 Babel 定义的词法单元都没有被识别出的话，就会抛出 "),a("code",[t._v("UnexpectedToken")]),t._v(" 类型的错误，文案描述为 "),a("code",[t._v('"Unexpected character ..."')]),t._v("。")]),t._v(" "),a("p",[t._v("比如，源码中出现了一个不属于任何词法单元类型的字符时，会抛出 "),a("code",[t._v("UnexpectedToken")]),t._v(" 的错误:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" · "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("在词法解析时就会抛出错误: "),a("code",[t._v("Unexpected character '·'.")]),t._v("，因为 "),a("code",[t._v("·")]),t._v(" 并不是一个合法的词法单元字符。")])])])]),t._v(" "),a("li",[a("p",[t._v("词法错误列表")]),t._v(" "),a("p",[t._v("在词法分析时，是能够发现源码中的一些问题的，比如括号缺少闭合标签等。")]),t._v(" "),a("p",[t._v("这里列举了 Babel 在词法分析阶段能够发现的错误:")]),t._v(" "),a("blockquote",[a("p",[t._v("错误描述定义在文件 "),a("code",[t._v("babel/packages/babel-parser/src/parser/error-message.js")])])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("RecordExpressionBarIncorrectStartSyntaxType")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Record expressions starting with "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{|'")]),t._v(" are only allowed when the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'syntaxType'")]),t._v(" option of the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'recordAndTuple'")]),t._v(" plugin is "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" to "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("code",[t._v("{|")]),t._v(" 语法要求引入 "),a("code",[t._v("recordAndTuple")]),t._v(" 插件且 "),a("code",[t._v("syntaxType")]),t._v(" 配置项设置为 "),a("code",[t._v("bar")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("InvalidOrUnexpectedToken")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Unexpected character "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%0'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("出现了非法的 token 字符。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("UnterminatedRegExp")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Unterminated regular expression.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("未闭合的正则表达式。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("DuplicateRegExpFlags")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Duplicate regular expression flag.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("重复的正则 flag。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("MalformedRegExpFlags")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Invalid regular expression flag.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("非法的正则 flag")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("UnexpectedNumericSeparator")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("A numeric separator is only allowed between two digits.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("1_a\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("SyntaxError: unknown: A numeric separator is only allowed between two digits. "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 1_a\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  ^\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("NumericSeparatorInEscapeSequence")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("InvalidDigit")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Expected number "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" radix %0.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("InvalidDecimal")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Invalid decimal.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("NumberIdentifier")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Identifier directly after number.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("无效的小数。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("InvalidNumber")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Invalid number.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("非法数字。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("ZeroDigitNumericSeparator")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Numeric separator can not be used after leading "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("InvalidOrMissingExponent")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Floating-point numbers require a valid exponent after the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'e'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("InvalidBigIntLiteral")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Invalid BigIntLiteral.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("非法的大数字面量。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("InvalidCodePoint")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Code point out of bounds.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("UnterminatedString")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Unterminated string constant.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("未闭合的字符串。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("InvalidEscapeSequence")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Bad character escape sequence.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("MissingUnicodeEscape")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Expecting Unicode escape sequence "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("uXXXX.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("EscapedCharNotAnIdentifier")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Invalid Unicode escape.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("InvalidEscapedReservedWord")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Escape sequence "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" keyword %0.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);