(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{497:function(s,a,n){"use strict";n.r(a);var e=n(1),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("Babel 是一个比较庞大的项目，其子工程就有至少 140 个，产出的子工具已经是前端开发的基础设施，对开发效率、代码质量等有非常高的要求。")]),s._v(" "),n("p",[s._v("本章，我们将了解 Babel 是怎样进行项目管理的。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-images.githubusercontent.com/5757051/155271288-1fbf98d9-d03e-401e-9008-6bbb86098f32.jpg",alt:"Babel项目管理/概览"}})]),s._v(" "),n("p",[s._v("本书从工程管理、代码管理、文档管理、质量管理四个方面对 Babel 项目管理进行拆解分析。")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("工程管理")]),s._v(" "),n("p",[s._v("Babel 是典型的 monorepo 项目，即单仓库项目，所有的子模块在同一个仓库里。Babel 目前有 140+ 个子模块，在工程管理部分，需要解决以下问题：")]),s._v(" "),n("ul",[n("li",[s._v("模块间如何方便地互相关联进行本地开发")]),s._v(" "),n("li",[s._v("整个项目的版本控制")]),s._v(" "),n("li",[s._v("操作自动化")])]),s._v(" "),n("p",[s._v("工程管理部分主要使用 lerna、yarn 等工具。")])]),s._v(" "),n("li",[n("p",[s._v("代码风格")]),s._v(" "),n("p",[s._v("Babel 是多人协作开发的开源项目，如何保证代码风格一致，Babel 使用的是社区常见的解决方案。")]),s._v(" "),n("p",[s._v("该模块主要使用 eslint、prettier 等工具。")])]),s._v(" "),n("li",[n("p",[s._v("文档")]),s._v(" "),n("p",[s._v("Babel 的迭代速度很快、涉及的模块很多，该模块解决版本发布后如何自动更新相关文档等问题。")]),s._v(" "),n("p",[s._v("该模块主要使用 lerna 等工具。")])]),s._v(" "),n("li",[n("p",[s._v("质量控制")]),s._v(" "),n("p",[s._v("Babel 的产品是前端开发的基础设施，该模块主要保证 Babel 的产出是高质量的。")]),s._v(" "),n("p",[s._v("该模块主要使用 jest、git blame 等工具。")])])]),s._v(" "),n("h2",{attrs:{id:"_9-1-monorepo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-monorepo"}},[s._v("#")]),s._v(" 9.1 monorepo")]),s._v(" "),n("p",[s._v("Babel 使用 monorepo 模式进行工程管理。")]),s._v(" "),n("h3",{attrs:{id:"_9-1-1-什么是-monorepo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-1-什么是-monorepo"}},[s._v("#")]),s._v(" 9.1.1 什么是 monorepo")]),s._v(" "),n("p",[s._v("monorepo(monolithic repository)，指的是单仓库代码，将多个项目代码存储在一个仓库里。另外有一种模式是 multirepo，指的是多仓库代码（one-repository-per-module），不同的项目分布在不同的仓库里。React、Babel、Jest、Vue、Angular均采用 monorepo 进行项目管理。")]),s._v(" "),n("p",[s._v("典型的 monorepo 结构是:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("├── packages\n|   ├── pkg1\n|   |   ├── package.json\n|   ├── pkg2\n|   |   ├── package.json\n├── package.json\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("这是 Babel 源码的目录结构:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("├─ lerna.json\n├─ package.json\n└─ packages/ # 这里将存放所有子项目目录\n    ├─ README.md\n    ├─ babel-cli\n    ├─ babel-code-frame\n    ├─ babel-compat-data\n    ├─ babel-core\n    ├─ babel-generator\n    ├─ babel-helper-annotate-as-pure\n    ├─ babel-helper-builder-binary-assignment-operator-visitor\n    ├─ babel-helper-builder-react-jsx\n    ├─ ...\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("而 rollup 则采取了 multirepo 的模式:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("├─ rollup\n    ├─ package.json\n    ├─ ...\n├─ plugins\n    ├─ package.json\n    ├─ ...\n├─ awesome\n    ├─ package.json\n    ├─ ...\n├─ rollup-starter-lib\n    ├─ package.json\n    ├─ ...\n├─ rollup-plugin-babel\n    ├─ package.json\n    ├─ ...\n├─ rollup-plugin-commonjs\n    ├─ package.json\n    ├─ ...\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("h3",{attrs:{id:"_9-1-2-monorepo-的优缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-2-monorepo-的优缺点"}},[s._v("#")]),s._v(" 9.1.2 monorepo 的优缺点")]),s._v(" "),n("h3",{attrs:{id:"优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[s._v("#")]),s._v(" 优点")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("便捷的代码复用与依赖管理")]),s._v(" "),n("p",[s._v("当所有项目代码都在一个工程里，抽离可复用的代码就十分容易了。并且抽离后，如果复用的代码有改动，可以通过一些工具，快速定位受影响的子工程，进而做到子工程的版本控制。")])]),s._v(" "),n("li",[n("p",[s._v("便捷的代码重构")]),s._v(" "),n("p",[s._v("通过一些工具，monorepo 项目中的代码改动可以快速地定位出代码变更的影响范围，对整个工程进行快速的整体测试。而如果子工程分散在不同的工程分支里的话，通用代码的重构将难以触达各个子工程。")])]),s._v(" "),n("li",[n("p",[s._v("倡导开放、共享")]),s._v(" "),n("p",[s._v('monorepo 项目中，开发者可以方便地看到所有子工程，这样响应了"开放、共享"的组织文化。可以激发开发者对工程质量等维护的热情（毕竟别人看不到自己的代码，乱不乱就看自己心情了），有助于团队建立良好的技术氛围。')])])]),s._v(" "),n("h3",{attrs:{id:"缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[s._v("#")]),s._v(" 缺点")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("复杂的权限管理")]),s._v(" "),n("p",[s._v("因为所有子工程集中在一个工程里，某些子工程如果不希望对外展示的话，monorepo 的权限管理就比较难以实现了，难以锁定目标工程做独立的代码权限管理。")])]),s._v(" "),n("li",[n("p",[s._v("较高的熟悉成本")]),s._v(" "),n("p",[s._v("相对于 multirepo，monorepo 涉及各种子工程、通用依赖等，新的开发者在理解整个项目时，可能需要了解较多的信息才能入手，如通用依赖代码、各子工程功能。")])]),s._v(" "),n("li",[n("p",[s._v("较大的工程体积")]),s._v(" "),n("p",[s._v("很明显，所有子工程集成在一个工程里，代码体积会非常大，对文件存储系统等提出了较高的要求。")])]),s._v(" "),n("li",[n("p",[s._v("较高的质量风险")]),s._v(" "),n("p",[s._v("成也萧何败萧何，monorepo 提供了便捷的代码复用能力，同时，一个公用模块的某个版本有 bug 的话，很容易影响所有用到它的子工程。此时，做好高覆盖率的单元测试就比较重要了。")])])]),s._v(" "),n("h3",{attrs:{id:"选择"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#选择"}},[s._v("#")]),s._v(" 选择")]),s._v(" "),n("p",[s._v("multirepo 和 monorepo 是两种不同的理念。")]),s._v(" "),n("p",[s._v("multirepo 允许多元化发展，每个模块独立实现自己的构建、单元测试、依赖管理等。monorepo 抹平了模块间的很多差异，通过集中管理和高度集成化的工具，减少开发和沟通时的成本。monorepo 最大的问题可能就是不能管理占用空间太大的项目了。")]),s._v(" "),n("p",[s._v("所以，还是要根据项目的实际需求出发选择用哪种项目管理模式。")]),s._v(" "),n("h2",{attrs:{id:"_9-2-lerna"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-lerna"}},[s._v("#")]),s._v(" 9.2 lerna")]),s._v(" "),n("p",[s._v("http://www.febeacon.com/lerna-docs-zh-cn/routes/commands/bootstrap.html")]),s._v(" "),n("p",[s._v("lerna 是基于 git/npm/yarn 等的工作流提效工具，用于维护 monorepo。它是 Babel 开发过程中提升开发效率产出的工具。")]),s._v(" "),n("p",[s._v("lerna 本身也是一个 monorepo 的项目，并且，lerna 为 monorepo 项目提供了如下支持:")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("项目管理")]),s._v(" "),n("p",[s._v("lerna 提供了一系列命令用于 monorepo 项目初始化、添加子项目、查看项目信息等。")])]),s._v(" "),n("li",[n("p",[s._v("依赖管理")]),s._v(" "),n("p",[s._v("lerna 支持为 monorepo 项目统一管理公共依赖、自动安装各个子项目的依赖、自动创建子模块符号链接等。")])]),s._v(" "),n("li",[n("p",[s._v("版本管理")]),s._v(" "),n("p",[s._v("lerna 可以根据项目代码的变动情况，发现影响的子项目范围，在发布时提供语义化版本推荐等，极大提升了 monorepo 项目的版本管理效率。")])])]),s._v(" "),n("h3",{attrs:{id:"_9-2-1-lerna命令集"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-1-lerna命令集"}},[s._v("#")]),s._v(" 9.2.1 lerna命令集")]),s._v(" "),n("h3",{attrs:{id:"命令行列表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#命令行列表"}},[s._v("#")]),s._v(" 命令行列表")]),s._v(" "),n("p",[s._v("lerna 官网有对各种命令各种用法的详细介绍，这些命令可以分为: 项目管理、依赖管理、版本管理三大类。")]),s._v(" "),n("p",[s._v("| 分类 | 命令 | 作用 |\n| 项目管理 | "),n("code",[s._v("lerna init")]),s._v(" | 创建一个新的 monorepo 项目，或者将当前项目升级到支持 monorepo 的状态 |\n| 项目管理 | "),n("code",[s._v("lerna create")]),s._v(" | 创建一个新的 lerna 管理的包 |\n| 项目管理 | "),n("code",[s._v("lerna import")]),s._v(" | 将一个包导入到带有提交历史记录的 monorepo 项目中 |\n| 项目管理 | "),n("code",[s._v("lerna list")]),s._v(" | 列出本地包 |\n| 项目管理 | "),n("code",[s._v("lerna link")]),s._v(" | 将所有相互依赖的包符号链接在一起 |\n| 项目管理 | "),n("code",[s._v("lerna exec")]),s._v(" | 在每个包中执行任意命令 |\n| 项目管理 | "),n("code",[s._v("lerna run")]),s._v(" | 在包含该脚本中的每个包中运行 npm 脚本 |\n| 依赖管理 | "),n("code",[s._v("lerna add")]),s._v(" | 向匹配的包添加依赖关系，添加公共依赖 |\n| 依赖管理 | "),n("code",[s._v("lerna clean")]),s._v(" | 删除子项目的 node_modules |\n| 依赖管理 | "),n("code",[s._v("lerna bootstrap")]),s._v(" | 将本地包链接在一起并安装剩余的包依赖项。 |\n| 版本管理 | "),n("code",[s._v("lerna publish")]),s._v(" | 发布子项目 |\n| 版本管理 | "),n("code",[s._v("lerna version")]),s._v(" | 确认发布的版本号 |\n| 版本管理 | "),n("code",[s._v("lerna diff")]),s._v(" | 获取上次发布后所有包或某个包的代码变更情况 |\n| 版本管理 | "),n("code",[s._v("lerna changed")]),s._v(" | 列出自上次标记发布以来发生变化的本地包 |\n| 版本管理 | "),n("code",[s._v("lerna info")]),s._v(" | 打印本地环境信息 |")]),s._v(" "),n("h3",{attrs:{id:"全局配置项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全局配置项"}},[s._v("#")]),s._v(" 全局配置项")]),s._v(" "),n("p",[s._v("lerna 有一批通用参数，所有子命令均可以使用。")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("--concurrency")])]),s._v(" "),n("p",[s._v("当 lerna 将任务并行执行时，需要使用多少线程(默认为逻辑 CPU 内核数)。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna publish --concurrency "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--loglevel <silent|error|warn|success|info|verbose|silly>")])]),s._v(" "),n("p",[s._v("要报告什么级别的日志。如果失败，所有日志都写到当前工作目录中的 lerna-debug.log 中。")]),s._v(" "),n("p",[s._v("任何高于该设置的日志都会显示出来。默认值是 "),n("code",[s._v('"info"')]),s._v("。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--max-buffer <bytes>")])]),s._v(" "),n("p",[s._v("为每个底层进程调用设置的最大缓冲区长度。例如，当有人希望在运行 "),n("code",[s._v("lerna import")]),s._v(" 的同时导入包含大量提交的仓库时，就是它出场的时候了。在这种情况下，内置的缓冲区长度可能不够。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--no-progress")])]),s._v(" "),n("p",[s._v("禁用进度条。在CI环境中总是这样。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--no-sort")])]),s._v(" "),n("p",[s._v("默认情况下，所有任务都按照拓扑排序的顺序在包上执行，以尊重所讨论的包的依赖关系。在不保证 "),n("code",[s._v("lerna")]),s._v(" 调用一致的情况下，以最努力的方式打破循环。")]),s._v(" "),n("p",[s._v("如果只有少量的包邮许多依赖项，或者某些包执行的时间长得不成比例，拓扑排序可能会导致并发瓶颈。"),n("code",[s._v("--no-sort")]),s._v(" 配置项禁用排序，而是以最大并发的任意顺序执行任务。")]),s._v(" "),n("p",[s._v("如果您运行多个 "),n("code",[s._v("watch")]),s._v(" 命令，该配置项也会有所帮助。因为 "),n("code",[s._v("lerna run")]),s._v(' 将按照拓扑排序的顺序执行命令，所以在继续执行之前可能会等待某个命令。当您运行 "'),n("code",[s._v("watch")]),s._v('" 命令时会阻塞执行，因为他们通常不会结束。')])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--reject-cycles")])]),s._v(" "),n("p",[s._v("如果(在 "),n("code",[s._v("bootstrap")]),s._v("、"),n("code",[s._v("exec")]),s._v("、"),n("code",[s._v("publish")]),s._v(" 或 "),n("code",[s._v("run")]),s._v(" 中)发现循环，则立即失败。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna bootstrap --reject-cycles\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])])]),s._v(" "),n("h3",{attrs:{id:"过滤器参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#过滤器参数"}},[s._v("#")]),s._v(" 过滤器参数")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("--scope <glob>")])]),s._v(" "),n("p",[s._v("只包含名称与给定通配符匹配的包。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" --scope my-component -- "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -la\nlerna run --scope toolbar-* "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\nlerna run --scope package-1 --scope *-2 lint\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--ignore <glob>")])]),s._v(" "),n("p",[s._v("排除名称与给定通配符匹配的包。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" --ignore package-"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1,2")]),s._v(",5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  -- "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -la\nlerna run --ignore package-1  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\nlerna run --ignore package-@"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" --ignore package-3 lint\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--no-private")])]),s._v(" "),n("p",[s._v("排除私有的包。默认情况下是包含它们的。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--since [ref]")])]),s._v(" "),n("p",[s._v("只包含自指定 "),n("code",[s._v("ref")]),s._v(" 以来已经改变的包。如果没有传递 "),n("code",[s._v("ref")]),s._v("，它默认为最近的标记。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出自最新标记以来发生变化的包的内容")]),s._v("\n$ lerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" --since -- "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -la\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为自“master”以来所有发生更改的包运行测试")]),s._v("\n$ lerna run "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" --since master\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出自“某个分支”以来发生变化的所有包")]),s._v("\n$ lerna "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" --since some-branch\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("在 "),n("code",[s._v("CI")]),s._v(" 中使用时， 如果您可以获得 "),n("code",[s._v("PR")]),s._v(" 将要进入的目标分支，那么它将特别有用，因为您可以将其作为 "),n("code",[s._v("--since")]),s._v(" 配置项的 "),n("code",[s._v("ref")]),s._v("。这对于进入 "),n("code",[s._v("master")]),s._v(" 和 "),n("code",[s._v("feature")]),s._v(" 分支的 "),n("code",[s._v("PR")]),s._v(" 来说很有效。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--exclude-dependents")])]),s._v(" "),n("p",[s._v("当使用 "),n("code",[s._v("--since")]),s._v(" 运行命令时，排除所有传递的被依赖项，覆盖默认的 "),n("code",[s._v('"changed"')]),s._v(" 算法。")]),s._v(" "),n("p",[s._v("如果没有 "),n("code",[s._v("--since")]),s._v(" 该参数时无效的，会抛出错误。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--include-dependents")])]),s._v(" "),n("p",[s._v("在运行命令时包括所有传递的被依赖项，无视 "),n("code",[s._v("--scope")]),s._v("、"),n("code",[s._v("--ignore")]),s._v(" 或 "),n("code",[s._v("--since")]),s._v("。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--include-dependencies")])]),s._v(" "),n("p",[s._v("在运行命令时包括所有传递依赖项，无视 "),n("code",[s._v("--scope")]),s._v("、"),n("code",[s._v("--ignore")]),s._v(" 或 "),n("code",[s._v("--since")]),s._v("。")]),s._v(" "),n("p",[s._v("与接受 "),n("code",[s._v("--scope(bootstrap、clean、ls、run、exec)")]),s._v(" 的任何命令组合使用。确保对任何作用域的包(通过 "),n("code",[s._v("--scope")]),s._v(" 或 "),n("code",[s._v("--ignore")]),s._v(")的所有依赖项(和 "),n("code",[s._v("dev")]),s._v(" 依赖项)也进行操作。")]),s._v(" "),n("blockquote",[n("p",[s._v("注意\n这将会覆盖 "),n("code",[s._v("--scope")]),s._v(" 和 "),n("code",[s._v("--ignore")]),s._v("。\n例如，如果一个匹配了 "),n("code",[s._v("--ignore")]),s._v(" 的包被另一个正在引导的包所以来，那么它仍会照常工作。")])]),s._v(" "),n("p",[s._v('当您想要"设置"一个依赖于其他正在设置的包其中的一个包时，这是非常有用的。')]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna bootstrap --scope my-component --include-dependencies\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# my-component 及其所有依赖项将被引导")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna bootstrap --scope "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"package-*"')]),s._v(" --ignore "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"package-util-*"')]),s._v(" --include-dependencies\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 所有匹配 "package-util-*" 的包将被忽略，除非它们依赖于名称匹配 "package-*" 的包')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--include-merged-tags")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" --since --include-merged-tags -- "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -la\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("在使用 "),n("code",[s._v("--since")]),s._v(" 命令时，它包含来自合并分支的标记。这只有在从 "),n("code",[s._v("feature")]),s._v(" 分支进行大量发布时才有用，通常情况下不推荐这样做。")])])]),s._v(" "),n("h3",{attrs:{id:"命令行详解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#命令行详解"}},[s._v("#")]),s._v(" 命令行详解")]),s._v(" "),n("h4",{attrs:{id:"lerna-init"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lerna-init"}},[s._v("#")]),s._v(" "),n("code",[s._v("lerna init")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("作用")]),s._v(" "),n("p",[s._v("创建一个新的 monorepo 项目，或者将当前项目升级到支持 monorepo 的状态。")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("创建一个新的 monorepo 项目")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" lerna-project\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" lerna-project\nlerna init\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("会创建如下文件和文件夹：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("packages/\npackage.json\nlerna.json\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("将已有项目升级到支持 monorepo 的状态")]),s._v(" "),n("p",[s._v("一个项目已经执行过 "),n("code",[s._v("git init")]),s._v(" 并已有一些文件时:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("src/\npackage.json\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("执行 "),n("code",[s._v("lerna init")]),s._v("，会有如下动作:")]),s._v(" "),n("ul",[n("li",[s._v("如果 "),n("code",[s._v("package.json")]),s._v(" 中缺失 "),n("code",[s._v("lerna")]),s._v(" 的依赖声明，则优先添加到 "),n("code",[s._v("devDependencies")])]),s._v(" "),n("li",[s._v("创建 "),n("code",[s._v("lerna.json")]),s._v(" 用于存储 "),n("code",[s._v("version")]),s._v(" 等配置字段")])])])])]),s._v(" "),n("li",[n("p",[s._v("配置项")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("lerna init --independent")])]),s._v(" "),n("p",[s._v("参数 "),n("code",[s._v("--independent")]),s._v("，表示当前项目是否是独立模式，默认为非独立模式。")]),s._v(" "),n("p",[s._v("非独立模式下，lerna.json的内容为：")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"packages"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"packages/*"')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.0.0"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("子工程的版本号统一保持一致。")]),s._v(" "),n("p",[s._v("独立模式下，即用 "),n("code",[s._v("lerna init --independent")]),s._v(" 初始化项目，lerna.json 的内容为：")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"packages"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"packages/*"')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"independent"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("子工程的版本号独立维护。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("lerna init --exact")])]),s._v(" "),n("p",[s._v("默认情况下，当添加或更新 lerna 的本地版本时，"),n("code",[s._v("lerna init")]),s._v(" 将使用插入符号范围，如 "),n("code",[s._v("npm install --save-dev lerna")]),s._v("。")]),s._v(" "),n("p",[s._v("为了保留 "),n("code",[s._v("lerna 1.x")]),s._v(' 的"精确"安装行为，可以传递该参数。也可以在 '),n("code",[s._v("lerna.json")]),s._v(" 中配置以强制后续所有都执行精确匹配:")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"command"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"init"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"exact"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.0.0"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])])])])]),s._v(" "),n("li",[n("p",[s._v("原理")]),s._v(" "),n("p",[s._v("TODO")])])]),s._v(" "),n("h4",{attrs:{id:"lerna-create-name-loc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lerna-create-name-loc"}},[s._v("#")]),s._v(" "),n("code",[s._v("lerna create <name> [loc]")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("作用")]),s._v(" "),n("p",[s._v("创建一个新的 lerna 管理的包。")]),s._v(" "),n("p",[s._v("比如，在项目目录执行：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna create module1\nlerna create module2\nlerna create module3\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("项目目录会包含：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("packages/\n    module1/\n    module2/\n    module3/\npackage.json\nlerna.json\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("参数")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("<name>")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("[loc]")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--access")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--bin")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--description")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--dependencies")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--es-module")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--homepage")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--keywords")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--license")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--private")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--registry")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--tag")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--yes")])])])])])]),s._v(" "),n("h4",{attrs:{id:"lerna-import"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lerna-import"}},[s._v("#")]),s._v(" "),n("code",[s._v("lerna import")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("作用")]),s._v(" "),n("p",[s._v("将一个包导入到带有提交历史记录的 monorepo 项目中。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path-to-external-repository"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("将位于 "),n("code",[s._v("<path-to-external-repository>")]),s._v(" 处的带有提交历史记录的包导入到 "),n("code",[s._v("packages/<directory-name>")]),s._v(" 中。原始提交作者、日期和消息保存了下来。提交应用于当前 monorepo 分支。")]),s._v(" "),n("p",[s._v("这对于将预先存在的独立的包收集到 "),n("code",[s._v("lerna")]),s._v(" 仓库非常有用。每次提交都修改为相对于包目录进行更改。例如，添加 "),n("code",[s._v("package.json")]),s._v(" 的提交将改为添加 "),n("code",[s._v("packages/<directory-name>/package.json")]),s._v("。")])]),s._v(" "),n("li",[n("p",[s._v("配置项")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("lerna import --flatten")])]),s._v(" "),n("p",[s._v("当导入带有冲突合并提交的存储库时，"),n("code",[s._v("import")]),s._v(' 命令在尝试应用所有提交时将失败。用户可以使用这个标志来请求"抹平('),n("code",[s._v("flat")]),s._v(')"历史的导入，也就是说，在每次合并提交时，合并就会被引入。')]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("lerna import ~/Product --flatten\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("lerna import --dest")])]),s._v(" "),n("p",[s._v("在导入存储库时，可以根据 "),n("code",[s._v("lerna.json")]),s._v(" 中列出的目录指定目标目录。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("lerna import ~/Product --dest=utilities\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--preserve-commit")])]),s._v(" "),n("p",[s._v("每次 git 提交都有一位作者和一位提交者(每人都有一个单独的日期)。通常他们是同一个人(和日期)，但是因为 "),n("code",[s._v("lerna import")]),s._v(" 从外部存储库重新创建每个提交，提交者就变成了当前的 git 用户(和日期)。这在技术上是正确的，但可能并不可取，例如，在 Github 上，如果作者和提交者是不同的人，它就会同时显示他们，这可能会导致导入提交时的历史/职责出现混乱。")]),s._v(" "),n("p",[s._v("启用该配置项可以保留原始提交者(和提交日期)，以避免此类问题。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("lerna import ~/Product --preserve-commit\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])])])])]),s._v(" "),n("h4",{attrs:{id:"lerna-list"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lerna-list"}},[s._v("#")]),s._v(" "),n("code",[s._v("lerna list")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("作用")]),s._v(" "),n("p",[s._v("列出本地包。")])]),s._v(" "),n("li",[n("p",[s._v("使用")]),s._v(" "),n("p",[n("code",[s._v("lerna list")]),s._v(" 有很多简写方式:")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("lerna ls")]),s._v(": 和 "),n("code",[s._v("lerna list")]),s._v(" 相同")]),s._v(" "),n("li",[n("code",[s._v("lerna ll")]),s._v(": 和 "),n("code",[s._v("lerna list -l")]),s._v(" 相同")]),s._v(" "),n("li",[n("code",[s._v("lerna la")]),s._v(": 和 "),n("code",[s._v("lerna list -la")]),s._v(" 相同，显示所有的包（包括子包）")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("lerna ls\n\npackage-1\npackage-2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("在 "),n("code",[s._v("shell")]),s._v(" 中运行这些命令时，您可能会注意到 lerna 提供了额外的日志记录。请放心，它们不会污染您的命令，因为所有的日志都是按照 "),n("code",[s._v("strerr")]),s._v(" 发送的而非 "),n("code",[s._v("stdout")]),s._v("。")]),s._v(" "),n("p",[s._v("在任何情况下，你可以随时通过 "),n("code",[s._v("--loglevel silent")]),s._v(" 恢复原始的 "),n("code",[s._v("shell")]),s._v(" 显示。")])]),s._v(" "),n("li",[n("p",[s._v("配置项")]),s._v(" "),n("p",[n("code",[s._v("lerna list")]),s._v(" 命令支持过滤器参数，lerna 的 "),n("code",[s._v("@lerna/filter-options")]),s._v(" 工程描述了 lerna 支持的过滤器参数列表:")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("--json")])]),s._v(" "),n("p",[s._v("用 JSON 数组的形式展示子工程。")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"package-1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.0.0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"private"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"location"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/path/to/packages/pkg-1"')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"package-2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.0.0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"private"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"location"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/path/to/packages/pkg-2"')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--ndjson")])]),s._v(" "),n("p",[s._v("用换行分隔（"),n("code",[s._v("ndjson")]),s._v("）的方式展示子工程。")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"package-1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.0.0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"private"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"location"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/path/to/packages/pkg-1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"package-2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.0.0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"private"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"location"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/path/to/packages/pkg-2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--all, -a")])]),s._v(" "),n("p",[s._v("展示默认隐藏的私有包。")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[s._v("package"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("-1")]),s._v("\npackage"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("-2")]),s._v("\npackage"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("-3")]),s._v(" (private)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--long, -l")])]),s._v(" "),n("p",[s._v("显示扩展信息。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("lerna ls --long\npackage-1 v1.0.1 packages/pkg-1\npackage-2 v1.0.2 packages/pkg-2\n\nlerna ls -la\npackage-1 v1.0.1 packages/pkg-1\npackage-2 v1.0.2 packages/pkg-2\npackage-3 v1.0.3 packages/pkg-3 (private)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--parseable, -p")])]),s._v(" "),n("p",[s._v("显示可解析的输出，而不是竖向排列的显示。")]),s._v(" "),n("p",[s._v("默认情况下，每一行都是包的绝对路径。")]),s._v(" "),n("p",[s._v("如果新增了 "),n("code",[s._v("--long")]),s._v(" 参数，每一行的格式都是以 "),n("code",[s._v(":")]),s._v(" 分隔的 "),n("code",[s._v("<fullpath>:<name>:<version>[:flags..]")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("lerna ls --parseable\n/path/to/packages/pkg-1\n/path/to/packages/pkg-2\n\nlerna ls -pl\n/path/to/packages/pkg-1:package-1:1.0.1\n/path/to/packages/pkg-2:package-2:1.0.2\n\nlerna ls -pla\n/path/to/packages/pkg-1:package-1:1.0.1\n/path/to/packages/pkg-2:package-2:1.0.2\n/path/to/packages/pkg-3:package-3:1.0.3:PRIVATE\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--toposort")])]),s._v(" "),n("p",[s._v("按照拓扑顺序对包进行排序，而不是按目录对包进行词法排序。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('json dependencies <packages/pkg-1/package.json\n{\n"pkg-2": "file:../pkg-2"\n}\n\nlerna ls --toposort\npackage-2\npackage-1\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--graph")])]),s._v(" "),n("p",[s._v("将依赖图显示为 json 格式的邻接表。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('lerna ls --graph\n{\n    "pkg-1": [\n        "pkg-2"\n    ],\n    "pkg-2": []\n}\n\nlerna ls --graph --all\n{\n    "pkg-1": [\n        "pkg-2"\n    ],\n    "pkg-2": [\n        "pkg-3"\n    ],\n    "pkg-3": [\n        "pkg-2"\n    ]\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])])])])])]),s._v(" "),n("h4",{attrs:{id:"lerna-link"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lerna-link"}},[s._v("#")]),s._v(" "),n("code",[s._v("lerna link")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("作用")]),s._v(" "),n("p",[s._v("将所有相互依赖的包符号链接在一起。")])]),s._v(" "),n("li",[n("p",[s._v("使用")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("将当前 lerna 仓库中相互依赖的所有 lerna packages 符号链接在一起。")])]),s._v(" "),n("li",[n("p",[s._v("配置项")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("--force-local")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" --force-local\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("当使用该参数时，此标志将导致 "),n("code",[s._v("link")]),s._v(" 命令始终符号链接本地依赖项，而不考虑匹配的版本范围。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("publishConfig.directory")])]),s._v(" "),n("p",[s._v("这是一个非标准字段，它将允许您定制作为符号链接的源目录的符号链接子目录，就像使用已发布的包一样。")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"publishConfig"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"directory"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dist"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("在这个例子中，当该包连接时，"),n("code",[s._v("dist")]),s._v(" 目录将成为源目录(例如，"),n("code",[s._v("package-1/dist => node_modules/package-1")]),s._v(")。")])])])])]),s._v(" "),n("h4",{attrs:{id:"lerna-exec"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lerna-exec"}},[s._v("#")]),s._v(" "),n("code",[s._v("lerna exec")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("作用")]),s._v(" "),n("p",[s._v("在每个包中执行任意命令。")])]),s._v(" "),n("li",[n("p",[s._v("使用")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -- "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("command"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在所有包中运行命令")]),s._v("\nlerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -- "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf ./node_modules\nlerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -- protractor conf.js\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("在每个包中执行任意命令。必须使用双横线--来将虚线参数传递给派生的命令，但当所有参数都是位置时，就不是必需的了。")]),s._v(" "),n("p",[s._v("当前包的名称可以通过环境变量 "),n("code",[s._v("LERNA_PACKAGE_NAME")]),s._v(" 获取:")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -- "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" view "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LERNA_PACKAGE_NAME")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("您也可以通过环境变量 "),n("code",[s._v("LERNA_ROOT_PATH")]),s._v(" 在一个复杂的目录结构中运行一个位于根目录下的脚本:")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -- "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("node")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LERNA_ROOT_PATH")]),s._v("/scripts/some-script.js\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("配置项")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("lerna exec")]),s._v(" 接受所有的过滤器参数")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" --scope my-component -- "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -la\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("使用给定的并发(除了 "),n("code",[s._v("--parallel")]),s._v(")并行生成命令。输出是以管道形式传输的，所以并不确定。如果您想一个接一个包运行这个命令，可以这样使用:")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" --concurrency "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" -- "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -la\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--stream")])]),s._v(" "),n("p",[s._v("立即从子进程输出流，它的前缀为原始的包名。这让不同的包交叉输出成为可能。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" --stream -- babel src -d lib\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--parallel")])]),s._v(" "),n("p",[s._v("和 "),n("code",[s._v("--stream")]),s._v(" 相类似，但完全忽略并发性和拓扑顺序。它会立即在带有前缀的流输出的所有匹配包中运行给定的命令或脚本。这是在许多包上运行的长时间运行的进程(如 "),n("code",[s._v("babel src -d lib -w")]),s._v(")的首选参数。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" --parallel -- babel src -d lib -w\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("blockquote",[n("p",[s._v("注意")]),s._v(" "),n("p",[s._v("在使用 "),n("code",[s._v("--parallel")]),s._v(" 时建议限制该命令的作用域，因为生成几十个子进程可能会损害 shell 的稳定性(例如，最大文件描述符限制)。这个因人而异。")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--no-bail")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行一个命令，忽略非零(错误)退出代码")]),s._v("\nlerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" --no-bail "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("command"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("默认情况下，如果任何执行过程返回一个非零的退出代码，"),n("code",[s._v("lerna exec")]),s._v(" 将退出并报错。"),n("code",[s._v("——no-bail")]),s._v(" 可以禁用此行为，让其所有包中执行，而无视退出代码。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--no-prefix")])]),s._v(" "),n("p",[s._v("当输出为流("),n("code",[s._v("--stream")]),s._v(" 或 "),n("code",[s._v("--parallel")]),s._v(")时禁用包名前缀。该配置项应用在将结果传输到其他进程时很有用，比如编辑器插件。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--profile")])]),s._v(" "),n("p",[s._v("对命令执行进行分析，并生成性能分析文件，可以在基于 chrome 的浏览器中使用 DevTools 进行分析(URL 为："),n("code",[s._v("devtools://devtools/bundled/devtools_app.html")]),s._v(")。该分析文件显示了命令执行的时间线，其中每次执行都会分配给一个打开的槽。槽的数量由 "),n("code",[s._v("--concurrency")]),s._v(" 决定，开放槽的数量由 "),n("code",[s._v("--concurrency")]),s._v(" 减去正在进行的操作的数量决定。最终结果是对并行执行命令的可视化展示。")]),s._v(" "),n("p",[s._v("性能分析文件输出的默认位置是项目的根目录。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" --profile -- "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("command"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("Lerna 只会在启用拓扑排序(即不使用 "),n("code",[s._v("--parallel")]),s._v(" 和 "),n("code",[s._v("--no-sort")]),s._v(")时分析性能。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--profile-location <location>")])]),s._v(" "),n("p",[s._v("您可以提供一个自定义位置用于性能分析文件的输出。提供的路径是相对于当前工作目录进行解析的。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" --profile --profile-location"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("logs/profile/ -- "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("command"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])])])])]),s._v(" "),n("h4",{attrs:{id:"lerna-run"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lerna-run"}},[s._v("#")]),s._v(" "),n("code",[s._v("lerna run")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("作用")]),s._v(" "),n("p",[s._v("在包含该脚本中的每个包中运行 npm 脚本。")])]),s._v(" "),n("li",[n("p",[s._v("使用")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna run "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -- "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在所有包含 my-script 的包中运行 npm run")]),s._v("\nlerna run "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\nlerna run build\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 观察所有包和 transpile 的变化，使用流前缀输出")]),s._v("\nlerna run --parallel "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("在包含该脚本中的每个包中运行 npm 脚本，必须使用双横线 "),n("code",[s._v("--")]),s._v(" 来将虚线参数传递给给执行的脚本。")])]),s._v(" "),n("li",[n("p",[s._v("配置项")]),s._v(" "),n("p",[s._v("TODO 好像和 exec 一样。")])])]),s._v(" "),n("h4",{attrs:{id:"lerna-add"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lerna-add"}},[s._v("#")]),s._v(" "),n("code",[s._v("lerna add")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("作用")]),s._v(" "),n("p",[s._v("向匹配的包添加依赖关系，添加公共依赖。")])]),s._v(" "),n("li",[n("p",[s._v("使用")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("lerna add <package>[@version] [--dev] [--exact] [--peer]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("将本地或远程 package 作为依赖项添加到当前 "),n("code",[s._v("lerna")]),s._v(" 仓库中的包。注意，与 "),n("code",[s._v("yarn add")]),s._v(" 或 "),n("code",[s._v("npm install")]),s._v(" 相比，一次只能添加一个包。")]),s._v(" "),n("p",[s._v("运行时，该命令将：")]),s._v(" "),n("ul",[n("li",[s._v("向每个适用的包添加 "),n("code",[s._v("package")]),s._v("。适用是指在作用域内且不是 "),n("code",[s._v("package")]),s._v(" 的包")]),s._v(" "),n("li",[s._v("对 "),n("code",[s._v("manifest")]),s._v(" 文件("),n("code",[s._v("package.json")]),s._v(")进行更改的引导包")]),s._v(" "),n("li",[s._v("如果没有提供 "),n("code",[s._v("version")]),s._v(" 指示符，其默认值为 "),n("code",[s._v("latestdist-tag")]),s._v("，和 "),n("code",[s._v("npm install")]),s._v(" 一样")])])]),s._v(" "),n("li",[n("p",[s._v("配置项")]),s._v(" "),n("p",[n("code",[s._v("lerna add")]),s._v(" 接受所有的过滤器参数。")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("lerna add --dev")])]),s._v(" "),n("p",[s._v("将新包添加到 "),n("code",[s._v("devDependencies")]),s._v("而不是 "),n("code",[s._v("dependencies")]),s._v("。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("lerna add --exact")])]),s._v(" "),n("p",[s._v("为新包添加一个确切的版本(例如，"),n("code",[s._v("1.0.1")]),s._v(")，而不是默认的^语义化版本号范围(例如，"),n("code",[s._v("^1.0.1")]),s._v(")。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("lerna add --peer")])]),s._v(" "),n("p",[s._v("将新包添加到 "),n("code",[s._v("peerDependencies")]),s._v(" 而不是 "),n("code",[s._v("dependencies")]),s._v("。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("lerna add --registry <url>")])]),s._v(" "),n("p",[s._v("使用自定义注册表安装目标包。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("lerna add --no-bootstrap")])]),s._v(" "),n("p",[s._v("跳过链式的 "),n("code",[s._v("lerna bootstrap")]),s._v("。")])])])]),s._v(" "),n("li",[n("p",[s._v("示例")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 module-1 的包添加到以“prefix-”为前缀文件夹中的包中")]),s._v("\nlerna "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" module-1 packages/prefix-*\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 module-1 安装到 module-2")]),s._v("\nlerna "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" module-1 --scope"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("module-2\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 module-1 安装到 module-2 的 devDependencies")]),s._v("\nlerna "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" module-1 --scope"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("module-2 --dev\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 module-1 安装到 module-2 的 peerDependencies")]),s._v("\nlerna "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" module-1 --scope"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("module-2 --peer\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 module-1 安装到除了 module-1 的所有模块")]),s._v("\nlerna "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" module-1\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在所有模块中安装 babel-core")]),s._v("\nlerna "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" babel-core\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[s._v("比如，执行 "),n("code",[s._v("lerna add vue")]),s._v(" 的话，会默认在各个子项目中添加 vue，此时各个子项目均会安装一遍 vue。")]),s._v(" "),n("p",[s._v("如果不希望子项目重复安装，可以在项目 lerna.json 添加字段：")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"command"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"bootstrap"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"hoist"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("此时，vue 作为依赖会被安装在项目根目录，而子项目中的 package.json 也会声明该依赖。")])])]),s._v(" "),n("h4",{attrs:{id:"lerna-clean"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lerna-clean"}},[s._v("#")]),s._v(" "),n("code",[s._v("lerna clean")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("作用")]),s._v(" "),n("p",[s._v("删除子项目的 node_modules。")])]),s._v(" "),n("li",[n("p",[s._v("参数")]),s._v(" "),n("p",[n("code",[s._v("lerna clearn")]),s._v(" 接受所有的过滤器参数，以及 "),n("code",[s._v("--yes")]),s._v("。")]),s._v(" "),n("p",[n("code",[s._v("lerna clean")]),s._v(" 不会从根 "),n("code",[s._v("node_modules")]),s._v(" 目录中删除模块，即使您使用了 "),n("code",[s._v("--hoist")]),s._v("。")])])]),s._v(" "),n("h4",{attrs:{id:"lerna-bootstrap"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lerna-bootstrap"}},[s._v("#")]),s._v(" "),n("code",[s._v("lerna bootstrap")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("作用")]),s._v(" "),n("p",[s._v("将本地包链接在一起并安装剩余的包依赖项。")])]),s._v(" "),n("li",[n("p",[s._v("使用")]),s._v(" "),n("p",[s._v("引导当前 "),n("code",[s._v("lerna")]),s._v(" 仓库中的包。安装其所有依赖项并连接所有的交叉依赖。")]),s._v(" "),n("p",[s._v("在运行时，该命令:")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("npm install")]),s._v(" 每个包所有的外部依赖")]),s._v(" "),n("li",[s._v("将所有相互依赖的 "),n("code",[s._v("lerna")]),s._v(" "),n("code",[s._v("package")]),s._v(" 符号链接在一起（symlink）")]),s._v(" "),n("li",[s._v("在所有引导包中运行 "),n("code",[s._v("npm run prepublish")]),s._v("(除非传入了 "),n("code",[s._v("--ignore-prepublish")]),s._v(")")]),s._v(" "),n("li",[s._v("在所有引导包中运行 "),n("code",[s._v("npm run prepare")])])])]),s._v(" "),n("li",[n("p",[s._v("配置项")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("lerna bootstrap")]),s._v(" 接受所有过滤器属性")])]),s._v(" "),n("li",[n("p",[s._v("通过将额外的参数放在 "),n("code",[s._v("--")]),s._v(" 之后来传递给 npm 客户端")]),s._v(" "),n("p",[n("code",[s._v("lerna bootstrap -- --production --no-optional")])]),s._v(" "),n("p",[s._v("也可以在 lerna.json 中这样配置:")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"npmClient"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yarn"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"npmClientArgs"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--production"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--no-optional"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--hoist [glob]")])]),s._v(" "),n("p",[s._v("在仓库根目录安装与 "),n("code",[s._v("glob")]),s._v(" 匹配的外部依赖，这样所有包都可以使用他们。这些依赖的任何二进制文件都将链接到依赖包的 "),n("code",[s._v("node_modules/.bin/")]),s._v(" 目录中，这样 "),n("code",[s._v("npm")]),s._v(" 脚本就可以使用它们了。如果传了该参数但却没有设置 "),n("code",[s._v("glob")]),s._v("，则默认为 "),n("code",[s._v("**")]),s._v("(提升所有)。该配置项仅影响 "),n("code",[s._v("bootstrap")]),s._v(" 命令。")]),s._v(" "),n("blockquote",[n("p",[s._v("如果包依赖于不同版本的外部依赖项，则会将最常用的版本提升，并发出警告\n"),n("code",[s._v("--hoist")]),s._v(" 与 "),n("code",[s._v("file")]),s._v(": 标识符不兼容，请只使用一个")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--strict")])]),s._v(" "),n("p",[s._v("当和 "),n("code",[s._v("hoist")]),s._v(" 一起使用时，会抛出一个错误，并在发出版本警告后停止引导。如果没有 "),n("code",[s._v("hoist")]),s._v(" 或没有版本警告则无效果。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--nohoist [glob]")])]),s._v(" "),n("p",[s._v("不要在仓库根目录安装与 "),n("code",[s._v("glob")]),s._v(" 匹配的外部依赖项。该参数可以用来选择不提升某些依赖项。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna bootstrap --hoist --nohoist"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("babel-*\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--ignore")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna bootstrap --ignore component-*\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("该参数与 "),n("code",[s._v("bootstrap")]),s._v(" 命令一起使用时，也可以在 lerna.json 的 "),n("code",[s._v("command.bootstrap.ignore")]),s._v(" 中设置。命令行中设置该参数优先于 "),n("code",[s._v("lerna.json")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.0.0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"command"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"bootstrap"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"ignore"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"component-*"')]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("blockquote",[n("p",[s._v("通配符匹配的是 "),n("code",[s._v("package.json")]),s._v(" 中定义的包名，而不是与包所在的目录名。")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--ignore-prepublish")])]),s._v(" "),n("p",[s._v("跳过在引导包中默认运行的预发布生命周期脚本。注意，这个生命周期是已废弃的，可能会在 "),n("code",[s._v("lerna")]),s._v(" 的下一个主要版本中被删除。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--ignore-scripts")])]),s._v(" "),n("p",[s._v("跳过在引导包中正常运行的生命周期脚本("),n("code",[s._v("prepare")]),s._v(" 等等)。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--registry <url>")])]),s._v(" "),n("p",[s._v("当使用该参数时，转发的 npm 命令将为您的包使用指定的注册表。")]),s._v(" "),n("p",[s._v("如果您不想在使用私有注册表时在所有 "),n("code",[s._v("package.json")]),s._v(" 文件中分别设置注册表配置，那么这就是它出场的时候了。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--npm-client <client>")])]),s._v(" "),n("p",[s._v("它必须是一个知道如何安装 "),n("code",[s._v("npm")]),s._v(" 包依赖的可执行文件。默认的 "),n("code",[s._v("--npm-client")]),s._v(" 是 "),n("code",[s._v("npm")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna bootstrap --npm-client"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("yarn\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("也可在lerna.json中配置:")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"npmClient"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yarn"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--use-workspaces")])]),s._v(" "),n("p",[s._v("支持和 yarn 工作区 (从 yarn@0.27+ 版本开始)数组中的值是 lerna 将在其中委托操作给 Yarn 的命令(目前仅在 "),n("code",[s._v("bootstrap")]),s._v(" 中可用)。如果 "),n("code",[s._v("--use-workspaces")]),s._v(" 为真，那么 packages 将被 package.json/workspaces 的值覆盖。")]),s._v(" "),n("p",[s._v("也可在 lerna.json 中配置:")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"npmClient"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yarn"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"useWorkspaces"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("根级别的 package.json 还必须包含一个工作区数组:")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"private"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"devDependencies"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"lerna"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^2.2.0"')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"workspaces"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"packages/*"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("这个列表与 lerna 的 package 配置大体上类似(通过 package.json 用通配符匹配的目录列表)，只是它不支持递归的通配符匹配("),n("code",[s._v("**")]),s._v("，也叫 "),n("code",[s._v('"globstars"')]),s._v(")。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--no-ci")])]),s._v(" "),n("p",[s._v("当使用默认的 "),n("code",[s._v("--npm-client")]),s._v("，"),n("code",[s._v("lerna bootstrap")]),s._v(" 将调用 "),n("code",[s._v("npm ci")]),s._v(" 而非在 CI 环境中调用 "),n("code",[s._v("npm install")]),s._v("。若要禁用此行为，可以使用 "),n("code",[s._v("--no-ci")]),s._v(":")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna bootstrap --no-ci\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("若要在本地安装期间强制执行(在本地安装中不会自动启用)，请使用 "),n("code",[s._v("--ci")]),s._v(":")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna bootstrap --ci\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v('这对于"干净地"重新安装或重新克隆后的初次安装非常有用。')])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--force-local")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna bootstrap --force-local\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("当使用该参数时，它会让 "),n("code",[s._v("bootstrap")]),s._v(" 命令始终符号链接本地依赖项，而不考虑匹配的版本范围。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("publishConfig.directory")])]),s._v(" "),n("p",[s._v("这个非标准字段允许您自定义符号链接子目录，它会作为符号链接的源目录，就像使用已发布的包一样。")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"publishConfig"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"directory"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dist"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("在本例中，当这个包被引导并链接时，dist 目录将是源目录(例如 "),n("code",[s._v("package-1/dist => node_modules/package-1")]),s._v(")。")])])])]),s._v(" "),n("li",[n("p",[s._v("原理")]),s._v(" "),n("p",[s._v("TODO")])])]),s._v(" "),n("h4",{attrs:{id:"lerna-publish"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lerna-publish"}},[s._v("#")]),s._v(" "),n("code",[s._v("lerna publish")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("作用")]),s._v(" "),n("p",[s._v("在当前项目中发布包。")])]),s._v(" "),n("li",[n("p",[s._v("使用")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna publish              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发布自上一个版本以来发生了变化的包")]),s._v("\nlerna publish from-git     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发布当前提交中标记的包")]),s._v("\nlerna publish from-package "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发布注册表中没有最新版本的包")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("在运行时，该命令做了下面几件事中的一个：")]),s._v(" "),n("ul",[n("li",[s._v("发布自上一个版本以来更新的包(背后调用了 "),n("code",[s._v("lerna version")]),s._v(")。这是 lerna 2.x 版本遗留下来的。")]),s._v(" "),n("li",[s._v("发布在当前提交中标记的包("),n("code",[s._v("from-git")]),s._v(")。")]),s._v(" "),n("li",[s._v("发布在最新提交时注册表中没有版本的包("),n("code",[s._v("from-package")]),s._v(")。")]),s._v(" "),n("li",[s._v('发布在前一次提交中更新的包(及其依赖项)的"金丝雀('),n("code",[s._v("canary")]),s._v(')"版。')])]),s._v(" "),n("p",[s._v("Lerna 永远不会发布标记为 "),n("code",[s._v("private")]),s._v(" 的包（package.json 中的 "),n("code",[s._v('"private": true')]),s._v("）。")]),s._v(" "),n("p",[s._v("在所有的发布过程中，都有生命周期在根目录和每个包中运行(除非使用了 "),n("code",[s._v("--ignore-scripts")]),s._v(")。")])]),s._v(" "),n("li",[n("p",[s._v("位置")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("from-git")])]),s._v(" "),n("p",[s._v("除了 "),n("code",[s._v("lerna version")]),s._v(" 支持的语义化版本关键字外，"),n("code",[s._v("lerna publish")]),s._v(" 也支持 "),n("code",[s._v("from-git")]),s._v(" 关键字。这将会识别 "),n("code",[s._v("lerna version")]),s._v(" 标记的包，并将它们发布到 npm。这在您希望手动增加版本的 CI 场景中非常有用，但要通过自动化过程一直地发布包内容本身。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("from-package")])]),s._v(" "),n("p",[s._v("与 from-git 关键字类似，只是要发布的包列表是通过检查每个 package.json 确定的，并且要确定注册表中是否存在任意版本的包。注册表中没有的任何版本都将被发布。当前一个 "),n("code",[s._v("lerna publish")]),s._v(" 未能将所有包发布到注册表时，就是他发挥的时候了。")])])])]),s._v(" "),n("li",[n("p",[s._v("生命周期")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("// prepublish:      在打包和发布包之前运行。\n// prepare:         在打包和发布包之前运行，在 prepublish 之后，prepublishOnly 之前。\n// prepublishOnly:  在打包和发布包之前运行，只在 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" publish 时运行。\n// prepack:         只在源码压缩打包之前运行。\n// postpack:        在源码压缩打包生成并移动到最终目的地后运行。\n// publish:         在包发布后运行。\n// postpublish:     在包发布后运行。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("Lerna 将在 "),n("code",[s._v("lerna publish")]),s._v(" 期间运行 npm 生命周期脚本，顺序如下:")]),s._v(" "),n("ul",[n("li",[s._v("如果采用没有指定版本，则运行所有版本生命周期脚本")]),s._v(" "),n("li",[s._v("如果可用，在根目录运行 prepublish 生命周期。")]),s._v(" "),n("li",[s._v("在根目录中运行 prepare 生命周期。")]),s._v(" "),n("li",[s._v("在根目录中运行 prepublishOnly 生命周期。")]),s._v(" "),n("li",[s._v("在根目录运行 prepack 生命周期。")]),s._v(" "),n("li",[s._v("对于每个更改的包，按照拓扑顺序(所有依赖项在依赖关系之前):\n"),n("ul",[n("li",[s._v("如果可用，运行 prepublish 生命周期。")]),s._v(" "),n("li",[s._v("运行 prepare 生命周期。")]),s._v(" "),n("li",[s._v("运行 prepublishOnly 生命周期。")]),s._v(" "),n("li",[s._v("运行 prepack 生命周期。")]),s._v(" "),n("li",[s._v("通过 JS API 在临时目录中创建源码压缩包。")]),s._v(" "),n("li",[s._v("运行 postpack 生命周期。")])])]),s._v(" "),n("li",[s._v("在根目录运行 postpack 生命周期。")]),s._v(" "),n("li",[s._v("对于每个更改的包，按照拓扑顺序(所有依赖项在依赖关系之前):\n"),n("ul",[n("li",[s._v("通过 JS API 发布包到配置的注册表。")]),s._v(" "),n("li",[s._v("运行 publish 生命周期。")]),s._v(" "),n("li",[s._v("运行 postpublish 生命周期。")])])]),s._v(" "),n("li",[s._v("在根目录中运行publish生命周期。")]),s._v(" "),n("li",[s._v("为了避免递归调用，不要使用这个根生命周期来运行 lerna publish。")]),s._v(" "),n("li",[s._v("在根目录中运行 postpublish 生命周期。")]),s._v(" "),n("li",[s._v("如果可用，将临时的 dist-tag 更新到最新")])])]),s._v(" "),n("li",[n("p",[s._v("配置项")]),s._v(" "),n("p",[n("code",[s._v("lerna publish")]),s._v(" 支持 "),n("code",[s._v("lerna version")]),s._v(" 提供的所有配置项，除了以下这些:")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("--canary")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna publish --canary\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1.0.0 => 1.0.1-alpha.0+${SHA} of packages changed since the previous commit")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a subsequent canary publish will yield 1.0.1-alpha.1+${SHA}, etc")]),s._v("\n\nlerna publish --canary --preid beta\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1.0.0 => 1.0.1-beta.0+${SHA}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The following are equivalent:")]),s._v("\nlerna publish --canary minor\nlerna publish --canary preminor\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1.0.0 => 1.1.0-alpha.0+${SHA}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("当使用该标志运行时，"),n("code",[s._v("lerna publish")]),s._v(" 以更粒度的方式(每次提交)来发布包。在发布到 npm 之前，它会通过当前的 version 创建新的 version 标记，升级到下一个小版本(minor)，添加传入的 meta 后缀(默认为 alpha)并且附加当前的 git sha 码（例如："),n("code",[s._v("1.0.0")]),s._v(" 变成 "),n("code",[s._v("1.1.0-alpha.0+81e3b443")]),s._v("）。")]),s._v(" "),n("p",[s._v("如果您已经从 "),n("code",[s._v("CI")]),s._v(" 中的多个活动开发分支发布了 "),n("code",[s._v("canary")]),s._v(" 版本，那么建议在每个分支的基础上定制 "),n("code",[s._v("--preid")]),s._v(" 和 "),n("code",[s._v("--dist-tag <tag>")]),s._v(" 以避免版本冲突。")]),s._v(" "),n("blockquote",[n("p",[s._v("该参数是需要发布每次提交版或每日构建版时使用。")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--contents <dir>")])]),s._v(" "),n("p",[s._v("要发布的子目录。必定应用于所有包，且必须包含 package.json 文件。包的生命周期仍然在原来的叶子目录中运行。您应当使用其中的一个生命周期("),n("code",[s._v("prepare")]),s._v("、"),n("code",[s._v("prepublishOnly")]),s._v(" 或 "),n("code",[s._v("prepack")]),s._v(")来创建子目录等等。")]),s._v(" "),n("p",[s._v("如果您不喜欢非必要的复杂发布，这将给您带来乐趣。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna publish --contents dist\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发布每个由 Lerna 管理的叶子包的 dist 文件夹")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("blockquote",[n("p",[s._v("注意\n您应该等到 "),n("code",[s._v("postpublish")]),s._v(" 生命周期阶段(根目录或叶目录)才清理这个生成的子目录，因为生成的 package.json 是在包上传期间(在 "),n("code",[s._v("postpack")]),s._v(" 之后)使用的。")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--dist-tag <tag>")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna publish --dist-tag next\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("当带有该参数时，"),n("code",[s._v("lerna publish")]),s._v(" 将使用给定的 npm "),n("code",[s._v("dist-tag")]),s._v("(默认为 "),n("code",[s._v("latest")]),s._v(") 发布到 npm。")]),s._v(" "),n("p",[s._v("该配置项可用于在非 "),n("code",[s._v("latest")]),s._v(" 的 "),n("code",[s._v("dist-tag")]),s._v(" 下发布预发布或 "),n("code",[s._v("beta")]),s._v(" 版本，帮助用户免于自动升级到预发布质量的代码。")]),s._v(" "),n("blockquote",[n("p",[s._v("注意\n"),n("code",[s._v("latest")]),s._v(" 标记是用户运行 "),n("code",[s._v("npm install my-package")]),s._v(" 时使用的标记。要安装不同的标记，用户可以运行 "),n("code",[s._v("npm install my-package@prerelease")]),s._v("。")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--git-head <sha>")])]),s._v(" "),n("p",[s._v("在打包压缩时，显式地在 manifest 上设置为 gitHead，该操作只允许通过 "),n("code",[s._v("from-package")]),s._v(" 位置进行。")]),s._v(" "),n("p",[s._v("举个例子，当我们从 AWS CodeBuild (这里 "),n("code",[s._v("git")]),s._v(" 用不了)发布时，您可以使用该配置项传递适当的环境变量来作为该包的元数据。")]),s._v(" "),n("p",[n("code",[s._v("lerna publish")]),s._v(" 时，只会更新发生变更的子项目的版本号，如果没有特殊制定，未变更的则不会更新版本号。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna publish from-package --git-head "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CODEBUILD_RESOLVED_SOURCE_VERSION}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("blockquote",[n("p",[s._v("在所有其他情况下，该值是从本地的 git 命令派生而成的。")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--graph-type <all|dependencies>")])]),s._v(" "),n("p",[s._v("设置在构建包依赖图时使用哪种依赖关系。默认值是 "),n("code",[s._v("dependencies")]),s._v("，因此只包括包的 package.json 的 "),n("code",[s._v("dependencies")]),s._v("部分中列出的包。若设置为 all，则在构建包依赖图和决定拓扑顺序时会包括 "),n("code",[s._v("dependencies")]),s._v(" 和 "),n("code",[s._v("devDependencies")]),s._v("。")]),s._v(" "),n("p",[s._v("在使用传统的 peer + dev 依赖对时，应该将此项配置为 "),n("code",[s._v("all")]),s._v("，以便 peer 可以总在其依赖项之前发布。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna publish --graph-type all\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("通过 lerna.json 来配置:")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"command"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"publish"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"graphType"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"all"')]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--ignore-scripts")])]),s._v(" "),n("p",[s._v("这个参数会让 "),n("code",[s._v("lerna publish")]),s._v(" 在发布期间禁用运行的生命周期脚本。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--ignore-prepublish")])]),s._v(" "),n("p",[s._v("这个参数会让 "),n("code",[s._v("lerna publish")]),s._v(" 在发布期间禁用已废弃的 "),n("code",[s._v("prepublish")]),s._v(" 脚本。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--legacy-auth")])]),s._v(" "),n("p",[s._v("当您发布需要身份验证但使用内部托管的NPM注册表时，该注册表只使用旧 Base64 版本的 "),n("code",[s._v("username:password")]),s._v("。这与 NPM publish 的 "),n("code",[s._v("_auth")]),s._v(" 标志相同。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna publish --legacy-auth aGk6bW9t\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--no-git-reset")])]),s._v(" "),n("p",[s._v("默认情况下，"),n("code",[s._v("lerna publish")]),s._v(" 确保任何对工作树的更改都会被重置。")]),s._v(" "),n("p",[s._v("为了避免这种情况，可以设置 "),n("code",[s._v("——no-git-reset")]),s._v("。当作为 CI 流程的一部分与 "),n("code",[s._v("——canary")]),s._v(" 一起使用时，这一点特别有用。例如，已经被替换的 package.json 版本号可能需要在随后的 CI 流程步骤中使用(比如 Docker 构建)。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna publish --no-git-reset\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--no-granular-pathspec")])]),s._v(" "),n("p",[s._v("默认情况下，"),n("code",[s._v("lerna publish")]),s._v(" 将尝试(如果启用)只 "),n("code",[s._v("git checkout")]),s._v(" 在发布过程中临时修改的叶子包清单。这相当于 "),n("code",[s._v("git checkout -- packages/*/package.json")]),s._v("，但是精确地定制了变化。")]),s._v(" "),n("p",[s._v("如果您确实知道您需要不同的行为，那么您就会理解：通过 "),n("code",[s._v("--no-granular-pathspec")]),s._v(" 会让 git 命令执行的 "),n("code",[s._v("git checkout -- .")]),s._v("。通过选择这个路径规范，您必须有意忽略所有未版本化的内容。")]),s._v(" "),n("p",[s._v("该项最好在 lerna.json 中配置，否则会原地去世的：")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"independent"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"granularPathspec"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("根级配置是有意为之，因为它还包括了 "),n("code",[s._v("lerna version")]),s._v(" 中的同名配置项。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--no-verify-access")])]),s._v(" "),n("p",[s._v("默认情况下，lerna 将严重登录的 npm 用户对即将发布的包的访问权限。设置该参数将禁用该验证。")]),s._v(" "),n("p",[s._v("如果您使用的是不支持 "),n("code",[s._v("npm access ls-packages")]),s._v(" 的第三方注册表，则需要设置它(或在 lerna.json 中设置 "),n("code",[s._v("command.publish.verifyAccess")]),s._v(" 为 "),n("code",[s._v("false")]),s._v(")。")]),s._v(" "),n("blockquote",[n("p",[s._v("请小心使用")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--otp")])]),s._v(" "),n("p",[s._v("当发布需要双重身份验证的包时，您可以使用 "),n("code",[s._v("——otp")]),s._v(" 指定一次性密码:")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna publish --otp "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("123456")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("blockquote",[n("p",[s._v("请注意\n一次性密码在生成后 30 秒内过期。如果它在发布操作期间到期，提示符将在继续之前请求更新后的值。")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--preid")])]),s._v(" "),n("p",[s._v("和同名的 "),n("code",[s._v("lerna version")]),s._v(" 配置项不同，该配置项仅适用于 "),n("code",[s._v("--canary")]),s._v(" 版本计算。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna publish --canary\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 举例，使用下一个语义化预发布版本")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1.0.0 => 1.0.1-alpha.0")]),s._v("\n\nlerna publish --canary --preid next\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 举例，使用指定的预发布标识符来标识下一个语义化预发布版本")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1.0.0 => 1.0.1-next.0")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("当使用该参数运行时，"),n("code",[s._v("lerna publish --canary")]),s._v(" 将使用指定的 "),n("code",[s._v("prerelease")]),s._v(" 标识符递增 "),n("code",[s._v("premajor")]),s._v("、"),n("code",[s._v("preminor")]),s._v("、"),n("code",[s._v("prepatch")]),s._v(" 或 "),n("code",[s._v("prerelease")]),s._v(" 语义化版本。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--pre-dist-tag <tag>")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna publish --pre-dist-tag next\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("除了只适用于与预发行版本一起发布的软件包外，它和 "),n("code",[s._v("--dist-tag")]),s._v(" 并无二致。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--registry <url>")])]),s._v(" "),n("p",[s._v("当使用该参数运行时，转发的 npm 命令将为您的包使用指定 url 的注册表。")]),s._v(" "),n("p",[s._v("如果您不想在使用私有注册表时在所有 package.json 文件中分别设置注册表配置，那就是它出场的时候。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--tag-version-prefix")])]),s._v(" "),n("p",[s._v("配置项项允许提供自定义前缀来替代默认的 "),n("code",[s._v("v")]),s._v(":")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 本地")]),s._v("\nlerna version --tag-version-prefix"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CI")]),s._v("\nlerna publish from-git --tag-version-prefix"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("您也可以在 lerna.json 中进行配置，对这两个命令也同样适用:")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"tagVersionPrefix"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"packages"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"packages/*"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"independent"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--temp-tag")])]),s._v(" "),n("p",[s._v("当传递了该参数时，他将会改变默认的发布过程，首先将所有更改过的包发布到一个临时的 "),n("code",[s._v("dist-tag")]),s._v("("),n("code",[s._v("lerna-temp")]),s._v(")中，然后将新版本移动到由 "),n("code",[s._v("--dist-tag")]),s._v(" 配置的 "),n("code",[s._v("dist-tag")]),s._v(" 中(默认值 "),n("code",[s._v("latest")]),s._v(")。")]),s._v(" "),n("p",[s._v("这通常是没有必要的，因为 Lerna 在默认情况下会按照拓扑顺序(所有依赖项优先)来发布包。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--yes")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna publish --canary --yes\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 跳过“您确定要发布上述更改吗?”")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("当使用此标志运行时，lerna publish 将跳过所有确认提示。在持续集成(CI)中用于自动回答发布确认提示。")])]),s._v(" "),n("li",[n("p",[s._v("每个包的配置")]),s._v(" "),n("p",[s._v("叶子包可以可以配置特殊的 "),n("code",[s._v("publishConfig")]),s._v("，在某些情况下可以改变 "),n("code",[s._v("lerna publish")]),s._v(" 的行为。")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("publishConfig.access")])]),s._v(" "),n("p",[s._v("要发布具有作用域的包(如 "),n("code",[s._v("@mycompany/rocks")]),s._v(")，您必须设置 "),n("code",[s._v("access")]),s._v(":")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"publishConfig"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"access"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"public"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("如果把该字段设置到无作用域的包上，那么它会失败的。")]),s._v(" "),n("li",[s._v('如果您希望限定范围的包保持私有状态(即"'),n("code",[s._v("restricted")]),s._v('")，则无需设置该值。')])]),s._v(" "),n("blockquote",[n("p",[s._v('注意：这与在叶子包中设置 "'),n("code",[s._v("private:true")]),s._v('" 不一样。如果设置了 '),n("code",[s._v("private")]),s._v(" 字段，那么在任何情况下都不会发布该包。")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("publishConfig.registry")])]),s._v(" "),n("p",[s._v("您可以通过设置 registry 在每个包上定制注册表。")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"publishConfig"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"registry"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://my-awesome-registry.com/"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("传入 "),n("code",[s._v("--registry")]),s._v(" 可以应用到全局，其实在某些情况下会起到反效果。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("publishConfig.tag")])]),s._v(" "),n("p",[s._v("您可以通过设置tag来定制每个包的 "),n("code",[s._v("dist-tag")]),s._v(":")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"publishConfig"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"tag"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"flippin-sweet"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("传入 "),n("code",[s._v("--dist-tag")]),s._v(" 将会覆盖该值。")]),s._v(" "),n("li",[s._v("如果同时传入了 "),n("code",[s._v("--canary")]),s._v(" 则该值会被忽略。")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("publishConfig.directory")])]),s._v(" "),n("p",[s._v("这个非标准字段允许您定制已发布的子目录，就像 "),n("code",[s._v("--contents")]),s._v(" 一样，但它是以每个包为基础的。所有其他关于 "),n("code",[s._v("--contents")]),s._v(" 的内容仍然适用。")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"publishConfig"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"directory"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dist"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])])])])])])]),s._v(" "),n("h4",{attrs:{id:"lerna-version"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lerna-version"}},[s._v("#")]),s._v(" "),n("code",[s._v("lerna version")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("作用")]),s._v(" "),n("p",[s._v("更改自上次发布以来的包版本号。")])]),s._v(" "),n("li",[n("p",[s._v("使用")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna version "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(".1 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显式指定")]),s._v("\nlerna version patch "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语义化关键字")]),s._v("\nlerna version       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据提示选择")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("在运行时，该命令执行以下操作:")]),s._v(" "),n("ul",[n("li",[s._v("标识自上一个版本以来更新的包。")]),s._v(" "),n("li",[s._v("提示输入新版本。")]),s._v(" "),n("li",[s._v("修改包的元数据，在根目录和每个包当中运行适当的生命周期脚本。")]),s._v(" "),n("li",[s._v("提交这些更改并打上标记。")]),s._v(" "),n("li",[s._v("推动到 git 远程服务器。")])])]),s._v(" "),n("li",[n("p",[s._v("位置")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("语义化版本号")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna version "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("major "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" minor "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" patch "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" premajor "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" preminor "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" prepatch "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" prerelease"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用下一个语义化版本号，然后跳过“为…选择一个新版本”的提示。")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("当传递位置参数时，"),n("code",[s._v("lerna version")]),s._v(" 将跳过版本选择的提示问题并根据关键字增加版本号。当然仍然需要使用 "),n("code",[s._v("--yes")]),s._v(" 来避免所有的问题。")])]),s._v(" "),n("li",[n("p",[s._v("预发布")]),s._v(" "),n("p",[s._v("如果你有一个预发布版本号的软件包(例如 "),n("code",[s._v("2.0.0-beta.3")]),s._v(")，并且你运行了 "),n("code",[s._v("lerna version")]),s._v(" 和一个非预先发布的版本("),n("code",[s._v("major")]),s._v("、"),n("code",[s._v("minor")]),s._v("或"),n("code",[s._v("patch")]),s._v(")，它将会发布那些之前发布的软件包以及自上次发布以来已经改变的软件包。")]),s._v(" "),n("p",[s._v("对于使用常规提交的项目，使用以下标志进行预发行管理：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("--conventional-prerelease")]),s._v(": 将当前更改作为预发行版本发布。")]),s._v(" "),n("li",[n("code",[s._v("--conventional-graduate")]),s._v(": 将预发布版本的包升级为稳定版本。")])]),s._v(" "),n("p",[s._v("如果不使用上面的参数运行 "),n("code",[s._v("lerna version --conventional-commits")]),s._v("，则只有在版本已经在 "),n("code",[s._v("prerelease")]),s._v(" 中时，才会将当前更改作为 "),n("code",[s._v("prerelease")]),s._v(" 释放。")])])])]),s._v(" "),n("li",[n("p",[s._v("生命周期")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("// preversion:  在设置版本号之前运行.\n// version:     在设置版本号之后，提交之前运行.\n// postversion: 在设置版本号之后，提交之后运行.\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("lerna将在"),n("code",[s._v("lerna version")]),s._v("期间运行npm生命周期脚本：")]),s._v(" "),n("ul",[n("li",[s._v("侦测更改的包，选择版本号进行覆盖。")]),s._v(" "),n("li",[s._v("在根目录运行 preversion。")]),s._v(" "),n("li",[s._v("对于每个更改的包，按照拓扑顺序(所有依赖项在依赖关系之前):\n"),n("ul",[n("li",[s._v("运行 preversion 生命周期。")]),s._v(" "),n("li",[s._v("更新 package.json 中的版本。")]),s._v(" "),n("li",[s._v("运行 version 生命周期。")])])]),s._v(" "),n("li",[s._v("在根目录运行 version 生命周期。")]),s._v(" "),n("li",[s._v("如果可用，将更改文件添加到索引。")]),s._v(" "),n("li",[s._v("如果可用创建提交和标记。")]),s._v(" "),n("li",[s._v("对于每个改变包，按照词法顺序(根据目录结构的字母顺序):\n"),n("ul",[n("li",[s._v("运行 postversion 生命周期。")])])]),s._v(" "),n("li",[s._v("在根目录运行 postversion。")]),s._v(" "),n("li",[s._v("如果可用推动提交和标记到远程服务器。")]),s._v(" "),n("li",[s._v("如果可用创建发布。")])])]),s._v(" "),n("li",[n("p",[s._v("配置项")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("--allow-branch <glob>")])]),s._v(" "),n("p",[s._v("匹配启用了 "),n("code",[s._v("lerna version")]),s._v(" 的 git 分支的白名单。在 lerna.json 中配置它是最简单的(我们也这么推荐)，但是也可以将它作为 CLI 配置项传入进去。")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"command"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"allowBranch"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master"')]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("使用上面的配置，"),n("code",[s._v("lerna version")]),s._v(" 在除 "),n("code",[s._v("master")]),s._v(" 之外的任何分支运行时都将失败。最佳实践是将 "),n("code",[s._v("lerna version")]),s._v(" 限制到主分支。")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"command"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"allowBranch"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"feature/*"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("在上面的配置中，"),n("code",[s._v("lerna version")]),s._v(" 将被允许出现在任何以 "),n("code",[s._v("feature/")]),s._v(" 为前缀的分支中。请注意，在 feature 分支中生成 git 标签会产生潜在的错误，因为这些分支会被合并到主分支中。如果标签和其原始上下文“分离”开来(可能通过 "),n("code",[s._v("squash merge")]),s._v(" 或 "),n("code",[s._v("conflicted merge")]),s._v(" 提交)，那么未来的 "),n("code",[s._v("lerna version")]),s._v(' 执行将很难确定正确的"自上一个版本以来的差异"。')]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna version --allow-branch hotfix/oops-fix-the-thing\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v('使用命令行会覆盖这个"持久"的配置，请谨慎使用。')])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--amend")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna version --amend\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 保留 commit 的消息，并跳过 git push")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("当使用该参数运行时，"),n("code",[s._v("lerna version")]),s._v(" 将对当前提交执行所有更改，而不是添加一个新的。这在持续集成(CI)期间非常有用，可以减少项目历史记录中的提交数量。")]),s._v(" "),n("p",[s._v("为了防止意外的覆盖，这个命令将跳过 "),n("code",[s._v("git push")]),s._v("(也就是说"),n("code",[s._v("--no-push")]),s._v(")。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--changelog-preset")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna version --conventional-commits --changelog-preset angular-bitbucket\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("默认情况下，changelog 预设值是 angular。在某些情况下，您可能需要使用另一个预设值或自定义一个。")]),s._v(" "),n("p",[s._v("预设值是常规更改日志的内置或可安装配置的名称。预设值可以作为包的全名或自动扩展的后缀进行传递(举个例子，angular 扩展为"),n("code",[s._v("conventional-changelog-angular")]),s._v(")。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--conventional-commits")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna version --conventional-commits\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("当您使用这个参数运行时，"),n("code",[s._v("lerna version")]),s._v(" 将使用传统的提交规范来确定版本并生成 CHANGELOG.md 文件。")]),s._v(" "),n("p",[s._v("传入 "),n("code",[s._v("--no-changelog")]),s._v(" 将阻止生成(或更新) CHANGELOG.md 文件。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--conventional-graduate")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna version --conventional-commits --conventional-graduate"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("package-2,package-4\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 强制分隔所有的预发行包")]),s._v("\nlerna version --conventional-commits --conventional-graduate\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("当使用该参数时，"),n("code",[s._v("lerna version")]),s._v(" 将使用 "),n("code",[s._v("*")]),s._v(" 分隔指定的包(用逗号隔开的)或所有的包。无论当前的HEAD是否已释放，该命令都可以工作，它和 "),n("code",[s._v("--force-publish")]),s._v(" 相类似，除了忽略任何非预发布包。如果未指定的包(如果指定了包)或未预先发布的包发生了更改，那么这些包将按照它们通常使用的 "),n("code",[s._v("--conventional-commits")]),s._v(" 提交的方式进行版本控制。")]),s._v(" "),n("p",[s._v('"分隔"一个软件包意味着一个预发布版本的非预发布版本变体。例如 '),n("code",[s._v("package-1@1.0.0-alpha.0 => package-1@1.0.0")]),s._v("。")]),s._v(" "),n("blockquote",[n("p",[s._v("注意：当指定包时，它的依赖项将被释放，但不会被分隔。")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--conventional-prerelease")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna version --conventional-commits --conventional-prerelease"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("package-2,package-4\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 强制所有发生改变的包变为预发布")]),s._v("\nlerna version --conventional-commits --conventional-prerelease\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("当使用该参数时，"),n("code",[s._v("lerna version")]),s._v(" 将使用 "),n("code",[s._v("*")]),s._v(" 分隔指定的包(用逗号隔开的)或所有的包。通过在 "),n("code",[s._v("conventional-commits")]),s._v(" 的版本推荐之前加上 "),n("code",[s._v("pre")]),s._v("，可以将所有未发布的更改作为 "),n("code",[s._v("pre")]),s._v(" ("),n("code",[s._v("patch/minor/major/release")]),s._v(")版来发布。如果当前的更改包含了特性提交，那么推荐的版本将成为 "),n("code",[s._v("minor")]),s._v("，因此该参数会使其成为 "),n("code",[s._v("preminor")]),s._v(" 发布。如果未指定的包(如果指定了包)或未预先发布的包发生了更改，那么这些包将按照它们通常使用的 "),n("code",[s._v("--conventional-commits")]),s._v(" 提交的方式进行版本控制。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--create-release <type>")])]),s._v(" "),n("p",[s._v("当使用该参数时，"),n("code",[s._v("lerna version")]),s._v(" 将基于更改的包创建一个正式的 GitHub 或 GitLab 版本。需要传递 "),n("code",[s._v("conventional-commits")]),s._v(" 以便生成变更日志。")]),s._v(" "),n("p",[s._v("要使用 Github 进行身份验证，可以定义以下环境变量。")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("GH_TOKEN")]),s._v("（必须）- 您的 GitHub 认证 token (在设置(Settings) > 开发人员设置(Developer Settings) > 个人访问令牌(Personal access tokens)下)。")]),s._v(" "),n("li",[n("code",[s._v("GHE_API_URL")]),s._v(" - 当使用 GitHub Enterprise 时，API 的绝对 URL。")]),s._v(" "),n("li",[n("code",[s._v("GHE_VERSION")]),s._v(" - 当使用 GitHub Enterprise 时，当前安装的 GHE 版本。")])]),s._v(" "),n("p",[s._v("要使用 GitLab 进行身份验证，可以定义以下环境变量。")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("GL_TOKEN")]),s._v("（必须）- 您的 GitLab 认证 token (在用户设置(User Settings) > 访问令牌(Access Tokens)下)")]),s._v(" "),n("li",[n("code",[s._v("GL_API_URL")]),s._v(" - API 的绝对URL，包括版本号。(默认值：https://gitlab.com/api/v4)")])]),s._v(" "),n("blockquote",[n("p",[s._v("注意\n当使用该配置项的时候，不要设置"),n("code",[s._v("--no-changelog")])])]),s._v(" "),n("p",[s._v("该配置项也可以在 lerna.json 中配置：")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"changelogPreset"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"angular"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("如果预先导出一个构件函数（如："),n("code",[s._v("conventional-changelog-conventionalcommits")]),s._v("），您也可以指定预设配置：")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"changelogPreset"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"conventionalcommits"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"issueUrlFormat"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{{host}}/{{owner}}/{{repository}}/issues/{{id}}"')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--exact")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna version --exact\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("当使用该参数时，"),n("code",[s._v("lerna version")]),s._v(" 将在更新的包中精确地指定更新过的依赖项(无标点符号)，而不做语义化版本号兼容(使用 "),n("code",[s._v("^")]),s._v(")。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--force-publish")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna version --force-publish"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("package-2,package-4\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 强制所有的包标上版本")]),s._v("\nlerna version --force-publish\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("当使用该参数时，"),n("code",[s._v("lerna version")]),s._v(" 将强制发布指定的包(逗号分隔)或使用 "),n("code",[s._v("*")]),s._v(" 发布所有包。")]),s._v(" "),n("blockquote",[n("p",[s._v("注意\n这将跳过以更改包的 "),n("code",[s._v("lerna changed")]),s._v(" 检查，并强制更新没有 "),n("code",[s._v("git diff")]),s._v(" 更改的包。")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--git-remote <name>")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna version --git-remote upstream\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("当使用该参数时，"),n("code",[s._v("lerna version")]),s._v(" 将把 "),n("code",[s._v("git")]),s._v(" 更改推送到指定的远程服务器，而不是 "),n("code",[s._v("origin")]),s._v("。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--ignore-changes")])]),s._v(" "),n("p",[s._v("当检测到更改的包时，忽略由通配符匹配到的文件中的更改。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna version --ignore-changes "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'**/*.md'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'**/__tests__/**'")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("该配置项最好通过 lerna.json 指定，既避免过早的 shell 验证也能够和 "),n("code",[s._v("lerna diff")]),s._v(" 及 "),n("code",[s._v("lerna changed")]),s._v(" 共享配置：")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"ignoreChanges"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"**/__fixtures__/**"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"**/__tests__/**"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"**/*.md"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("使用 "),n("code",[s._v("--no-ignore-changes")]),s._v(" 禁用任何现有的持久配置。")]),s._v(" "),n("blockquote",[n("p",[s._v("在下列情况下，无论该配置项如何设置，包都会发布：")]),s._v(" "),n("ol",[n("li",[s._v("该包的最新版本是 prerelease 版(即 "),n("code",[s._v("1.0.0-alpha")]),s._v("，"),n("code",[s._v("1.0.0-0.3.7")]),s._v(" 等等)。")]),s._v(" "),n("li",[s._v("包的一个或多个相关依赖项已发生更改。")])])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--ignore-scripts")])]),s._v(" "),n("p",[s._v("当使用该参数时，"),n("code",[s._v("lerna version")]),s._v("会在运行期间禁用生命周期脚本。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--include-merged-tags")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna version --include-merged-tags\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("在检测更改的包时包含合并分支的标记。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--message <msg>")])]),s._v(" "),n("p",[s._v("可简写为 "),n("code",[s._v("-m")]),s._v("，用于 "),n("code",[s._v("git commit")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna version -m "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"chore(release): publish %s"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# commit message = "chore(release): publish v1.0.0"')]),s._v("\n\nlerna version -m "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"chore(release): publish %v"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# commit message = "chore(release): publish 1.0.0"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当单独对包进行版本控制时，不会替换占位符")]),s._v("\nlerna version -m "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"chore(release): publish"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# commit message = "chore(release): publish')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - package-1@3.0.1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# - package-2@1.5.4"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("当使用该参数时，"),n("code",[s._v("lerna version")]),s._v(" 会在提交发布版本更新时使用所提供的消息。对于将 lerna 集成到期望提交消息遵守某些规则的项目中非常有用，例如使用 "),n("code",[s._v("commitizen")]),s._v(" 和 "),n("code",[s._v("/")]),s._v(" 或语义化版本发布的项目。")]),s._v(" "),n("p",[s._v("如果消息包含 "),n("code",[s._v("%s")]),s._v('，则将其替换为新的全局版本版本号，该版本号前缀为 "'),n("code",[s._v("v")]),s._v('"。如果消息包含 '),n("code",[s._v("%v")]),s._v('，它将被替换为新的全局版本版本号，但没有前缀 "'),n("code",[s._v("v")]),s._v('"。注意，这个占位符插值只在使用默认的"固定"版本模式时使用，因为在独立版本控制时没有"全局"版本可以进行插值。')]),s._v(" "),n("p",[s._v("在 lerna.json 中这样配置：")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"command"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"message"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"chore(release): publish %s"')]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--no-changelog")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna version --conventional-commits --no-changelog\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("使用 "),n("code",[s._v("--conventional-commits")]),s._v(" 时，不要生成任何 CHANGELOG.md 文件。")]),s._v(" "),n("blockquote",[n("p",[s._v("注意\n当使用该配置项的时候，不要设置 "),n("code",[s._v("--create-release")])])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--no-commit-hooks")])]),s._v(" "),n("p",[s._v("默认情况下，"),n("code",[s._v("lerna version")]),s._v(" 将允许 "),n("code",[s._v("git commit")]),s._v(" 钩子在提交版本更改时运行。通过 "),n("code",[s._v("——no-commit-hook")]),s._v(" 来禁用此行为。")]),s._v(" "),n("p",[s._v("该配置项类似于 "),n("code",[s._v("npm version")]),s._v(" 的 "),n("code",[s._v("--commit-hooks")]),s._v(" 配置项，只是反过来了。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--no-git-tag-version")])]),s._v(" "),n("p",[s._v("默认情况下，"),n("code",[s._v("lerna version")]),s._v(" 将提交对 package.json 文件的更改，并标记发行版。通过 "),n("code",[s._v("——no-git-tag-version")]),s._v(" 可以禁用该行为。")]),s._v(" "),n("p",[s._v("该配置项与 "),n("code",[s._v("npm version")]),s._v(" 的配置项 "),n("code",[s._v("--git-tag-version")]),s._v(" 相类似，只是反过来了。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--no-granular-pathspec")])]),s._v(" "),n("p",[s._v("默认情况下，"),n("code",[s._v("lerna version")]),s._v(" 将在 "),n("code",[s._v("git add")]),s._v(" 时只添加在版本控制过程中更改过的叶子包 manifest (可能还有更改日志)。这相当于 "),n("code",[s._v("git add -- packages/*/package.json")]),s._v("，但是精确地定制了变化。")]),s._v(" "),n("p",[s._v("如果您确定需要不同的行为，您就会理解：通过 "),n("code",[s._v("——no-granular-pathspec")]),s._v(" 来使 git 命令执行 "),n("code",[s._v("git add -- .")]),s._v("。通过设置 "),n("code",[s._v("pathspec")]),s._v("，您必须将所有秘密和构建输出适当地忽略掉，否则它们会被提交并推到仓库的。")]),s._v(" "),n("p",[s._v("通过lerna.json设置：")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"independent"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"granularPathspec"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("采用根级配置是有意为之，因为它还包括了 "),n("code",[s._v("lerna publish")]),s._v(" 中的同名配置项。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--no-private")])]),s._v(" "),n("p",[s._v("默认情况下，"),n("code",[s._v("lerna version")]),s._v(" 将在选择版本、提交和标记发布时包含私有包。我们可以通过 "),n("code",[s._v("--no-private")]),s._v(" 来禁用该行为。")]),s._v(" "),n("blockquote",[n("p",[s._v("注意\n该配置项并未将私有作用域的包排除在外，只会排除 package.json 文件中"),n("code",[s._v("private")]),s._v("字段设置为"),n("code",[s._v("true")]),s._v("的包。")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--no-push")])]),s._v(" "),n("p",[s._v("默认情况下，"),n("code",[s._v("lerna version")]),s._v(" 将提交和标记的更改推到已配置的 git 远程服务器。设置 "),n("code",[s._v("--no-push")]),s._v(" 来禁用此行为。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--preid")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna version prerelease\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用下一个语义化预发布版本，如：")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1.0.0 => 1.0.1-alpha.0")]),s._v("\n\nlerna version prepatch --preid next\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过制定的预发布标识符以使用下一个语义化预发布版本，如")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1.0.0 => 1.0.1-next.0")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("使用该参数时，"),n("code",[s._v("lerna version")]),s._v(" 将使用指定的 "),n("code",[s._v("prerelease")]),s._v(" 标识符递增 "),n("code",[s._v("premajor")]),s._v("、"),n("code",[s._v("preminor")]),s._v("、"),n("code",[s._v("prepatch")]),s._v(" 或 "),n("code",[s._v("prerelease")]),s._v(" 语义化版本号。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--sign-git-commit")])]),s._v(" "),n("p",[s._v("该配置项和 "),n("code",[s._v("npm version")]),s._v(" 的同名配置项相类似。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--sign-git-tag")])]),s._v(" "),n("p",[s._v("该配置项和 "),n("code",[s._v("npm version")]),s._v(" 的同名配置项相类似。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--force-git-tag")])]),s._v(" "),n("p",[s._v("该配置项将替换任意的现有标签，而非失败信息。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--tag-version-prefix")])]),s._v(" "),n("p",[s._v("该配置项允许设置自定义前缀，默认的前缀是: "),n("code",[s._v("v")]),s._v("。")]),s._v(" "),n("blockquote",[n("p",[s._v("目前您必须设置两次：分别对应 version 命令和 publish 命令。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 本地")]),s._v("\nlerna version --tag-version-prefix"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在 CI 上")]),s._v("\nlerna publish from-git --tag-version-prefix"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("--yes")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna version --yes\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 跳过 `Are you sure you want to publish these packages?`")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("当使用该参数运行时，"),n("code",[s._v("lerna version")]),s._v(" 将将跳过所有确认提示。在持续集成(CI)中用于自动回答发布确认提示。")])])])]),s._v(" "),n("li",[n("p",[s._v("生成初始的更新日志")]),s._v(" "),n("p",[s._v("如果您在 monorepo 启动一段时间后才开始使用 "),n("code",[s._v("--conventional-commits")]),s._v(" 配置项，您仍然可以使用 "),n("code",[s._v("conventional-changelog-cli")]),s._v(" 和 "),n("code",[s._v("lerna exec")]),s._v(" 为以前的版本生成更改日志。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lerna does not actually use conventional-changelog-cli, so you need to install it temporarily")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i -D conventional-changelog-cli\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Documentation: `npx conventional-changelog --help`")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fixed versioning (default)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# run in root, then leaves")]),s._v("\nnpx conventional-changelog --preset angular --release-count "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" --outfile ./CHANGELOG.md --verbose\nnpx lerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" --concurrency "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" --stream -- "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'conventional-changelog --preset angular --release-count 0 --commit-path $PWD --pkg $PWD/package.json --outfile $PWD/CHANGELOG.md --verbose'")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# independent versioning")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (no root changelog)")]),s._v("\nnpx lerna "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" --concurrency "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" --stream -- "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'conventional-changelog --preset angular --release-count 0 --commit-path $PWD --pkg $PWD/package.json --outfile $PWD/CHANGELOG.md --verbose --lerna-package $LERNA_PACKAGE_NAME'")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("如果您使用 "),n("code",[s._v("--changelog-preset")]),s._v(" 进行自定义，那么您应该相应地更改上面的示例中的 "),n("code",[s._v("--preset")]),s._v(" 值。")])])]),s._v(" "),n("h4",{attrs:{id:"lerna-diff-package"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lerna-diff-package"}},[s._v("#")]),s._v(" "),n("code",[s._v("lerna diff [package]")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("作用")]),s._v(" "),n("p",[s._v("获取上次发布后所有包或某个包的代码变更情况。")])]),s._v(" "),n("li",[n("p",[s._v("使用")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("lerna "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("package"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\nlerna "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示指定包的差异")]),s._v("\nlerna "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" package-name\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("底层依赖"),n("code",[s._v("git diff")]),s._v("实现。")])])]),s._v(" "),n("h4",{attrs:{id:"lerna-changed"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lerna-changed"}},[s._v("#")]),s._v(" "),n("code",[s._v("lerna changed")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("作用")]),s._v(" "),n("p",[s._v("列出自上次标记发布以来发生变化的本地包。")])]),s._v(" "),n("li",[n("p",[s._v("使用")]),s._v(" "),n("p",[n("code",[s._v("lerna changed")]),s._v("输出的是下一个 "),n("code",[s._v("lerna version")]),s._v(" 或 "),n("code",[s._v("lerna publish")]),s._v(" 执行后的包列表。")]),s._v(" "),n("blockquote",[n("p",[n("code",[s._v("lerna publish")]),s._v(" 和 "),n("code",[s._v("lerna version")]),s._v(" 的 lerna.json 配置也会影响 "),n("code",[s._v("lerna changed")]),s._v("。比如 "),n("code",[s._v("command.publish.ignoreChanges")]),s._v("。")])])]),s._v(" "),n("li",[n("p",[s._v("配置项")]),s._v(" "),n("p",[n("code",[s._v("lerna changed")]),s._v(" 支持 "),n("code",[s._v("lerna ls")]),s._v(" 的所有参数。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("--json\n--ndjson\n--a, --all\n-l, --long\n-p, --parseable\n--toposort\n--graph\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("和 "),n("code",[s._v("lerna ls")]),s._v(" 不同，"),n("code",[s._v("lerna changed")]),s._v(" 并不支持过滤器配置项，因为其本身并不为 "),n("code",[s._v("lerna version")]),s._v(" 或 "),n("code",[s._v("lerna publish")]),s._v(" 所支持。")]),s._v(" "),n("p",[n("code",[s._v("lerna changed")]),s._v(" 支持下列 "),n("code",[s._v("lerna version")]),s._v(" 的配置项(其他的都无关紧要了):")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("--conventional-graduate\n--force-publish\n--ignore-changes\n--include-merged-tags\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])])])]),s._v(" "),n("h4",{attrs:{id:"lerna-info"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lerna-info"}},[s._v("#")]),s._v(" "),n("code",[s._v("lerna info")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("作用")]),s._v(" "),n("p",[s._v("打印本地环境信息。")])]),s._v(" "),n("li",[n("p",[s._v("使用")]),s._v(" "),n("p",[n("code",[s._v("lerna info")]),s._v(" 打印的本地环境信息在提交 bug 报告时尤其有用。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("lerna notice cli v4.0.0\n\nEnvironment info:\n\nSystem:\n    OS: macOS 11.2.3\n    CPU: (8) arm64 Apple M1\nBinaries:\n    Node: 16.4.2 - ~/.nvm/versions/node/v16.4.2/bin/node\n    Yarn: 1.22.10 - ~/.nvm/versions/node/v16.4.2/bin/yarn\n    npm: 7.18.1 - ~/.nvm/versions/node/v16.4.2/bin/npm\nUtilities:\n    Git: 2.30.1 - /usr/bin/git\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])])])]),s._v(" "),n("h3",{attrs:{id:"_9-2-2-lerna原理解析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-2-lerna原理解析"}},[s._v("#")]),s._v(" 9.2.2 lerna原理解析")]),s._v(" "),n("h3",{attrs:{id:"文件结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#文件结构"}},[s._v("#")]),s._v(" 文件结构")]),s._v(" "),n("p",[s._v("以下是 lerna 的主要目录结构（省略了一些文件和文件夹）：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("lerna\n├─ CHANGELOG.md -- 更新日志\n├─ README.md -- 文档\n├─ commands -- 核心子模块\n├─ core -- 核心子模块\n├─ utils -- 核心子模块\n├─ lerna.json -- lerna 配置文件\n├─ package-lock.json -- 依赖声明\n├─ package.json -- 依赖声明\n├─ scripts -- 内置脚本\n└─ yarn.lock -- 依赖声明\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("有趣的是，lerna 本身也是用 lerna 进行开发管理的。它是一个 monorepo 项目，其各个子项目分布在 "),n("code",[s._v("lerna/commands/*、core/*、utils/*")]),s._v("目 录下。")]),s._v(" "),n("p",[s._v("另外，在源码中，经常会看到名称为 "),n("code",[s._v("@lerna/command")]),s._v(" 的子项目，如 "),n("code",[s._v("lerna/core/lerna/index.js")]),s._v(" 的内容是：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" cli "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/cli"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" addCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/add/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" bootstrapCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/bootstrap/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" changedCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/changed/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" cleanCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/clean/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" createCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/create/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" diffCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/diff/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" execCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/exec/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" importCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/import/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" infoCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/info/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" initCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/init/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" linkCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/link/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" listCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/list/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" publishCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/publish/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" runCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/run/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" versionCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/version/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("这些子项目分布在 "),n("code",[s._v("lerna/commands/*、core/*、utils/*")]),s._v(" 下，截至本书截稿时，lerna有 61 个子项目。")]),s._v(" "),n("p",[s._v("以下是各子项目分布：")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("相对路径")]),s._v(" "),n("th",[s._v("package 名称")]),s._v(" "),n("th",[s._v("作用")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[n("code",[s._v("lerna/commands/add")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/add")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/commands/bootstrap")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/bootstrap")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/commands/changed")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/changed")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/commands/clean")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/clean")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/commands/create")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/create")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/commands/diff")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/diff")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/commands/exec")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/exec")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/commands/import")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/import")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/commands/info")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/info")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/commands/init")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/init")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/commands/link")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/link")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/commands/list")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/list")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/commands/publish")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/publish")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/commands/run")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/run")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/commands/version")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/version")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/core/child-process")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/child-process")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/core/cli")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/cli")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/core/command")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/command")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/core/conventional-commits")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/conventional-commits")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/core/filter-options")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/filter-options")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/core/global-options")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/global-options")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/core/lerna")])]),s._v(" "),n("td",[n("code",[s._v("lerna")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/core/otplease")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/otplease")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/core/package")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/package")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/core/package-graph")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/package-graph")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/core/project")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/project")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/core/prompt")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/prompt")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/core/validation-error")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/validation-error")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/check-working-tree")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/check-working-tree")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/check-uncommitted")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/check-uncommitted")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/check-updates")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/check-updates")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/check-symlink")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/check-symlink")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/describe-ref")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/describe-ref")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/filter-packages")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/filter-packages")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/get-npm-exec-opts")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/get-npm-exec-opts")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/get-packed")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/get-packed")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/github-client")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/github-client")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/gitlab-client")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/gitlab-client")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/has-npm-version")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/has-npm-version")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/listable")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/listable")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/log-packed")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/log-packed")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/map-to-registry")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/map-to-registry")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/npm-conf")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/npm-conf")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/npm-dist-tag")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/npm-dist-tag")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/npm-install")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/npm-install")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/npm-publish")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/npm-publish")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/npm-run-script")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/npm-run-script")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/output")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/output")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/pack-directory")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/pack-directory")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/prerelease-id-from-version")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/prerelease-id-from-version")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/profiler")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/profiler")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/pluse-till-done")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/pluse-till-done")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/query-graph")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/query-graph")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/resolve-symlink")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/resolve-symlink")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/rimraf-dir")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/rimraf-dir")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/run-lifecycle")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/run-lifecycle")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/run-topologically")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/run-topologically")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/symlink-binary")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/symlink-binary")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/symlink-dependencies")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/symlink-dependencies")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/timer")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/timer")])]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[n("code",[s._v("lerna/utils/write-log-file")])]),s._v(" "),n("td",[n("code",[s._v("@lerna/write-log-file")])]),s._v(" "),n("td")])])]),s._v(" "),n("h3",{attrs:{id:"命令行注册"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#命令行注册"}},[s._v("#")]),s._v(" 命令行注册")]),s._v(" "),n("p",[s._v("lerna 命令注册工作集中在 "),n("code",[s._v("lerna/core/lerna/*")]),s._v(" 路径下。")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("lerna/core/lerna/package.json")])]),s._v(" "),n("p",[s._v("该文件的 "),n("code",[s._v("bin")]),s._v(" 字段定义了 "),n("code",[s._v("lerna")]),s._v(" 命令：")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"bin"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"lerna"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cli.js"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("lerna/core/lerna/cli.js")])]),s._v(" "),n("p",[s._v("该文件描述了命令行的执行入口：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token hashbang comment"}},[s._v("#!/usr/bin/env node")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"use strict"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* eslint-disable import/no-dynamic-require, global-require */")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" importLocal "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"import-local"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("importLocal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npmlog"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("info")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cli"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"using local version of lerna"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("slice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("lerna/core/lerna/index.js")])]),s._v(" "),n("p",[s._v("该文件为命令行引入了所有 lerna 指令：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"use strict"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" cli "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/cli"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" addCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/add/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" bootstrapCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/bootstrap/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" changedCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/changed/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" cleanCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/clean/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" createCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/create/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" diffCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/diff/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" execCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/exec/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" importCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/import/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" infoCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/info/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" initCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/init/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" linkCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/link/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" listCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/list/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" publishCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/publish/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" runCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/run/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" versionCmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/version/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" pkg "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./package.json"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("argv")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" context "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("lernaVersion")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" pkg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("version"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cli")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("addCmd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bootstrapCmd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("changedCmd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cleanCmd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("createCmd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("diffCmd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("execCmd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("importCmd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("infoCmd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("initCmd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("linkCmd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("listCmd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("publishCmd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("runCmd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("versionCmd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("parse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("Commander")]),s._v(" 类")]),s._v(" "),n("p",[s._v("lerna 的子命令均继承自 "),n("code",[s._v("Command")]),s._v(" 类，比如 "),n("code",[s._v("lerna init")]),s._v(" 命令定义为：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" Command "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@lerna/command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InitCommand")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Command")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[n("code",[s._v("Command")]),s._v(" 类定义在 "),n("code",[s._v("@lerna/command")]),s._v("，位于 "),n("code",[s._v("lerna/core/command")]),s._v(" 目录。")]),s._v(" "),n("p",[s._v("有一些写法值得借鉴，比如个别方法需要 "),n("code",[s._v("InitCommand")]),s._v(" 的实例自行定义，否则抛错，"),n("code",[s._v("InitCommand")]),s._v(" 类的定义如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InitCommand")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Command")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("initialize")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ValidationError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"initialize() needs to be implemented."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("execute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ValidationError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"execute() needs to be implemented."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("import-local")])]),s._v(" "),n("p",[s._v("上文提到，"),n("code",[s._v("lerna/core/lerna/cli.js")]),s._v(" 描述了命令行的执行入口：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token hashbang comment"}},[s._v("#!/usr/bin/env node")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"use strict"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* eslint-disable import/no-dynamic-require, global-require */")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" importLocal "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"import-local"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("importLocal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npmlog"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("info")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cli"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"using local version of lerna"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("slice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("其中，"),n("code",[s._v("import-local")]),s._v(" 的作用是，实现本地开发版本和生产版本的切换。"),n("code",[s._v("import-local/index.js")]),s._v(" 的内容是：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'use strict'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" path "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'path'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" resolveCwd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'resolve-cwd'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" pkgDir "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pkg-dir'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("exports")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("filename")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" globalDir "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" pkgDir"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("dirname")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" relativePath "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("relative")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("globalDir"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" pkg "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("globalDir"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'package.json'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" localFile "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" resolveCwd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("silent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pkg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" relativePath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" localNodeModules "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cwd")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'node_modules'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" filenameInLocalNodeModules "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("relative")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("localNodeModules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("startsWith")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'..'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Use `path.relative()` to detect local package installation,")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// because __filename's case is inconsistent on Windows")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Can use `===` when targeting Node.js 8")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// See https://github.com/nodejs/node/issues/6624")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("filenameInLocalNodeModules "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" localFile "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("relative")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("localFile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("localFile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("原理解析：TODO")])])]),s._v(" "),n("h3",{attrs:{id:"依赖管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#依赖管理"}},[s._v("#")]),s._v(" 依赖管理")]),s._v(" "),n("p",[s._v("Babel使用 "),n("code",[s._v("lerna")]),s._v(" 进行依赖管理。其中，"),n("code",[s._v("lerna")]),s._v(" 自己实现了一套依赖管理机制，也支持基于 "),n("code",[s._v("yarn")]),s._v(" 的依赖管理。")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("yarn的依赖管理")]),s._v(" "),n("p",[s._v("pnp: https://loveky.github.io/2019/02/11/yarn-pnp/")]),s._v(" "),n("p",[s._v("官网: https://yarnpkg.com/features/pnp")]),s._v(" "),n("p",[s._v("https://www.yuque.com/allenstone/learn/deb1n1")]),s._v(" "),n("p",[s._v("对比: https://www.qiyuandi.com/zhanzhang/zonghe/12444.html")])]),s._v(" "),n("li",[n("p",[s._v("lerna 的 "),n("code",[s._v("hoisting")])]),s._v(" "),n("p",[s._v("子模块相同的依赖可以通过依赖提升（"),n("code",[s._v("hoisting")]),s._v("），将相同的依赖安装在根目录下，本地包之间用软连接实现。")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("lerna bootstrap")])]),s._v(" "),n("p",[s._v("该命令执行时，会在每个子项目下面，各自安装其中 package.json 声明的依赖。")]),s._v(" "),n("p",[s._v("这样会有一个问题，相同的依赖会被重复安装，除了占用更多空间外，依赖安装速度也受影响。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("lerna bootstrap --hoist")])]),s._v(" "),n("p",[n("code",[s._v("--hoist")]),s._v(" 标记时，"),n("code",[s._v("lerna bootstrap")]),s._v(" 会识别子项目下名称和版本号相同的依赖，并将其安装在根目录的 "),n("code",[s._v("node_modules")]),s._v(" 下，子项目的 "),n("code",[s._v("node_modules")]),s._v(" 会生成软连接。")]),s._v(" "),n("p",[s._v("这样节省了空间，也减少了依赖安装的耗时。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("yarn install")])]),s._v(" "),n("p",[s._v("当在项目中声明 "),n("code",[s._v("yarn")]),s._v(" 作为依赖安装的底层依赖，如：")]),s._v(" "),n("p",[s._v("lerna.json")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"npmClient"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yarn"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"useWorkspaces"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("package.json")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"workspaces"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"packages/*"')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("相对于 "),n("code",[s._v("lerna")]),s._v("，"),n("code",[s._v("yarn")]),s._v(" 提供了更强大的依赖分析能力、hoisting 算法。而且，默认情况下，yarn 会开启 "),n("code",[s._v("hoist")]),s._v(" 功能，也可以设置 "),n("code",[s._v("nohoist")]),s._v(" 关闭该功能：")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"workspaces"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"packages"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Packages/*"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"nohoist"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"**"')]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])])])])])]),s._v(" "),n("h3",{attrs:{id:"git相关"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#git相关"}},[s._v("#")]),s._v(" Git相关")]),s._v(" "),n("p",[s._v("lerna 中广泛使用了 Git 命令用于内部工作，这里列举了 lerna 中使用的 Git 命令。")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("git init")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git rev-parse")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git describe")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git rev-list")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git tag")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git log")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git config")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git diff-index")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git --version")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git show")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git am")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git reset")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git ls-files")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git diff-tree")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git commit")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git ls-remote")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git checkout")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git push")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git add")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git remote")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("git show-ref")])])])]),s._v(" "),n("h2",{attrs:{id:"_9-3-todo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-todo"}},[s._v("#")]),s._v(" 9.3 TODO")])])}),[],!1,null,null,null);a.default=t.exports}}]);